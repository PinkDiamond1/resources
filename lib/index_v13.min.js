!function(){function e(e){return e&&e.__esModule?e.default:e}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};function r(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}function n(e,t){return Object.keys(t).forEach((function(r){"default"!==r&&"__esModule"!==r&&Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[r]}})})),e}var i={},o={},s=t.parcelRequirefa1f;null==s&&((s=function(e){if(e in i)return i[e].exports;if(e in o){var t=o[e];delete o[e];var r={id:e,exports:{}};return i[e]=r,t.call(r.exports,r,r.exports),r.exports}var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){o[e]=t},t.parcelRequirefa1f=s);var a={};(a=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}).default=a,a.__esModule=!0;var c={};function u(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}(c=function(e,t,r){return t&&u(e.prototype,t),r&&u(e,r),e}).default=c,c.__esModule=!0;var d={};(d=function(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}).default=d,d.__esModule=!0;var f={};function l(e,t,r,n,i,o,s){try{var a=e[o](s),c=a.value}catch(e){return void r(e)}a.done?t(c):Promise.resolve(c).then(n,i)}f=function(e){return function(){var t=this,r=arguments;return new Promise((function(n,i){var o=e.apply(t,r);function s(e){l(o,n,i,s,a,"next",e)}function a(e){l(o,n,i,s,a,"throw",e)}s(void 0)}))}},f.default=f,f.__esModule=!0;var h;function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}s.register("h4bBx",(function(e,t){var r=function(e){var t,r=Object.prototype,n=r.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",a=i.toStringTag||"@@toStringTag";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},"")}catch(e){c=function(e,t,r){return e[t]=r}}function u(e,t,r,n){var i=t&&t.prototype instanceof y?t:y,o=Object.create(i.prototype),s=new N(n||[]);return o._invoke=function(e,t,r){var n=f;return function(i,o){if(n===h)throw new Error("Generator is already running");if(n===p){if("throw"===i)throw o;return H()}for(r.method=i,r.arg=o;;){var s=r.delegate;if(s){var a=S(s,r);if(a){if(a===m)continue;return a}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===f)throw n=p,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=h;var c=d(e,t,r);if("normal"===c.type){if(n=r.done?p:l,c.arg===m)continue;return{value:c.arg,done:r.done}}"throw"===c.type&&(n=p,r.method="throw",r.arg=c.arg)}}}(e,r,s),o}function d(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var f="suspendedStart",l="suspendedYield",h="executing",p="completed",m={};function y(){}function b(){}function g(){}var v={};c(v,o,(function(){return this}));var w=Object.getPrototypeOf,x=w&&w(w(O([])));x&&x!==r&&n.call(x,o)&&(v=x);var P=g.prototype=y.prototype=Object.create(v);function k(e){["next","throw","return"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function T(e,t){function r(i,o,s,a){var c=d(e[i],e,o);if("throw"!==c.type){var u=c.arg,f=u.value;return f&&"object"==typeof f&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,s,a)}),(function(e){r("throw",e,s,a)})):t.resolve(f).then((function(e){u.value=e,s(u)}),(function(e){return r("throw",e,s,a)}))}a(c.arg)}var i;this._invoke=function(e,n){function o(){return new t((function(t,i){r(e,n,t,i)}))}return i=i?i.then(o,o):o()}}function S(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,S(e,r),"throw"===r.method))return m;r.method="throw",r.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var i=d(n,e.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,m;var o=i.arg;return o?o.done?(r[e.resultName]=o.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,m):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,m)}function M(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function A(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function N(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(M,this),this.reset(!0)}function O(e){if(e){var r=e[o];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,s=function r(){for(;++i<e.length;)if(n.call(e,i))return r.value=e[i],r.done=!1,r;return r.value=t,r.done=!0,r};return s.next=s}}return{next:H}}function H(){return{value:t,done:!0}}return b.prototype=g,c(P,"constructor",g),c(g,"constructor",b),b.displayName=c(g,a,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,c(e,a,"GeneratorFunction")),e.prototype=Object.create(P),e},e.awrap=function(e){return{__await:e}},k(T.prototype),c(T.prototype,s,(function(){return this})),e.AsyncIterator=T,e.async=function(t,r,n,i,o){void 0===o&&(o=Promise);var s=new T(u(t,r,n,i),o);return e.isGeneratorFunction(r)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},k(P),c(P,a,"Generator"),c(P,o,(function(){return this})),c(P,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=O,N.prototype={constructor:N,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(A),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function i(n,i){return a.type="throw",a.arg=e,r.next=n,i&&(r.method="next",r.arg=t),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var s=this.tryEntries[o],a=s.completion;if("root"===s.tryLoc)return i("end");if(s.tryLoc<=this.prev){var c=n.call(s,"catchLoc"),u=n.call(s,"finallyLoc");if(c&&u){if(this.prev<s.catchLoc)return i(s.catchLoc,!0);if(this.prev<s.finallyLoc)return i(s.finallyLoc)}else if(c){if(this.prev<s.catchLoc)return i(s.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<s.finallyLoc)return i(s.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=t,o?(this.method="next",this.next=o.finallyLoc,m):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),A(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var i=n.arg;A(r)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:O(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),m}},e}(e.exports);try{regeneratorRuntime=r}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}})),h=s("h4bBx");const m="undefined"!=typeof globalThis?globalThis:void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this");const y=void 0===m.TextDecoder?class{constructor(e){}decode(e){let t="";for(let r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t}}:m.TextDecoder;const b=void 0===m.TextEncoder?class{encode(e){const t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t}}:m.TextEncoder,g={name:"@polkadot/util",version:"7.9.2"};function v(e){return"function"==typeof e}function w(e){return"string"==typeof e||e instanceof String}function x(e){return null===e}function P(e){return void 0===e}function k(e,t){if(!e)throw new Error(v(t)?t():t)}function T(e,t){return k(!P(e)&&!x(e),t),e}const S="Either remove and explicitly install matching versions or dedupe using your package manager.\nThe following conflicting packages were found:";function M(e){let t=0;for(const{version:r}of e)t=Math.max(t,r.length);return t}function A(e){if(v(e))try{return e()||""}catch(e){return""}return e||""}function N({name:e,version:t},r,n=[]){k(e.startsWith("@polkadot"),(()=>`Invalid package descriptor ${e}`));const i=function(e){const t=m;return t.__polkadotjs||(t.__polkadotjs={}),t.__polkadotjs[e]||(t.__polkadotjs[e]=[]),t.__polkadotjs[e]}(e);if(i.push({path:A(r),version:t}),1!==i.length)console.warn(`${e} has multiple versions, ensure that there is only one installed.\n${S}\n${function(e){const t=e.map((e=>w(e)?{version:e}:e)),r=M(t);return t.map((({path:e,version:t})=>`\t${t.padEnd(r)}\t${!e||e.length<5?"<unknown>":e}`)).join("\n")}(i)}`);else{const r=n.filter((e=>e&&e.version!==t));r.length&&console.warn(`${e} requires direct dependencies exactly matching version ${t}.\n${S}\n${function(e){const t=M(e);return e.map((({name:e,version:r})=>`\t${r.padEnd(t)}\t${e}`)).join("\n")}(r)}`)}}var O="node_modules/@polkadot/util";function H(e,t){const r=Math.ceil(e.length/t),n=Array(r);for(let i=0;i<r;i++){const r=i*t;n[i]=e.slice(r,r+t)}return n}function I(e){let t=0;for(let r=0;r<e.length;r++)t+=e[r].length;const r=new Array(t);let n=-1;for(let t=0;t<e.length;t++){const i=e[t];for(let e=0;e<i.length;e++)r[++n]=i[e]}return r}N(g,O,[{name:"@polkadot/x-textdecoder",version:"7.9.2"},{name:"@polkadot/x-textencoder",version:"7.9.2"}]),s.register("ctT9w",(function(e,t){!function(e,t){function r(e,t){if(!e)throw new Error(t||"Assertion failed")}function n(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}function i(e,t,r){if(i.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(r=t,t=10),this._init(e||0,t||10,r||"be"))}var o;"object"==typeof e?e.exports=i:t.BN=i,i.BN=i,i.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:s("h9a5C").Buffer}catch(e){}function a(e,t){var r=e.charCodeAt(t);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function c(e,t,r){var n=a(e,r);return r-1>=t&&(n|=a(e,r-1)<<4),n}function u(e,t,r,n){for(var i=0,o=Math.min(e.length,r),s=t;s<o;s++){var a=e.charCodeAt(s)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}i.isBN=function(e){return e instanceof i||null!==e&&"object"==typeof e&&e.constructor.wordSize===i.wordSize&&Array.isArray(e.words)},i.max=function(e,t){return e.cmp(t)>0?e:t},i.min=function(e,t){return e.cmp(t)<0?e:t},i.prototype._init=function(e,t,n){if("number"==typeof e)return this._initNumber(e,t,n);if("object"==typeof e)return this._initArray(e,t,n);"hex"===t&&(t=16),r(t===(0|t)&&t>=2&&t<=36);var i=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<e.length&&(16===t?this._parseHex(e,i,n):(this._parseBase(e,t,i),"le"===n&&this._initArray(this.toArray(),t,n)))},i.prototype._initNumber=function(e,t,n){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(r(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===n&&this._initArray(this.toArray(),t,n)},i.prototype._initArray=function(e,t,n){if(r("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,s,a=0;if("be"===n)for(i=e.length-1,o=0;i>=0;i-=3)s=e[i]|e[i-1]<<8|e[i-2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);else if("le"===n)for(i=0,o=0;i<e.length;i+=3)s=e[i]|e[i+1]<<8|e[i+2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);return this.strip()},i.prototype._parseHex=function(e,t,r){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,o=0,s=0;if("be"===r)for(n=e.length-1;n>=t;n-=2)i=c(e,t,n)<<o,this.words[s]|=67108863&i,o>=18?(o-=18,s+=1,this.words[s]|=i>>>26):o+=8;else for(n=(e.length-t)%2==0?t+1:t;n<e.length;n+=2)i=c(e,t,n)<<o,this.words[s]|=67108863&i,o>=18?(o-=18,s+=1,this.words[s]|=i>>>26):o+=8;this.strip()},i.prototype._parseBase=function(e,t,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=t)n++;n--,i=i/t|0;for(var o=e.length-r,s=o%n,a=Math.min(o,o-s)+r,c=0,d=r;d<a;d+=n)c=u(e,d,d+n,t),this.imuln(i),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c);if(0!==s){var f=1;for(c=u(e,d,e.length,t),d=0;d<s;d++)f*=t;this.imuln(f),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c)}this.strip()},i.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},i.prototype.clone=function(){var e=new i(null);return this.copy(e),e},i.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},i.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},i.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},i.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var d=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],f=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],l=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function h(e,t,r){r.negative=t.negative^e.negative;var n=e.length+t.length|0;r.length=n,n=n-1|0;var i=0|e.words[0],o=0|t.words[0],s=i*o,a=67108863&s,c=s/67108864|0;r.words[0]=a;for(var u=1;u<n;u++){for(var d=c>>>26,f=67108863&c,l=Math.min(u,t.length-1),h=Math.max(0,u-e.length+1);h<=l;h++){var p=u-h|0;d+=(s=(i=0|e.words[p])*(o=0|t.words[h])+f)/67108864|0,f=67108863&s}r.words[u]=0|f,c=0|d}return 0!==c?r.words[u]=0|c:r.length--,r.strip()}i.prototype.toString=function(e,t){var n;if(t=0|t||1,16===(e=e||10)||"hex"===e){n="";for(var i=0,o=0,s=0;s<this.length;s++){var a=this.words[s],c=(16777215&(a<<i|o)).toString(16);n=0!==(o=a>>>24-i&16777215)||s!==this.length-1?d[6-c.length]+c+n:c+n,(i+=2)>=26&&(i-=26,s--)}for(0!==o&&(n=o.toString(16)+n);n.length%t!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}if(e===(0|e)&&e>=2&&e<=36){var u=f[e],h=l[e];n="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(h).toString(e);n=(p=p.idivn(h)).isZero()?m+n:d[u-m.length]+m+n}for(this.isZero()&&(n="0"+n);n.length%t!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}r(!1,"Base should be between 2 and 36")},i.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},i.prototype.toJSON=function(){return this.toString(16)},i.prototype.toBuffer=function(e,t){return r(void 0!==o),this.toArrayLike(o,e,t)},i.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},i.prototype.toArrayLike=function(e,t,n){var i=this.byteLength(),o=n||Math.max(1,i);r(i<=o,"byte array longer than desired length"),r(o>0,"Requested array length <= 0"),this.strip();var s,a,c="le"===t,u=new e(o),d=this.clone();if(c){for(a=0;!d.isZero();a++)s=d.andln(255),d.iushrn(8),u[a]=s;for(;a<o;a++)u[a]=0}else{for(a=0;a<o-i;a++)u[a]=0;for(a=0;!d.isZero();a++)s=d.andln(255),d.iushrn(8),u[o-a-1]=s}return u},Math.clz32?i.prototype._countBits=function(e){return 32-Math.clz32(e)}:i.prototype._countBits=function(e){var t=e,r=0;return t>=4096&&(r+=13,t>>>=13),t>=64&&(r+=7,t>>>=7),t>=8&&(r+=4,t>>>=4),t>=2&&(r+=2,t>>>=2),r+t},i.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,r=0;return 0==(8191&t)&&(r+=13,t>>>=13),0==(127&t)&&(r+=7,t>>>=7),0==(15&t)&&(r+=4,t>>>=4),0==(3&t)&&(r+=2,t>>>=2),0==(1&t)&&r++,r},i.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},i.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);if(e+=r,26!==r)break}return e},i.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},i.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},i.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},i.prototype.isNeg=function(){return 0!==this.negative},i.prototype.neg=function(){return this.clone().ineg()},i.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},i.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this.strip()},i.prototype.ior=function(e){return r(0==(this.negative|e.negative)),this.iuor(e)},i.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},i.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},i.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var r=0;r<t.length;r++)this.words[r]=this.words[r]&e.words[r];return this.length=t.length,this.strip()},i.prototype.iand=function(e){return r(0==(this.negative|e.negative)),this.iuand(e)},i.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},i.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},i.prototype.iuxor=function(e){var t,r;this.length>e.length?(t=this,r=e):(t=e,r=this);for(var n=0;n<r.length;n++)this.words[n]=t.words[n]^r.words[n];if(this!==t)for(;n<t.length;n++)this.words[n]=t.words[n];return this.length=t.length,this.strip()},i.prototype.ixor=function(e){return r(0==(this.negative|e.negative)),this.iuxor(e)},i.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},i.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},i.prototype.inotn=function(e){r("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),n=e%26;this._expand(t),n>0&&t--;for(var i=0;i<t;i++)this.words[i]=67108863&~this.words[i];return n>0&&(this.words[i]=~this.words[i]&67108863>>26-n),this.strip()},i.prototype.notn=function(e){return this.clone().inotn(e)},i.prototype.setn=function(e,t){r("number"==typeof e&&e>=0);var n=e/26|0,i=e%26;return this._expand(n+1),this.words[n]=t?this.words[n]|1<<i:this.words[n]&~(1<<i),this.strip()},i.prototype.iadd=function(e){var t,r,n;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(r=this,n=e):(r=e,n=this);for(var i=0,o=0;o<n.length;o++)t=(0|r.words[o])+(0|n.words[o])+i,this.words[o]=67108863&t,i=t>>>26;for(;0!==i&&o<r.length;o++)t=(0|r.words[o])+i,this.words[o]=67108863&t,i=t>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this},i.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},i.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var r,n,i=this.cmp(e);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=e):(r=e,n=this);for(var o=0,s=0;s<n.length;s++)o=(t=(0|r.words[s])-(0|n.words[s])+o)>>26,this.words[s]=67108863&t;for(;0!==o&&s<r.length;s++)o=(t=(0|r.words[s])+o)>>26,this.words[s]=67108863&t;if(0===o&&s<r.length&&r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this.length=Math.max(this.length,s),r!==this&&(this.negative=1),this.strip()},i.prototype.sub=function(e){return this.clone().isub(e)};var p=function(e,t,r){var n,i,o,s=e.words,a=t.words,c=r.words,u=0,d=0|s[0],f=8191&d,l=d>>>13,h=0|s[1],p=8191&h,m=h>>>13,y=0|s[2],b=8191&y,g=y>>>13,v=0|s[3],w=8191&v,x=v>>>13,P=0|s[4],k=8191&P,T=P>>>13,S=0|s[5],M=8191&S,A=S>>>13,N=0|s[6],O=8191&N,H=N>>>13,I=0|s[7],V=8191&I,E=I>>>13,z=0|s[8],C=8191&z,j=z>>>13,L=0|s[9],R=8191&L,B=L>>>13,D=0|a[0],X=8191&D,q=D>>>13,W=0|a[1],F=8191&W,U=W>>>13,G=0|a[2],Z=8191&G,Y=G>>>13,J=0|a[3],K=8191&J,Q=J>>>13,_=0|a[4],$=8191&_,ee=_>>>13,te=0|a[5],re=8191&te,ne=te>>>13,ie=0|a[6],oe=8191&ie,se=ie>>>13,ae=0|a[7],ce=8191&ae,ue=ae>>>13,de=0|a[8],fe=8191&de,le=de>>>13,he=0|a[9],pe=8191&he,me=he>>>13;r.negative=e.negative^t.negative,r.length=19;var ye=(u+(n=Math.imul(f,X))|0)+((8191&(i=(i=Math.imul(f,q))+Math.imul(l,X)|0))<<13)|0;u=((o=Math.imul(l,q))+(i>>>13)|0)+(ye>>>26)|0,ye&=67108863,n=Math.imul(p,X),i=(i=Math.imul(p,q))+Math.imul(m,X)|0,o=Math.imul(m,q);var be=(u+(n=n+Math.imul(f,F)|0)|0)+((8191&(i=(i=i+Math.imul(f,U)|0)+Math.imul(l,F)|0))<<13)|0;u=((o=o+Math.imul(l,U)|0)+(i>>>13)|0)+(be>>>26)|0,be&=67108863,n=Math.imul(b,X),i=(i=Math.imul(b,q))+Math.imul(g,X)|0,o=Math.imul(g,q),n=n+Math.imul(p,F)|0,i=(i=i+Math.imul(p,U)|0)+Math.imul(m,F)|0,o=o+Math.imul(m,U)|0;var ge=(u+(n=n+Math.imul(f,Z)|0)|0)+((8191&(i=(i=i+Math.imul(f,Y)|0)+Math.imul(l,Z)|0))<<13)|0;u=((o=o+Math.imul(l,Y)|0)+(i>>>13)|0)+(ge>>>26)|0,ge&=67108863,n=Math.imul(w,X),i=(i=Math.imul(w,q))+Math.imul(x,X)|0,o=Math.imul(x,q),n=n+Math.imul(b,F)|0,i=(i=i+Math.imul(b,U)|0)+Math.imul(g,F)|0,o=o+Math.imul(g,U)|0,n=n+Math.imul(p,Z)|0,i=(i=i+Math.imul(p,Y)|0)+Math.imul(m,Z)|0,o=o+Math.imul(m,Y)|0;var ve=(u+(n=n+Math.imul(f,K)|0)|0)+((8191&(i=(i=i+Math.imul(f,Q)|0)+Math.imul(l,K)|0))<<13)|0;u=((o=o+Math.imul(l,Q)|0)+(i>>>13)|0)+(ve>>>26)|0,ve&=67108863,n=Math.imul(k,X),i=(i=Math.imul(k,q))+Math.imul(T,X)|0,o=Math.imul(T,q),n=n+Math.imul(w,F)|0,i=(i=i+Math.imul(w,U)|0)+Math.imul(x,F)|0,o=o+Math.imul(x,U)|0,n=n+Math.imul(b,Z)|0,i=(i=i+Math.imul(b,Y)|0)+Math.imul(g,Z)|0,o=o+Math.imul(g,Y)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,Q)|0)+Math.imul(m,K)|0,o=o+Math.imul(m,Q)|0;var we=(u+(n=n+Math.imul(f,$)|0)|0)+((8191&(i=(i=i+Math.imul(f,ee)|0)+Math.imul(l,$)|0))<<13)|0;u=((o=o+Math.imul(l,ee)|0)+(i>>>13)|0)+(we>>>26)|0,we&=67108863,n=Math.imul(M,X),i=(i=Math.imul(M,q))+Math.imul(A,X)|0,o=Math.imul(A,q),n=n+Math.imul(k,F)|0,i=(i=i+Math.imul(k,U)|0)+Math.imul(T,F)|0,o=o+Math.imul(T,U)|0,n=n+Math.imul(w,Z)|0,i=(i=i+Math.imul(w,Y)|0)+Math.imul(x,Z)|0,o=o+Math.imul(x,Y)|0,n=n+Math.imul(b,K)|0,i=(i=i+Math.imul(b,Q)|0)+Math.imul(g,K)|0,o=o+Math.imul(g,Q)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,ee)|0)+Math.imul(m,$)|0,o=o+Math.imul(m,ee)|0;var xe=(u+(n=n+Math.imul(f,re)|0)|0)+((8191&(i=(i=i+Math.imul(f,ne)|0)+Math.imul(l,re)|0))<<13)|0;u=((o=o+Math.imul(l,ne)|0)+(i>>>13)|0)+(xe>>>26)|0,xe&=67108863,n=Math.imul(O,X),i=(i=Math.imul(O,q))+Math.imul(H,X)|0,o=Math.imul(H,q),n=n+Math.imul(M,F)|0,i=(i=i+Math.imul(M,U)|0)+Math.imul(A,F)|0,o=o+Math.imul(A,U)|0,n=n+Math.imul(k,Z)|0,i=(i=i+Math.imul(k,Y)|0)+Math.imul(T,Z)|0,o=o+Math.imul(T,Y)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,Q)|0)+Math.imul(x,K)|0,o=o+Math.imul(x,Q)|0,n=n+Math.imul(b,$)|0,i=(i=i+Math.imul(b,ee)|0)+Math.imul(g,$)|0,o=o+Math.imul(g,ee)|0,n=n+Math.imul(p,re)|0,i=(i=i+Math.imul(p,ne)|0)+Math.imul(m,re)|0,o=o+Math.imul(m,ne)|0;var Pe=(u+(n=n+Math.imul(f,oe)|0)|0)+((8191&(i=(i=i+Math.imul(f,se)|0)+Math.imul(l,oe)|0))<<13)|0;u=((o=o+Math.imul(l,se)|0)+(i>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,n=Math.imul(V,X),i=(i=Math.imul(V,q))+Math.imul(E,X)|0,o=Math.imul(E,q),n=n+Math.imul(O,F)|0,i=(i=i+Math.imul(O,U)|0)+Math.imul(H,F)|0,o=o+Math.imul(H,U)|0,n=n+Math.imul(M,Z)|0,i=(i=i+Math.imul(M,Y)|0)+Math.imul(A,Z)|0,o=o+Math.imul(A,Y)|0,n=n+Math.imul(k,K)|0,i=(i=i+Math.imul(k,Q)|0)+Math.imul(T,K)|0,o=o+Math.imul(T,Q)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,ee)|0)+Math.imul(x,$)|0,o=o+Math.imul(x,ee)|0,n=n+Math.imul(b,re)|0,i=(i=i+Math.imul(b,ne)|0)+Math.imul(g,re)|0,o=o+Math.imul(g,ne)|0,n=n+Math.imul(p,oe)|0,i=(i=i+Math.imul(p,se)|0)+Math.imul(m,oe)|0,o=o+Math.imul(m,se)|0;var ke=(u+(n=n+Math.imul(f,ce)|0)|0)+((8191&(i=(i=i+Math.imul(f,ue)|0)+Math.imul(l,ce)|0))<<13)|0;u=((o=o+Math.imul(l,ue)|0)+(i>>>13)|0)+(ke>>>26)|0,ke&=67108863,n=Math.imul(C,X),i=(i=Math.imul(C,q))+Math.imul(j,X)|0,o=Math.imul(j,q),n=n+Math.imul(V,F)|0,i=(i=i+Math.imul(V,U)|0)+Math.imul(E,F)|0,o=o+Math.imul(E,U)|0,n=n+Math.imul(O,Z)|0,i=(i=i+Math.imul(O,Y)|0)+Math.imul(H,Z)|0,o=o+Math.imul(H,Y)|0,n=n+Math.imul(M,K)|0,i=(i=i+Math.imul(M,Q)|0)+Math.imul(A,K)|0,o=o+Math.imul(A,Q)|0,n=n+Math.imul(k,$)|0,i=(i=i+Math.imul(k,ee)|0)+Math.imul(T,$)|0,o=o+Math.imul(T,ee)|0,n=n+Math.imul(w,re)|0,i=(i=i+Math.imul(w,ne)|0)+Math.imul(x,re)|0,o=o+Math.imul(x,ne)|0,n=n+Math.imul(b,oe)|0,i=(i=i+Math.imul(b,se)|0)+Math.imul(g,oe)|0,o=o+Math.imul(g,se)|0,n=n+Math.imul(p,ce)|0,i=(i=i+Math.imul(p,ue)|0)+Math.imul(m,ce)|0,o=o+Math.imul(m,ue)|0;var Te=(u+(n=n+Math.imul(f,fe)|0)|0)+((8191&(i=(i=i+Math.imul(f,le)|0)+Math.imul(l,fe)|0))<<13)|0;u=((o=o+Math.imul(l,le)|0)+(i>>>13)|0)+(Te>>>26)|0,Te&=67108863,n=Math.imul(R,X),i=(i=Math.imul(R,q))+Math.imul(B,X)|0,o=Math.imul(B,q),n=n+Math.imul(C,F)|0,i=(i=i+Math.imul(C,U)|0)+Math.imul(j,F)|0,o=o+Math.imul(j,U)|0,n=n+Math.imul(V,Z)|0,i=(i=i+Math.imul(V,Y)|0)+Math.imul(E,Z)|0,o=o+Math.imul(E,Y)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,Q)|0)+Math.imul(H,K)|0,o=o+Math.imul(H,Q)|0,n=n+Math.imul(M,$)|0,i=(i=i+Math.imul(M,ee)|0)+Math.imul(A,$)|0,o=o+Math.imul(A,ee)|0,n=n+Math.imul(k,re)|0,i=(i=i+Math.imul(k,ne)|0)+Math.imul(T,re)|0,o=o+Math.imul(T,ne)|0,n=n+Math.imul(w,oe)|0,i=(i=i+Math.imul(w,se)|0)+Math.imul(x,oe)|0,o=o+Math.imul(x,se)|0,n=n+Math.imul(b,ce)|0,i=(i=i+Math.imul(b,ue)|0)+Math.imul(g,ce)|0,o=o+Math.imul(g,ue)|0,n=n+Math.imul(p,fe)|0,i=(i=i+Math.imul(p,le)|0)+Math.imul(m,fe)|0,o=o+Math.imul(m,le)|0;var Se=(u+(n=n+Math.imul(f,pe)|0)|0)+((8191&(i=(i=i+Math.imul(f,me)|0)+Math.imul(l,pe)|0))<<13)|0;u=((o=o+Math.imul(l,me)|0)+(i>>>13)|0)+(Se>>>26)|0,Se&=67108863,n=Math.imul(R,F),i=(i=Math.imul(R,U))+Math.imul(B,F)|0,o=Math.imul(B,U),n=n+Math.imul(C,Z)|0,i=(i=i+Math.imul(C,Y)|0)+Math.imul(j,Z)|0,o=o+Math.imul(j,Y)|0,n=n+Math.imul(V,K)|0,i=(i=i+Math.imul(V,Q)|0)+Math.imul(E,K)|0,o=o+Math.imul(E,Q)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,ee)|0)+Math.imul(H,$)|0,o=o+Math.imul(H,ee)|0,n=n+Math.imul(M,re)|0,i=(i=i+Math.imul(M,ne)|0)+Math.imul(A,re)|0,o=o+Math.imul(A,ne)|0,n=n+Math.imul(k,oe)|0,i=(i=i+Math.imul(k,se)|0)+Math.imul(T,oe)|0,o=o+Math.imul(T,se)|0,n=n+Math.imul(w,ce)|0,i=(i=i+Math.imul(w,ue)|0)+Math.imul(x,ce)|0,o=o+Math.imul(x,ue)|0,n=n+Math.imul(b,fe)|0,i=(i=i+Math.imul(b,le)|0)+Math.imul(g,fe)|0,o=o+Math.imul(g,le)|0;var Me=(u+(n=n+Math.imul(p,pe)|0)|0)+((8191&(i=(i=i+Math.imul(p,me)|0)+Math.imul(m,pe)|0))<<13)|0;u=((o=o+Math.imul(m,me)|0)+(i>>>13)|0)+(Me>>>26)|0,Me&=67108863,n=Math.imul(R,Z),i=(i=Math.imul(R,Y))+Math.imul(B,Z)|0,o=Math.imul(B,Y),n=n+Math.imul(C,K)|0,i=(i=i+Math.imul(C,Q)|0)+Math.imul(j,K)|0,o=o+Math.imul(j,Q)|0,n=n+Math.imul(V,$)|0,i=(i=i+Math.imul(V,ee)|0)+Math.imul(E,$)|0,o=o+Math.imul(E,ee)|0,n=n+Math.imul(O,re)|0,i=(i=i+Math.imul(O,ne)|0)+Math.imul(H,re)|0,o=o+Math.imul(H,ne)|0,n=n+Math.imul(M,oe)|0,i=(i=i+Math.imul(M,se)|0)+Math.imul(A,oe)|0,o=o+Math.imul(A,se)|0,n=n+Math.imul(k,ce)|0,i=(i=i+Math.imul(k,ue)|0)+Math.imul(T,ce)|0,o=o+Math.imul(T,ue)|0,n=n+Math.imul(w,fe)|0,i=(i=i+Math.imul(w,le)|0)+Math.imul(x,fe)|0,o=o+Math.imul(x,le)|0;var Ae=(u+(n=n+Math.imul(b,pe)|0)|0)+((8191&(i=(i=i+Math.imul(b,me)|0)+Math.imul(g,pe)|0))<<13)|0;u=((o=o+Math.imul(g,me)|0)+(i>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,n=Math.imul(R,K),i=(i=Math.imul(R,Q))+Math.imul(B,K)|0,o=Math.imul(B,Q),n=n+Math.imul(C,$)|0,i=(i=i+Math.imul(C,ee)|0)+Math.imul(j,$)|0,o=o+Math.imul(j,ee)|0,n=n+Math.imul(V,re)|0,i=(i=i+Math.imul(V,ne)|0)+Math.imul(E,re)|0,o=o+Math.imul(E,ne)|0,n=n+Math.imul(O,oe)|0,i=(i=i+Math.imul(O,se)|0)+Math.imul(H,oe)|0,o=o+Math.imul(H,se)|0,n=n+Math.imul(M,ce)|0,i=(i=i+Math.imul(M,ue)|0)+Math.imul(A,ce)|0,o=o+Math.imul(A,ue)|0,n=n+Math.imul(k,fe)|0,i=(i=i+Math.imul(k,le)|0)+Math.imul(T,fe)|0,o=o+Math.imul(T,le)|0;var Ne=(u+(n=n+Math.imul(w,pe)|0)|0)+((8191&(i=(i=i+Math.imul(w,me)|0)+Math.imul(x,pe)|0))<<13)|0;u=((o=o+Math.imul(x,me)|0)+(i>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,n=Math.imul(R,$),i=(i=Math.imul(R,ee))+Math.imul(B,$)|0,o=Math.imul(B,ee),n=n+Math.imul(C,re)|0,i=(i=i+Math.imul(C,ne)|0)+Math.imul(j,re)|0,o=o+Math.imul(j,ne)|0,n=n+Math.imul(V,oe)|0,i=(i=i+Math.imul(V,se)|0)+Math.imul(E,oe)|0,o=o+Math.imul(E,se)|0,n=n+Math.imul(O,ce)|0,i=(i=i+Math.imul(O,ue)|0)+Math.imul(H,ce)|0,o=o+Math.imul(H,ue)|0,n=n+Math.imul(M,fe)|0,i=(i=i+Math.imul(M,le)|0)+Math.imul(A,fe)|0,o=o+Math.imul(A,le)|0;var Oe=(u+(n=n+Math.imul(k,pe)|0)|0)+((8191&(i=(i=i+Math.imul(k,me)|0)+Math.imul(T,pe)|0))<<13)|0;u=((o=o+Math.imul(T,me)|0)+(i>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,n=Math.imul(R,re),i=(i=Math.imul(R,ne))+Math.imul(B,re)|0,o=Math.imul(B,ne),n=n+Math.imul(C,oe)|0,i=(i=i+Math.imul(C,se)|0)+Math.imul(j,oe)|0,o=o+Math.imul(j,se)|0,n=n+Math.imul(V,ce)|0,i=(i=i+Math.imul(V,ue)|0)+Math.imul(E,ce)|0,o=o+Math.imul(E,ue)|0,n=n+Math.imul(O,fe)|0,i=(i=i+Math.imul(O,le)|0)+Math.imul(H,fe)|0,o=o+Math.imul(H,le)|0;var He=(u+(n=n+Math.imul(M,pe)|0)|0)+((8191&(i=(i=i+Math.imul(M,me)|0)+Math.imul(A,pe)|0))<<13)|0;u=((o=o+Math.imul(A,me)|0)+(i>>>13)|0)+(He>>>26)|0,He&=67108863,n=Math.imul(R,oe),i=(i=Math.imul(R,se))+Math.imul(B,oe)|0,o=Math.imul(B,se),n=n+Math.imul(C,ce)|0,i=(i=i+Math.imul(C,ue)|0)+Math.imul(j,ce)|0,o=o+Math.imul(j,ue)|0,n=n+Math.imul(V,fe)|0,i=(i=i+Math.imul(V,le)|0)+Math.imul(E,fe)|0,o=o+Math.imul(E,le)|0;var Ie=(u+(n=n+Math.imul(O,pe)|0)|0)+((8191&(i=(i=i+Math.imul(O,me)|0)+Math.imul(H,pe)|0))<<13)|0;u=((o=o+Math.imul(H,me)|0)+(i>>>13)|0)+(Ie>>>26)|0,Ie&=67108863,n=Math.imul(R,ce),i=(i=Math.imul(R,ue))+Math.imul(B,ce)|0,o=Math.imul(B,ue),n=n+Math.imul(C,fe)|0,i=(i=i+Math.imul(C,le)|0)+Math.imul(j,fe)|0,o=o+Math.imul(j,le)|0;var Ve=(u+(n=n+Math.imul(V,pe)|0)|0)+((8191&(i=(i=i+Math.imul(V,me)|0)+Math.imul(E,pe)|0))<<13)|0;u=((o=o+Math.imul(E,me)|0)+(i>>>13)|0)+(Ve>>>26)|0,Ve&=67108863,n=Math.imul(R,fe),i=(i=Math.imul(R,le))+Math.imul(B,fe)|0,o=Math.imul(B,le);var Ee=(u+(n=n+Math.imul(C,pe)|0)|0)+((8191&(i=(i=i+Math.imul(C,me)|0)+Math.imul(j,pe)|0))<<13)|0;u=((o=o+Math.imul(j,me)|0)+(i>>>13)|0)+(Ee>>>26)|0,Ee&=67108863;var ze=(u+(n=Math.imul(R,pe))|0)+((8191&(i=(i=Math.imul(R,me))+Math.imul(B,pe)|0))<<13)|0;return u=((o=Math.imul(B,me))+(i>>>13)|0)+(ze>>>26)|0,ze&=67108863,c[0]=ye,c[1]=be,c[2]=ge,c[3]=ve,c[4]=we,c[5]=xe,c[6]=Pe,c[7]=ke,c[8]=Te,c[9]=Se,c[10]=Me,c[11]=Ae,c[12]=Ne,c[13]=Oe,c[14]=He,c[15]=Ie,c[16]=Ve,c[17]=Ee,c[18]=ze,0!==u&&(c[19]=u,r.length++),r};function m(e,t,r){return(new y).mulp(e,t,r)}function y(e,t){this.x=e,this.y=t}Math.imul||(p=h),i.prototype.mulTo=function(e,t){var r,n=this.length+e.length;return r=10===this.length&&10===e.length?p(this,e,t):n<63?h(this,e,t):n<1024?function(e,t,r){r.negative=t.negative^e.negative,r.length=e.length+t.length;for(var n=0,i=0,o=0;o<r.length-1;o++){var s=i;i=0;for(var a=67108863&n,c=Math.min(o,t.length-1),u=Math.max(0,o-e.length+1);u<=c;u++){var d=o-u,f=(0|e.words[d])*(0|t.words[u]),l=67108863&f;a=67108863&(l=l+a|0),i+=(s=(s=s+(f/67108864|0)|0)+(l>>>26)|0)>>>26,s&=67108863}r.words[o]=a,n=s,s=i}return 0!==n?r.words[o]=n:r.length--,r.strip()}(this,e,t):m(this,e,t),r},y.prototype.makeRBT=function(e){for(var t=new Array(e),r=i.prototype._countBits(e)-1,n=0;n<e;n++)t[n]=this.revBin(n,r,e);return t},y.prototype.revBin=function(e,t,r){if(0===e||e===r-1)return e;for(var n=0,i=0;i<t;i++)n|=(1&e)<<t-i-1,e>>=1;return n},y.prototype.permute=function(e,t,r,n,i,o){for(var s=0;s<o;s++)n[s]=t[e[s]],i[s]=r[e[s]]},y.prototype.transform=function(e,t,r,n,i,o){this.permute(o,e,t,r,n,i);for(var s=1;s<i;s<<=1)for(var a=s<<1,c=Math.cos(2*Math.PI/a),u=Math.sin(2*Math.PI/a),d=0;d<i;d+=a)for(var f=c,l=u,h=0;h<s;h++){var p=r[d+h],m=n[d+h],y=r[d+h+s],b=n[d+h+s],g=f*y-l*b;b=f*b+l*y,y=g,r[d+h]=p+y,n[d+h]=m+b,r[d+h+s]=p-y,n[d+h+s]=m-b,h!==a&&(g=c*f-u*l,l=c*l+u*f,f=g)}},y.prototype.guessLen13b=function(e,t){var r=1|Math.max(t,e),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},y.prototype.conjugate=function(e,t,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=e[n];e[n]=e[r-n-1],e[r-n-1]=i,i=t[n],t[n]=-t[r-n-1],t[r-n-1]=-i}},y.prototype.normalize13b=function(e,t){for(var r=0,n=0;n<t/2;n++){var i=8192*Math.round(e[2*n+1]/t)+Math.round(e[2*n]/t)+r;e[n]=67108863&i,r=i<67108864?0:i/67108864|0}return e},y.prototype.convert13b=function(e,t,n,i){for(var o=0,s=0;s<t;s++)o+=0|e[s],n[2*s]=8191&o,o>>>=13,n[2*s+1]=8191&o,o>>>=13;for(s=2*t;s<i;++s)n[s]=0;r(0===o),r(0==(-8192&o))},y.prototype.stub=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=0;return t},y.prototype.mulp=function(e,t,r){var n=2*this.guessLen13b(e.length,t.length),i=this.makeRBT(n),o=this.stub(n),s=new Array(n),a=new Array(n),c=new Array(n),u=new Array(n),d=new Array(n),f=new Array(n),l=r.words;l.length=n,this.convert13b(e.words,e.length,s,n),this.convert13b(t.words,t.length,u,n),this.transform(s,o,a,c,n,i),this.transform(u,o,d,f,n,i);for(var h=0;h<n;h++){var p=a[h]*d[h]-c[h]*f[h];c[h]=a[h]*f[h]+c[h]*d[h],a[h]=p}return this.conjugate(a,c,n),this.transform(a,c,l,o,n,i),this.conjugate(l,o,n),this.normalize13b(l,n),r.negative=e.negative^t.negative,r.length=e.length+t.length,r.strip()},i.prototype.mul=function(e){var t=new i(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},i.prototype.mulf=function(e){var t=new i(null);return t.words=new Array(this.length+e.length),m(this,e,t)},i.prototype.imul=function(e){return this.clone().mulTo(e,this)},i.prototype.imuln=function(e){r("number"==typeof e),r(e<67108864);for(var t=0,n=0;n<this.length;n++){var i=(0|this.words[n])*e,o=(67108863&i)+(67108863&t);t>>=26,t+=i/67108864|0,t+=o>>>26,this.words[n]=67108863&o}return 0!==t&&(this.words[n]=t,this.length++),this},i.prototype.muln=function(e){return this.clone().imuln(e)},i.prototype.sqr=function(){return this.mul(this)},i.prototype.isqr=function(){return this.imul(this.clone())},i.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),r=0;r<t.length;r++){var n=r/26|0,i=r%26;t[r]=(e.words[n]&1<<i)>>>i}return t}(e);if(0===t.length)return new i(1);for(var r=this,n=0;n<t.length&&0===t[n];n++,r=r.sqr());if(++n<t.length)for(var o=r.sqr();n<t.length;n++,o=o.sqr())0!==t[n]&&(r=r.mul(o));return r},i.prototype.iushln=function(e){r("number"==typeof e&&e>=0);var t,n=e%26,i=(e-n)/26,o=67108863>>>26-n<<26-n;if(0!==n){var s=0;for(t=0;t<this.length;t++){var a=this.words[t]&o,c=(0|this.words[t])-a<<n;this.words[t]=c|s,s=a>>>26-n}s&&(this.words[t]=s,this.length++)}if(0!==i){for(t=this.length-1;t>=0;t--)this.words[t+i]=this.words[t];for(t=0;t<i;t++)this.words[t]=0;this.length+=i}return this.strip()},i.prototype.ishln=function(e){return r(0===this.negative),this.iushln(e)},i.prototype.iushrn=function(e,t,n){var i;r("number"==typeof e&&e>=0),i=t?(t-t%26)/26:0;var o=e%26,s=Math.min((e-o)/26,this.length),a=67108863^67108863>>>o<<o,c=n;if(i-=s,i=Math.max(0,i),c){for(var u=0;u<s;u++)c.words[u]=this.words[u];c.length=s}if(0===s);else if(this.length>s)for(this.length-=s,u=0;u<this.length;u++)this.words[u]=this.words[u+s];else this.words[0]=0,this.length=1;var d=0;for(u=this.length-1;u>=0&&(0!==d||u>=i);u--){var f=0|this.words[u];this.words[u]=d<<26-o|f>>>o,d=f&a}return c&&0!==d&&(c.words[c.length++]=d),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},i.prototype.ishrn=function(e,t,n){return r(0===this.negative),this.iushrn(e,t,n)},i.prototype.shln=function(e){return this.clone().ishln(e)},i.prototype.ushln=function(e){return this.clone().iushln(e)},i.prototype.shrn=function(e){return this.clone().ishrn(e)},i.prototype.ushrn=function(e){return this.clone().iushrn(e)},i.prototype.testn=function(e){r("number"==typeof e&&e>=0);var t=e%26,n=(e-t)/26,i=1<<t;return!(this.length<=n)&&!!(this.words[n]&i)},i.prototype.imaskn=function(e){r("number"==typeof e&&e>=0);var t=e%26,n=(e-t)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=n)return this;if(0!==t&&n++,this.length=Math.min(n,this.length),0!==t){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this.strip()},i.prototype.maskn=function(e){return this.clone().imaskn(e)},i.prototype.iaddn=function(e){return r("number"==typeof e),r(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},i.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},i.prototype.isubn=function(e){if(r("number"==typeof e),r(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this.strip()},i.prototype.addn=function(e){return this.clone().iaddn(e)},i.prototype.subn=function(e){return this.clone().isubn(e)},i.prototype.iabs=function(){return this.negative=0,this},i.prototype.abs=function(){return this.clone().iabs()},i.prototype._ishlnsubmul=function(e,t,n){var i,o,s=e.length+n;this._expand(s);var a=0;for(i=0;i<e.length;i++){o=(0|this.words[i+n])+a;var c=(0|e.words[i])*t;a=((o-=67108863&c)>>26)-(c/67108864|0),this.words[i+n]=67108863&o}for(;i<this.length-n;i++)a=(o=(0|this.words[i+n])+a)>>26,this.words[i+n]=67108863&o;if(0===a)return this.strip();for(r(-1===a),a=0,i=0;i<this.length;i++)a=(o=-(0|this.words[i])+a)>>26,this.words[i]=67108863&o;return this.negative=1,this.strip()},i.prototype._wordDiv=function(e,t){var r=(this.length,e.length),n=this.clone(),o=e,s=0|o.words[o.length-1];0!==(r=26-this._countBits(s))&&(o=o.ushln(r),n.iushln(r),s=0|o.words[o.length-1]);var a,c=n.length-o.length;if("mod"!==t){(a=new i(null)).length=c+1,a.words=new Array(a.length);for(var u=0;u<a.length;u++)a.words[u]=0}var d=n.clone()._ishlnsubmul(o,1,c);0===d.negative&&(n=d,a&&(a.words[c]=1));for(var f=c-1;f>=0;f--){var l=67108864*(0|n.words[o.length+f])+(0|n.words[o.length+f-1]);for(l=Math.min(l/s|0,67108863),n._ishlnsubmul(o,l,f);0!==n.negative;)l--,n.negative=0,n._ishlnsubmul(o,1,f),n.isZero()||(n.negative^=1);a&&(a.words[f]=l)}return a&&a.strip(),n.strip(),"div"!==t&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},i.prototype.divmod=function(e,t,n){return r(!e.isZero()),this.isZero()?{div:new i(0),mod:new i(0)}:0!==this.negative&&0===e.negative?(a=this.neg().divmod(e,t),"mod"!==t&&(o=a.div.neg()),"div"!==t&&(s=a.mod.neg(),n&&0!==s.negative&&s.iadd(e)),{div:o,mod:s}):0===this.negative&&0!==e.negative?(a=this.divmod(e.neg(),t),"mod"!==t&&(o=a.div.neg()),{div:o,mod:a.mod}):0!=(this.negative&e.negative)?(a=this.neg().divmod(e.neg(),t),"div"!==t&&(s=a.mod.neg(),n&&0!==s.negative&&s.isub(e)),{div:a.div,mod:s}):e.length>this.length||this.cmp(e)<0?{div:new i(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new i(this.modn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new i(this.modn(e.words[0]))}:this._wordDiv(e,t);var o,s,a},i.prototype.div=function(e){return this.divmod(e,"div",!1).div},i.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},i.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},i.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=0!==t.div.negative?t.mod.isub(e):t.mod,n=e.ushrn(1),i=e.andln(1),o=r.cmp(n);return o<0||1===i&&0===o?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},i.prototype.modn=function(e){r(e<=67108863);for(var t=67108864%e,n=0,i=this.length-1;i>=0;i--)n=(t*n+(0|this.words[i]))%e;return n},i.prototype.idivn=function(e){r(e<=67108863);for(var t=0,n=this.length-1;n>=0;n--){var i=(0|this.words[n])+67108864*t;this.words[n]=i/e|0,t=i%e}return this.strip()},i.prototype.divn=function(e){return this.clone().idivn(e)},i.prototype.egcd=function(e){r(0===e.negative),r(!e.isZero());var t=this,n=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var o=new i(1),s=new i(0),a=new i(0),c=new i(1),u=0;t.isEven()&&n.isEven();)t.iushrn(1),n.iushrn(1),++u;for(var d=n.clone(),f=t.clone();!t.isZero();){for(var l=0,h=1;0==(t.words[0]&h)&&l<26;++l,h<<=1);if(l>0)for(t.iushrn(l);l-- >0;)(o.isOdd()||s.isOdd())&&(o.iadd(d),s.isub(f)),o.iushrn(1),s.iushrn(1);for(var p=0,m=1;0==(n.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(n.iushrn(p);p-- >0;)(a.isOdd()||c.isOdd())&&(a.iadd(d),c.isub(f)),a.iushrn(1),c.iushrn(1);t.cmp(n)>=0?(t.isub(n),o.isub(a),s.isub(c)):(n.isub(t),a.isub(o),c.isub(s))}return{a:a,b:c,gcd:n.iushln(u)}},i.prototype._invmp=function(e){r(0===e.negative),r(!e.isZero());var t=this,n=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var o,s=new i(1),a=new i(0),c=n.clone();t.cmpn(1)>0&&n.cmpn(1)>0;){for(var u=0,d=1;0==(t.words[0]&d)&&u<26;++u,d<<=1);if(u>0)for(t.iushrn(u);u-- >0;)s.isOdd()&&s.iadd(c),s.iushrn(1);for(var f=0,l=1;0==(n.words[0]&l)&&f<26;++f,l<<=1);if(f>0)for(n.iushrn(f);f-- >0;)a.isOdd()&&a.iadd(c),a.iushrn(1);t.cmp(n)>=0?(t.isub(n),s.isub(a)):(n.isub(t),a.isub(s))}return(o=0===t.cmpn(1)?s:a).cmpn(0)<0&&o.iadd(e),o},i.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),r=e.clone();t.negative=0,r.negative=0;for(var n=0;t.isEven()&&r.isEven();n++)t.iushrn(1),r.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=t.cmp(r);if(i<0){var o=t;t=r,r=o}else if(0===i||0===r.cmpn(1))break;t.isub(r)}return r.iushln(n)},i.prototype.invm=function(e){return this.egcd(e).a.umod(e)},i.prototype.isEven=function(){return 0==(1&this.words[0])},i.prototype.isOdd=function(){return 1==(1&this.words[0])},i.prototype.andln=function(e){return this.words[0]&e},i.prototype.bincn=function(e){r("number"==typeof e);var t=e%26,n=(e-t)/26,i=1<<t;if(this.length<=n)return this._expand(n+1),this.words[n]|=i,this;for(var o=i,s=n;0!==o&&s<this.length;s++){var a=0|this.words[s];o=(a+=o)>>>26,a&=67108863,this.words[s]=a}return 0!==o&&(this.words[s]=o,this.length++),this},i.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},i.prototype.cmpn=function(e){var t,n=e<0;if(0!==this.negative&&!n)return-1;if(0===this.negative&&n)return 1;if(this.strip(),this.length>1)t=1;else{n&&(e=-e),r(e<=67108863,"Number is too big");var i=0|this.words[0];t=i===e?0:i<e?-1:1}return 0!==this.negative?0|-t:t},i.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},i.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|e.words[r];if(n!==i){n<i?t=-1:n>i&&(t=1);break}}return t},i.prototype.gtn=function(e){return 1===this.cmpn(e)},i.prototype.gt=function(e){return 1===this.cmp(e)},i.prototype.gten=function(e){return this.cmpn(e)>=0},i.prototype.gte=function(e){return this.cmp(e)>=0},i.prototype.ltn=function(e){return-1===this.cmpn(e)},i.prototype.lt=function(e){return-1===this.cmp(e)},i.prototype.lten=function(e){return this.cmpn(e)<=0},i.prototype.lte=function(e){return this.cmp(e)<=0},i.prototype.eqn=function(e){return 0===this.cmpn(e)},i.prototype.eq=function(e){return 0===this.cmp(e)},i.red=function(e){return new k(e)},i.prototype.toRed=function(e){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},i.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},i.prototype._forceRed=function(e){return this.red=e,this},i.prototype.forceRed=function(e){return r(!this.red,"Already a number in reduction context"),this._forceRed(e)},i.prototype.redAdd=function(e){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},i.prototype.redIAdd=function(e){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},i.prototype.redSub=function(e){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},i.prototype.redISub=function(e){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},i.prototype.redShl=function(e){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},i.prototype.redMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},i.prototype.redIMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},i.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},i.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},i.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},i.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},i.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},i.prototype.redPow=function(e){return r(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var b={k256:null,p224:null,p192:null,p25519:null};function g(e,t){this.name=e,this.p=new i(t,16),this.n=this.p.bitLength(),this.k=new i(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function v(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function x(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function P(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function k(e){if("string"==typeof e){var t=i._prime(e);this.m=t.p,this.prime=t}else r(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function T(e){k.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new i(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var e=new i(null);return e.words=new Array(Math.ceil(this.n/13)),e},g.prototype.ireduce=function(e){var t,r=e;do{this.split(r,this.tmp),t=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(t>this.n);var n=t<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(e,t){e.iushrn(this.n,0,t)},g.prototype.imulK=function(e){return e.imul(this.k)},n(v,g),v.prototype.split=function(e,t){for(var r=4194303,n=Math.min(e.length,9),i=0;i<n;i++)t.words[i]=e.words[i];if(t.length=n,e.length<=9)return e.words[0]=0,void(e.length=1);var o=e.words[9];for(t.words[t.length++]=o&r,i=10;i<e.length;i++){var s=0|e.words[i];e.words[i-10]=(s&r)<<4|o>>>22,o=s}o>>>=22,e.words[i-10]=o,0===o&&e.length>10?e.length-=10:e.length-=9},v.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,r=0;r<e.length;r++){var n=0|e.words[r];t+=977*n,e.words[r]=67108863&t,t=64*n+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},n(w,g),n(x,g),n(P,g),P.prototype.imulK=function(e){for(var t=0,r=0;r<e.length;r++){var n=19*(0|e.words[r])+t,i=67108863&n;n>>>=26,e.words[r]=i,t=n}return 0!==t&&(e.words[e.length++]=t),e},i._prime=function(e){if(b[e])return b[e];var t;if("k256"===e)t=new v;else if("p224"===e)t=new w;else if("p192"===e)t=new x;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new P}return b[e]=t,t},k.prototype._verify1=function(e){r(0===e.negative,"red works only with positives"),r(e.red,"red works only with red numbers")},k.prototype._verify2=function(e,t){r(0==(e.negative|t.negative),"red works only with positives"),r(e.red&&e.red===t.red,"red works only with red numbers")},k.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):e.umod(this.m)._forceRed(this)},k.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},k.prototype.add=function(e,t){this._verify2(e,t);var r=e.add(t);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},k.prototype.iadd=function(e,t){this._verify2(e,t);var r=e.iadd(t);return r.cmp(this.m)>=0&&r.isub(this.m),r},k.prototype.sub=function(e,t){this._verify2(e,t);var r=e.sub(t);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},k.prototype.isub=function(e,t){this._verify2(e,t);var r=e.isub(t);return r.cmpn(0)<0&&r.iadd(this.m),r},k.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},k.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},k.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},k.prototype.isqr=function(e){return this.imul(e,e.clone())},k.prototype.sqr=function(e){return this.mul(e,e)},k.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(r(t%2==1),3===t){var n=this.m.add(new i(1)).iushrn(2);return this.pow(e,n)}for(var o=this.m.subn(1),s=0;!o.isZero()&&0===o.andln(1);)s++,o.iushrn(1);r(!o.isZero());var a=new i(1).toRed(this),c=a.redNeg(),u=this.m.subn(1).iushrn(1),d=this.m.bitLength();for(d=new i(2*d*d).toRed(this);0!==this.pow(d,u).cmp(c);)d.redIAdd(c);for(var f=this.pow(d,o),l=this.pow(e,o.addn(1).iushrn(1)),h=this.pow(e,o),p=s;0!==h.cmp(a);){for(var m=h,y=0;0!==m.cmp(a);y++)m=m.redSqr();r(y<p);var b=this.pow(f,new i(1).iushln(p-y-1));l=l.redMul(b),f=b.redSqr(),h=h.redMul(f),p=y}return l},k.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},k.prototype.pow=function(e,t){if(t.isZero())return new i(1).toRed(this);if(0===t.cmpn(1))return e.clone();var r=new Array(16);r[0]=new i(1).toRed(this),r[1]=e;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],e);var o=r[0],s=0,a=0,c=t.bitLength()%26;for(0===c&&(c=26),n=t.length-1;n>=0;n--){for(var u=t.words[n],d=c-1;d>=0;d--){var f=u>>d&1;o!==r[0]&&(o=this.sqr(o)),0!==f||0!==s?(s<<=1,s|=f,(4===++a||0===n&&0===d)&&(o=this.mul(o,r[s]),a=0,s=0)):a=0}c=26}return o},k.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},k.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},i.mont=function(e){return new T(e)},n(T,k),T.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},T.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},T.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var r=e.imul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},T.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new i(0)._forceRed(this);var r=e.mul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),o=r.isub(n).iushrn(this.shift),s=o;return o.cmp(this.m)>=0?s=o.isub(this.m):o.cmpn(0)<0&&(s=o.iadd(this.m)),s._forceRed(this)},T.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e,this)})),s.register("h9a5C",(function(e,t){}));const V=new(e(X=s("ctT9w")))(0),E=new(e(X))(1),z=new(e(X))(2),C=(new(e(X))(3),new(e(X))(4)),j=(new(e(X))(5),new(e(X))(6),new(e(X))(7),new(e(X))(8),new(e(X))(9),new(e(X))(10),new(e(X))(100)),L=(new(e(X))(1e3),new(e(X))(1e6)),R=new(e(X))(1e9),B=R.mul(R),D=new(e(X))(Number.MAX_SAFE_INTEGER);var X=s("ctT9w");function q(t,r){k(r.length>=1,"Must provide one or more BN arguments");let n=r[0];for(let i=1;i<r.length;i++)n=e(X)[t](n,r[i]);return n}function W(...e){return q("max",e)}X=s("ctT9w"),X=s("ctT9w");function F(e){return"boolean"==typeof e}function U(e,...t){for(let n=0;n<t.length;n++){const i=t[n];if(i){const t=(r=i,Object.keys(r));for(let r=0;r<t.length;r++){const n=t[r];e[n]=i[n]}}}var r;return e}const G=/^0x[\da-fA-F]+$/,Z=/^[\da-fA-F]+$/;function Y(e,t=-1,r=!1){return!("string"!=typeof e||"0x"!==e&&!G.test(e))&&(-1===t?!!r||e.length%2==0:e.length===2+Math.ceil(t/4))}function J(e){if(!e||"0x"===e)return"";if(G.test(e))return e.substr(2);if(Z.test(e))return e;throw new Error(`Expected hex value to convert, found '${e}'`)}const K={isLe:!1,isNegative:!1};function Q(t,r=K){if(!t||"0x"===t)return new(e(X))(0);const{isLe:n,isNegative:i}=U({isLe:!1,isNegative:!1},F(r)?{isLe:r}:r),o=J(t),s=new(e(X))(o,16,n?"le":"be");return i?s.fromTwos(4*o.length):s}function _(e){return"bigint"==typeof e||e instanceof BigInt}function $(t){return e(X).isBN(t)?t:t?Y(t)?Q(t.toString()):_(t)?new(e(X))(t.toString()):function(e){return!!e&&v(e.toBn)}(t)?t.toBn():function(e){return!!e&&v(e.toBigInt)}(t)?new(e(X))(t.toBigInt().toString()):new(e(X))(t):new(e(X))(0)}const ee=new(e(X=s("ctT9w")))(94906265);function te(t){const r=$(t);if(k(r.gte(V),"square root of negative numbers is not supported"),r.lte(D))return new(e(X))(Math.floor(Math.sqrt(r.toNumber())));let n=ee.clone();for(;;){const e=r.div(n).iadd(n).ishrn(1);if(n.eq(e)||n.eq(e.sub(E)))return n;n=e}}function re(e){return"number"==typeof e}const ne=new Array(256),ie=new Array(65536),oe={},se={};for(let e=0;e<256;e++){const t=e.toString(16).padStart(2,"0");ne[e]=t,oe[t]=e}for(let e=0;e<256;e++)for(let t=0;t<256;t++){const r=ne[e]+ne[t],n=256*e+t;ie[n]=r,se[r]=n}function ae(e,t=-1){if(!e)return new Uint8Array;const r=J(e).toLowerCase(),n=r.length/2,i=Math.ceil(-1===t?n:t/8),o=new Uint8Array(i),s=i>n?i-n:0,a=new DataView(o.buffer,s),c=(i-s)%2,u=i-s-c;for(let e=0;e<u;e+=2)a.setUint16(e,se[r.substr(2*e,4)]);return c&&a.setUint8(u,oe[r.substr(r.length-2,2)]),o}var ce,ue,de,fe,le,he,pe={};r(pe,"Buffer",(function(){return de}),(function(e){return de=e})),r(pe,"INSPECT_MAX_BYTES",(function(){return fe}),(function(e){return fe=e})),r(pe,"kMaxLength",(function(){return ue}),(function(e){return ue=e})),r(pe,"SlowBuffer",(function(){return ce}),(function(e){return ce=e})),le=function(e){var t,r,n=ke(e),i=n[0],o=n[1],s=new ve(function(e,t,r){return 3*(t+r)/4-r}(0,i,o)),a=0,c=o>0?i-4:i;for(r=0;r<c;r+=4)t=ge[e.charCodeAt(r)]<<18|ge[e.charCodeAt(r+1)]<<12|ge[e.charCodeAt(r+2)]<<6|ge[e.charCodeAt(r+3)],s[a++]=t>>16&255,s[a++]=t>>8&255,s[a++]=255&t;2===o&&(t=ge[e.charCodeAt(r)]<<2|ge[e.charCodeAt(r+1)]>>4,s[a++]=255&t);1===o&&(t=ge[e.charCodeAt(r)]<<10|ge[e.charCodeAt(r+1)]<<4|ge[e.charCodeAt(r+2)]>>2,s[a++]=t>>8&255,s[a++]=255&t);return s},he=function(e){for(var t,r=e.length,n=r%3,i=[],o=16383,s=0,a=r-n;s<a;s+=o)i.push(Te(e,s,s+o>a?a:s+o));1===n?(t=e[r-1],i.push(be[t>>2]+be[t<<4&63]+"==")):2===n&&(t=(e[r-2]<<8)+e[r-1],i.push(be[t>>10]+be[t>>4&63]+be[t<<2&63]+"="));return i.join("")}
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */;for(var me,ye,be=[],ge=[],ve="undefined"!=typeof Uint8Array?Uint8Array:Array,we="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",xe=0,Pe=we.length;xe<Pe;++xe)be[xe]=we[xe],ge[we.charCodeAt(xe)]=xe;function ke(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function Te(e,t,r){for(var n,i,o=[],s=t;s<r;s+=3)n=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),o.push(be[(i=n)>>18&63]+be[i>>12&63]+be[i>>6&63]+be[63&i]);return o.join("")}ge["-".charCodeAt(0)]=62,ge["_".charCodeAt(0)]=63,me=function(e,t,r,n,i){var o,s,a=8*i-n-1,c=(1<<a)-1,u=c>>1,d=-7,f=r?i-1:0,l=r?-1:1,h=e[t+f];for(f+=l,o=h&(1<<-d)-1,h>>=-d,d+=a;d>0;o=256*o+e[t+f],f+=l,d-=8);for(s=o&(1<<-d)-1,o>>=-d,d+=n;d>0;s=256*s+e[t+f],f+=l,d-=8);if(0===o)o=1-u;else{if(o===c)return s?NaN:1/0*(h?-1:1);s+=Math.pow(2,n),o-=u}return(h?-1:1)*s*Math.pow(2,o-n)},ye=function(e,t,r,n,i,o){var s,a,c,u=8*o-i-1,d=(1<<u)-1,f=d>>1,l=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=n?0:o-1,p=n?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=d):(s=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-s))<1&&(s--,c*=2),(t+=s+f>=1?l/c:l*Math.pow(2,1-f))*c>=2&&(s++,c/=2),s+f>=d?(a=0,s=d):s+f>=1?(a=(t*c-1)*Math.pow(2,i),s+=f):(a=t*Math.pow(2,f-1)*Math.pow(2,i),s=0));i>=8;e[r+h]=255&a,h+=p,a/=256,i-=8);for(s=s<<i|a,u+=i;u>0;e[r+h]=255&s,h+=p,s/=256,u-=8);e[r+h-p]|=128*m};var Se="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;de=Ne,ce=function(e){+e!=e&&(e=0);return Ne.alloc(+e)},fe=50;var Me=2147483647;function Ae(e){if(e>Me)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return Object.setPrototypeOf(t,Ne.prototype),t}function Ne(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return Ie(e)}return Oe(e,t,r)}function Oe(e,t,r){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!Ne.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var r=0|Ce(e,t),n=Ae(r),i=n.write(e,t);i!==r&&(n=n.slice(0,i));return n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(at(e,Uint8Array)){var t=new Uint8Array(e);return Ee(t.buffer,t.byteOffset,t.byteLength)}return Ve(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(at(e,ArrayBuffer)||e&&at(e.buffer,ArrayBuffer))return Ee(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(at(e,SharedArrayBuffer)||e&&at(e.buffer,SharedArrayBuffer)))return Ee(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return Ne.from(n,t,r);var i=function(e){if(Ne.isBuffer(e)){var t=0|ze(e.length),r=Ae(t);return 0===r.length||e.copy(r,0,0,t),r}if(void 0!==e.length)return"number"!=typeof e.length||ct(e.length)?Ae(0):Ve(e);if("Buffer"===e.type&&Array.isArray(e.data))return Ve(e.data)}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return Ne.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function He(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function Ie(e){return He(e),Ae(e<0?0:0|ze(e))}function Ve(e){for(var t=e.length<0?0:0|ze(e.length),r=Ae(t),n=0;n<t;n+=1)r[n]=255&e[n];return r}function Ee(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');var n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,Ne.prototype),n}function ze(e){if(e>=Me)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Me.toString(16)+" bytes");return 0|e}function Ce(e,t){if(Ne.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||at(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;for(var i=!1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return it(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return ot(e).length;default:if(i)return n?-1:it(e).length;t=(""+t).toLowerCase(),i=!0}}function je(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return Ke(this,t,r);case"utf8":case"utf-8":return Ge(this,t,r);case"ascii":return Ye(this,t,r);case"latin1":case"binary":return Je(this,t,r);case"base64":return Ue(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Qe(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function Le(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function Re(e,t,r,n,i){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),ct(r=+r)&&(r=i?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(i)return-1;r=e.length-1}else if(r<0){if(!i)return-1;r=0}if("string"==typeof t&&(t=Ne.from(t,n)),Ne.isBuffer(t))return 0===t.length?-1:Be(e,t,r,n,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):Be(e,[t],r,n,i);throw new TypeError("val must be string, number or Buffer")}function Be(e,t,r,n,i){var o,s=1,a=e.length,c=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s=2,a/=2,c/=2,r/=2}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(i){var d=-1;for(o=r;o<a;o++)if(u(e,o)===u(t,-1===d?0:o-d)){if(-1===d&&(d=o),o-d+1===c)return d*s}else-1!==d&&(o-=o-d),d=-1}else for(r+c>a&&(r=a-c),o=r;o>=0;o--){for(var f=!0,l=0;l<c;l++)if(u(e,o+l)!==u(t,l)){f=!1;break}if(f)return o}return-1}function De(e,t,r,n){r=Number(r)||0;var i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;var o=t.length;n>o/2&&(n=o/2);for(var s=0;s<n;++s){var a=parseInt(t.substr(2*s,2),16);if(ct(a))return s;e[r+s]=a}return s}function Xe(e,t,r,n){return st(it(t,e.length-r),e,r,n)}function qe(e,t,r,n){return st(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function We(e,t,r,n){return st(ot(t),e,r,n)}function Fe(e,t,r,n){return st(function(e,t){for(var r,n,i,o=[],s=0;s<e.length&&!((t-=2)<0);++s)n=(r=e.charCodeAt(s))>>8,i=r%256,o.push(i),o.push(n);return o}(t,e.length-r),e,r,n)}function Ue(e,t,r){return 0===t&&r===e.length?he(e):he(e.slice(t,r))}function Ge(e,t,r){r=Math.min(e.length,r);for(var n=[],i=t;i<r;){var o,s,a,c,u=e[i],d=null,f=u>239?4:u>223?3:u>191?2:1;if(i+f<=r)switch(f){case 1:u<128&&(d=u);break;case 2:128==(192&(o=e[i+1]))&&(c=(31&u)<<6|63&o)>127&&(d=c);break;case 3:o=e[i+1],s=e[i+2],128==(192&o)&&128==(192&s)&&(c=(15&u)<<12|(63&o)<<6|63&s)>2047&&(c<55296||c>57343)&&(d=c);break;case 4:o=e[i+1],s=e[i+2],a=e[i+3],128==(192&o)&&128==(192&s)&&128==(192&a)&&(c=(15&u)<<18|(63&o)<<12|(63&s)<<6|63&a)>65535&&c<1114112&&(d=c)}null===d?(d=65533,f=1):d>65535&&(d-=65536,n.push(d>>>10&1023|55296),d=56320|1023&d),n.push(d),i+=f}return function(e){var t=e.length;if(t<=Ze)return String.fromCharCode.apply(String,e);var r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=Ze));return r}(n)}ue=Me,Ne.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),Ne.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(Ne.prototype,"parent",{enumerable:!0,get:function(){if(Ne.isBuffer(this))return this.buffer}}),Object.defineProperty(Ne.prototype,"offset",{enumerable:!0,get:function(){if(Ne.isBuffer(this))return this.byteOffset}}),Ne.poolSize=8192,Ne.from=function(e,t,r){return Oe(e,t,r)},Object.setPrototypeOf(Ne.prototype,Uint8Array.prototype),Object.setPrototypeOf(Ne,Uint8Array),Ne.alloc=function(e,t,r){return function(e,t,r){return He(e),e<=0?Ae(e):void 0!==t?"string"==typeof r?Ae(e).fill(t,r):Ae(e).fill(t):Ae(e)}(e,t,r)},Ne.allocUnsafe=function(e){return Ie(e)},Ne.allocUnsafeSlow=function(e){return Ie(e)},Ne.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==Ne.prototype},Ne.compare=function(e,t){if(at(e,Uint8Array)&&(e=Ne.from(e,e.offset,e.byteLength)),at(t,Uint8Array)&&(t=Ne.from(t,t.offset,t.byteLength)),!Ne.isBuffer(e)||!Ne.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var r=e.length,n=t.length,i=0,o=Math.min(r,n);i<o;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0},Ne.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Ne.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Ne.alloc(0);var r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;var n=Ne.allocUnsafe(t),i=0;for(r=0;r<e.length;++r){var o=e[r];if(at(o,Uint8Array))i+o.length>n.length?Ne.from(o).copy(n,i):Uint8Array.prototype.set.call(n,o,i);else{if(!Ne.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(n,i)}i+=o.length}return n},Ne.byteLength=Ce,Ne.prototype._isBuffer=!0,Ne.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)Le(this,t,t+1);return this},Ne.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)Le(this,t,t+3),Le(this,t+1,t+2);return this},Ne.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)Le(this,t,t+7),Le(this,t+1,t+6),Le(this,t+2,t+5),Le(this,t+3,t+4);return this},Ne.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?Ge(this,0,e):je.apply(this,arguments)},Ne.prototype.toLocaleString=Ne.prototype.toString,Ne.prototype.equals=function(e){if(!Ne.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Ne.compare(this,e)},Ne.prototype.inspect=function(){var e="",t=fe;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},Se&&(Ne.prototype[Se]=Ne.prototype.inspect),Ne.prototype.compare=function(e,t,r,n,i){if(at(e,Uint8Array)&&(e=Ne.from(e,e.offset,e.byteLength)),!Ne.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),t<0||r>e.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&t>=r)return 0;if(n>=i)return-1;if(t>=r)return 1;if(this===e)return 0;for(var o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0),a=Math.min(o,s),c=this.slice(n,i),u=e.slice(t,r),d=0;d<a;++d)if(c[d]!==u[d]){o=c[d],s=u[d];break}return o<s?-1:s<o?1:0},Ne.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},Ne.prototype.indexOf=function(e,t,r){return Re(this,e,t,r,!0)},Ne.prototype.lastIndexOf=function(e,t,r){return Re(this,e,t,r,!1)},Ne.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var o=!1;;)switch(n){case"hex":return De(this,e,t,r);case"utf8":case"utf-8":return Xe(this,e,t,r);case"ascii":case"latin1":case"binary":return qe(this,e,t,r);case"base64":return We(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Fe(this,e,t,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},Ne.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var Ze=4096;function Ye(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function Je(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function Ke(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);for(var i="",o=t;o<r;++o)i+=lt[e[o]];return i}function Qe(e,t,r){for(var n=e.slice(t,r),i="",o=0;o<n.length-1;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function _e(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function $e(e,t,r,n,i,o){if(!Ne.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function et(e,t,r,n,i,o){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function tt(e,t,r,n,i){return t=+t,r>>>=0,i||et(e,0,r,4),ye(e,t,r,n,23,4),r+4}function rt(e,t,r,n,i){return t=+t,r>>>=0,i||et(e,0,r,8),ye(e,t,r,n,52,8),r+8}Ne.prototype.slice=function(e,t){var r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);var n=this.subarray(e,t);return Object.setPrototypeOf(n,Ne.prototype),n},Ne.prototype.readUintLE=Ne.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||_e(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return n},Ne.prototype.readUintBE=Ne.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||_e(e,t,this.length);for(var n=this[e+--t],i=1;t>0&&(i*=256);)n+=this[e+--t]*i;return n},Ne.prototype.readUint8=Ne.prototype.readUInt8=function(e,t){return e>>>=0,t||_e(e,1,this.length),this[e]},Ne.prototype.readUint16LE=Ne.prototype.readUInt16LE=function(e,t){return e>>>=0,t||_e(e,2,this.length),this[e]|this[e+1]<<8},Ne.prototype.readUint16BE=Ne.prototype.readUInt16BE=function(e,t){return e>>>=0,t||_e(e,2,this.length),this[e]<<8|this[e+1]},Ne.prototype.readUint32LE=Ne.prototype.readUInt32LE=function(e,t){return e>>>=0,t||_e(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Ne.prototype.readUint32BE=Ne.prototype.readUInt32BE=function(e,t){return e>>>=0,t||_e(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Ne.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||_e(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*t)),n},Ne.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||_e(e,t,this.length);for(var n=t,i=1,o=this[e+--n];n>0&&(i*=256);)o+=this[e+--n]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*t)),o},Ne.prototype.readInt8=function(e,t){return e>>>=0,t||_e(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Ne.prototype.readInt16LE=function(e,t){e>>>=0,t||_e(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},Ne.prototype.readInt16BE=function(e,t){e>>>=0,t||_e(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},Ne.prototype.readInt32LE=function(e,t){return e>>>=0,t||_e(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Ne.prototype.readInt32BE=function(e,t){return e>>>=0,t||_e(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Ne.prototype.readFloatLE=function(e,t){return e>>>=0,t||_e(e,4,this.length),me(this,e,!0,23,4)},Ne.prototype.readFloatBE=function(e,t){return e>>>=0,t||_e(e,4,this.length),me(this,e,!1,23,4)},Ne.prototype.readDoubleLE=function(e,t){return e>>>=0,t||_e(e,8,this.length),me(this,e,!0,52,8)},Ne.prototype.readDoubleBE=function(e,t){return e>>>=0,t||_e(e,8,this.length),me(this,e,!1,52,8)},Ne.prototype.writeUintLE=Ne.prototype.writeUIntLE=function(e,t,r,n){(e=+e,t>>>=0,r>>>=0,n)||$e(this,e,t,r,Math.pow(2,8*r)-1,0);var i=1,o=0;for(this[t]=255&e;++o<r&&(i*=256);)this[t+o]=e/i&255;return t+r},Ne.prototype.writeUintBE=Ne.prototype.writeUIntBE=function(e,t,r,n){(e=+e,t>>>=0,r>>>=0,n)||$e(this,e,t,r,Math.pow(2,8*r)-1,0);var i=r-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+r},Ne.prototype.writeUint8=Ne.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||$e(this,e,t,1,255,0),this[t]=255&e,t+1},Ne.prototype.writeUint16LE=Ne.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||$e(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},Ne.prototype.writeUint16BE=Ne.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||$e(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},Ne.prototype.writeUint32LE=Ne.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||$e(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},Ne.prototype.writeUint32BE=Ne.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||$e(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},Ne.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var i=Math.pow(2,8*r-1);$e(this,e,t,r,i-1,-i)}var o=0,s=1,a=0;for(this[t]=255&e;++o<r&&(s*=256);)e<0&&0===a&&0!==this[t+o-1]&&(a=1),this[t+o]=(e/s>>0)-a&255;return t+r},Ne.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var i=Math.pow(2,8*r-1);$e(this,e,t,r,i-1,-i)}var o=r-1,s=1,a=0;for(this[t+o]=255&e;--o>=0&&(s*=256);)e<0&&0===a&&0!==this[t+o+1]&&(a=1),this[t+o]=(e/s>>0)-a&255;return t+r},Ne.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||$e(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},Ne.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||$e(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},Ne.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||$e(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},Ne.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||$e(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},Ne.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||$e(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},Ne.prototype.writeFloatLE=function(e,t,r){return tt(this,e,t,!0,r)},Ne.prototype.writeFloatBE=function(e,t,r){return tt(this,e,t,!1,r)},Ne.prototype.writeDoubleLE=function(e,t,r){return rt(this,e,t,!0,r)},Ne.prototype.writeDoubleBE=function(e,t,r){return rt(this,e,t,!1,r)},Ne.prototype.copy=function(e,t,r,n){if(!Ne.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var i=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),i},Ne.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!Ne.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){var i=e.charCodeAt(0);("utf8"===n&&i<128||"latin1"===n)&&(e=i)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var o;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(o=t;o<r;++o)this[o]=e;else{var s=Ne.isBuffer(e)?e:Ne.from(e,n),a=s.length;if(0===a)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(o=0;o<r-t;++o)this[o+t]=s[o%a]}return this};var nt=/[^+/0-9A-Za-z-_]/g;function it(e,t){var r;t=t||1/0;for(var n=e.length,i=null,o=[],s=0;s<n;++s){if((r=e.charCodeAt(s))>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;o.push(r)}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function ot(e){return le(function(e){if((e=(e=e.split("=")[0]).trim().replace(nt,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function st(e,t,r,n){for(var i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}function at(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function ct(e){return e!=e}var ut,dt,ft,lt=function(){for(var e="0123456789abcdef",t=new Array(256),r=0;r<16;++r)for(var n=16*r,i=0;i<16;++i)t[n+i]=e[r]+e[i];return t}(),ht=de,pt=ut={};function mt(){throw new Error("setTimeout has not been defined")}function yt(){throw new Error("clearTimeout has not been defined")}function bt(e){if(dt===setTimeout)return setTimeout(e,0);if((dt===mt||!dt)&&setTimeout)return dt=setTimeout,setTimeout(e,0);try{return dt(e,0)}catch(t){try{return dt.call(null,e,0)}catch(t){return dt.call(this,e,0)}}}!function(){try{dt="function"==typeof setTimeout?setTimeout:mt}catch(e){dt=mt}try{ft="function"==typeof clearTimeout?clearTimeout:yt}catch(e){ft=yt}}();var gt,vt=[],wt=!1,xt=-1;function Pt(){wt&&gt&&(wt=!1,gt.length?vt=gt.concat(vt):xt=-1,vt.length&&kt())}function kt(){if(!wt){var e=bt(Pt);wt=!0;for(var t=vt.length;t;){for(gt=vt,vt=[];++xt<t;)gt&&gt[xt].run();xt=-1,t=vt.length}gt=null,wt=!1,function(e){if(ft===clearTimeout)return clearTimeout(e);if((ft===yt||!ft)&&clearTimeout)return ft=clearTimeout,clearTimeout(e);try{ft(e)}catch(t){try{return ft.call(null,e)}catch(t){return ft.call(this,e)}}}(e)}}function Tt(e,t){this.fun=e,this.array=t}function St(){}pt.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];vt.push(new Tt(e,t)),1!==vt.length||wt||bt(kt)},Tt.prototype.run=function(){this.fun.apply(null,this.array)},pt.title="browser",pt.browser=!0,pt.env={},pt.argv=[],pt.version="",pt.versions={},pt.on=St,pt.addListener=St,pt.once=St,pt.off=St,pt.removeListener=St,pt.removeAllListeners=St,pt.emit=St,pt.prependListener=St,pt.prependOnceListener=St,pt.listeners=function(e){return[]},pt.binding=function(e){throw new Error("process.binding is not supported")},pt.cwd=function(){return"/"},pt.chdir=function(e){throw new Error("process.chdir is not supported")},pt.umask=function(){return 0};const Mt=void 0!==ht,At="object"==typeof ut;var Nt=de;function Ot(e){return Mt&&Nt.isBuffer(e)}function Ht(e){return e instanceof Uint8Array}const It=new b;function Vt(e){return e?It.encode(e.toString()):new Uint8Array}function Et(e){return e?Y(e)?ae(e):w(e)?Vt(e):Array.isArray(e)||Ot(e)?new Uint8Array(e):(k(Ht(e),(()=>`Unable to convert ${e.toString()} (typeof ${typeof e}) to a Uint8Array`)),e):new Uint8Array}function zt(...e){let t=0,r=0;const n=new Array(e.length);for(let r=0;r<e.length;r++)n[r]=Et(e[r]),t+=n[r].length;const i=new Uint8Array(t);for(let e=0;e<n.length;e++)i.set(n[e],r),r+=n[e].length;return i}function Ct(e,t){const r=Et(e),n=Et(t);if(r.length===n.length){const e=new DataView(r.buffer,r.byteOffset),t=new DataView(n.buffer,n.byteOffset),i=r.length%4,o=r.length-i;for(let r=0;r<o;r+=4)if(e.getUint32(r)!==t.getUint32(r))return!1;for(let e=o;e<r.length;e++)if(r[e]!==n[e])return!1;return!0}return!1}function jt(e){const t=e.length%2,r=e.length-t,n=new DataView(e.buffer,e.byteOffset);let i="";for(let e=0;e<r;e+=2)i+=ie[n.getUint16(e)];return t&&(i+=ne[n.getUint8(r)]),i}function Lt(e,t=-1,r=!0){const n=Math.ceil(t/8);return`${r?"0x":""}${e&&e.length?n>0&&e.length>n?`${jt(e.subarray(0,n/2))}…${jt(e.subarray(e.length-n/2))}`:jt(e):""}`}const Rt={isLe:!0,isNegative:!1};function Bt(e,t=Rt){return Q(Lt(e),t)}const Dt=new y("utf-8");function Xt(e){return null!=e&&e.length?Dt.decode(e):""}const qt={bitLength:-1,isLe:!0,isNegative:!1};function Wt(e,t=qt,r){const n=U({bitLength:-1,isLe:!0,isNegative:!1},re(t)?{bitLength:t,isLe:r}:t),i=$(e),o=-1===n.bitLength?Math.ceil(i.bitLength()/8):Math.ceil((n.bitLength||0)/8);return e?function(e,t,{isLe:r,isNegative:n}){const i=new Uint8Array(t),o=n?e.toTwos(8*t):e;return i.set(o.toArray(r?"le":"be",t),0),i}(i,o,n):function(e,t){return-1===t.bitLength?new Uint8Array:new Uint8Array(e)}(o,n)}const Ft={bitLength:-1,isLe:!1,isNegative:!1};X=s("ctT9w");const Ut=z.pow(new(e(X))(6)).isub(E),Gt=z.pow(new(e(X))(14)).isub(E),Zt=z.pow(new(e(X))(30)).isub(E);function Yt(e){const t=$(e);if(t.lte(Ut))return new Uint8Array([t.toNumber()<<2]);if(t.lte(Gt))return Wt(t.shln(2).iadd(E),16,!0);if(t.lte(Zt))return Wt(t.shln(2).iadd(z),32,!0);const r=Wt(t);let n=r.length;for(;0===r[n-1];)n--;return k(n>=4,"Invalid length, previous checks match anything less than 2^30"),zt([3+(n-4<<2)],r.subarray(0,n))}function Jt(e){return zt(Yt(e.length),e)}X=s("ctT9w");function Kt(t){const r=Et(t),n=3&r[0];if(0===n)return[1,new(e(X))(r[0]).ishrn(2)];if(1===n)return[2,Bt(r.subarray(0,2),!0).ishrn(2)];if(2===n)return[4,Bt(r.subarray(0,4),!0).ishrn(2)];const i=1+new(e(X))(r[0]).ishrn(2).iadd(C).toNumber();return[i,Bt(r.subarray(1,i),!0)]}function Qt(e){const[t,r]=Kt(e),n=t+r.toNumber();return[n,e.subarray(t,n)]}const _t=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g");function $t(e){const t=e[0].startsWith("-"),r=t?e.substr(1).match(_t):e.match(_t);return r?`${t?"-":""}${r.join(",")}`:e}const er=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"µ"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function tr(e){for(let t=0;t<er.length;t++)if(er[t].value===e)return er[t];return er[8]}function rr(e,t,r){if(r)return tr(r);const n=7+Math.ceil((e.length-t)/3);return er[n]||er[n<0?0:er.length-1]}const nr=er[8].text;let ir=0,or=nr;const sr=function(e,t=!0,r=ir){let n=$(e).toString();if(0===n.length||"0"===n)return"0";const i=n[0].startsWith("-");i&&(n=n.substr(1));const{decimals:o=r,forceUnit:s,withSi:a=!0,withSiFull:c=!1,withUnit:u=!0}=F(t)?{withSi:t}:t,d=rr(n,o,s),f=n.length-(o+d.power),l=n.substr(0,f),h=`${`${new Array((f<0?0-f:0)+1).join("0")}${n}`.substr(f<0?0:f)}0000`.substr(0,4),p=a||c?"-"===d.value?u?` ${F(u)?d.text:u}`:"":` ${c?d.text:d.value}${u?`${c?" ":""}${F(u)?er[8].text:u}`:""}`:"";return`${i?"-":""}${$t(l||"0")}.${h}${p}`};function ar(e){return $t($(e).toString())}sr.calcSi=(e,t=ir)=>rr(e,t),sr.findSi=tr,sr.getDefaults=()=>({decimals:ir,unit:or}),sr.getOptions=(e=ir)=>er.filter((({power:t})=>!(t<0)||e+t>=0)),sr.setDefaults=({decimals:e,unit:t})=>{ir=P(e)?ir:Array.isArray(e)?e[0]:e,or=P(t)?or:Array.isArray(t)?t[0]:t,er[8].text=or};const cr=[9,10,13];function ur(e){return e<127&&(e>=32||cr.includes(e))}function dr(e){return ur(e.charCodeAt(0))}function fr(e){const t=w(e);return e?t&&!Y(e)?e.toString().split("").every(dr):Et(e).every(ur):t}X=s("ctT9w");function lr(t){return e(X).isBN(t)}function hr(e){return!!e&&"object"==typeof e}function pr(e,t,r,n){const i=n?n(t):t.toString();let o;Object.defineProperty(e,i,{configurable:!0,enumerable:!0,get:function(){if(P(o)){o=r(t);try{Object.defineProperty(this,i,{value:o})}catch{}}return o}})}function mr(e,t,r,n){for(let i=0;i<t.length;i++)pr(e,t[i],r,n);return e}function yr(e){return e.toString().padStart(2,"0")}const br={debug:"log",error:"error",log:"log",warn:"warn"};function gr(e){return Array.isArray(e)?e.map(gr):lr(e)?e.toString():Ht(e)||Ot(e)?Lt(Et(e)):function(e){if(e&&hr(e)&&e.constructor===Object){const t={};for(const r of Object.keys(e))t[r]=gr(e[r]);return t}return e}(e)}function vr(e,t,r,n=-1){if(1===r.length&&v(r[0])){const i=r[0]();return vr(e,t,Array.isArray(i)?i:[i],n)}var i,o;console[br[e]](`${(o=new Date).getFullYear().toString()}-${yr(o.getMonth()+1)}-${yr(o.getDate())} ${yr(o.getHours())}:${yr(o.getMinutes())}:${yr(o.getSeconds())}`,t,...r.map(gr).map((i=n,e=>{if(i<=0)return e;const t=`${e}`;return t.length<i?e:`${t.substr(0,i)} ...`})))}function wr(){}function xr(e,t){return!!e&&("*"===e||t===e||e.endsWith("*")&&t.startsWith(e.slice(0,-1)))}function Pr(e,t){return!!e&&e.startsWith("-")&&(t===e.slice(1)||e.endsWith("*")&&t.startsWith(e.slice(1,-1)))}function kr(e,t){let r=!1;for(const n of e)xr(n,t)?r=!0:Pr(n,t)&&(r=!1);return r}function Tr(e){const t=`${e.toUpperCase()}:`.padStart(16),[r,n]=function(e){const t=(At?ut:{}).env||{},r=parseInt(t.DEBUG_MAX||"-1",10);return[kr((t.DEBUG||"").toLowerCase().split(","),e),isNaN(r)?-1:r]}(e.toLowerCase());return{debug:r?(...e)=>vr("debug",t,e,n):wr,error:(...e)=>vr("error",t,e),log:(...e)=>vr("log",t,e),noop:wr,warn:(...e)=>vr("warn",t,e)}}function Sr(e,t){return _(t)?t.toString():t}function Mr(e,t){return JSON.stringify(e,Sr,t)}function Ar(){return"none"}function Nr(e,{getInstanceId:t=Ar}={}){const r={},n=(...n)=>{const i=Mr(n),o=t();return r[o]||(r[o]={}),P(r[o][i])&&(r[o][i]=e(...n)),r[o][i]};return n.unmemoize=(...e)=>{const n=Mr(e),i=t();r[i]&&!P(r[i][n])&&delete r[i][n]},n}function Or(e,t,r){!Object.prototype.hasOwnProperty.call(e,t)&&P(e[t])&&Object.defineProperty(e,t,{enumerable:!0,get:()=>r(t)})}function Hr(e,t,r){for(let n=0;n<t.length;n++)Or(e,t[n],(e=>r(e,n)))}var Ir={};const Vr=/[\p{Lu}]/u,Er=/[\p{Ll}]/u,zr=/^[\p{Lu}](?![\p{Lu}])/gu,Cr=/([\p{Alpha}\p{N}_]|$)/u,jr=/[_.\- ]+/,Lr=new RegExp("^"+jr.source),Rr=new RegExp(jr.source+Cr.source,"gu"),Br=new RegExp("\\d+"+Cr.source,"gu"),Dr=(e,t)=>{if("string"!=typeof e&&!Array.isArray(e))throw new TypeError("Expected the input to be `string | string[]`");if(t={pascalCase:!1,preserveConsecutiveUppercase:!1,...t},0===(e=Array.isArray(e)?e.map((e=>e.trim())).filter((e=>e.length)).join("-"):e.trim()).length)return"";if(1===e.length)return t.pascalCase?e.toLocaleUpperCase(t.locale):e.toLocaleLowerCase(t.locale);return e!==e.toLocaleLowerCase(t.locale)&&(e=((e,t)=>{let r=!1,n=!1,i=!1;for(let o=0;o<e.length;o++){const s=e[o];r&&Vr.test(s)?(e=e.slice(0,o)+"-"+e.slice(o),r=!1,i=n,n=!0,o++):n&&i&&Er.test(s)?(e=e.slice(0,o-1)+"-"+e.slice(o-1),i=n,n=!1,r=!0):(r=s.toLocaleLowerCase(t)===s&&s.toLocaleUpperCase(t)!==s,i=n,n=s.toLocaleUpperCase(t)===s&&s.toLocaleLowerCase(t)!==s)}return e})(e,t.locale)),e=e.replace(Lr,""),e=t.preserveConsecutiveUppercase?(e=>(zr.lastIndex=0,e.replace(zr,(e=>e.toLowerCase()))))(e):e.toLocaleLowerCase(),t.pascalCase&&(e=e.charAt(0).toLocaleUpperCase(t.locale)+e.slice(1)),((e,t)=>(Rr.lastIndex=0,Br.lastIndex=0,e.replace(Rr,((e,r)=>r.toLocaleUpperCase(t.locale))).replace(Br,(e=>e.toLocaleUpperCase(t.locale)))))(e,t)};function Xr(t){return e(Ir)(t.toString())}function qr(e){return e?e.charAt(0).toLowerCase()+e.slice(1):""}(Ir=Dr).default=Dr;const Wr={pascalCase:!0};function Fr(t){return e(Ir)(t.toString(),Wr)}function Ur(e){return Lt(Vt(e))}var Gr={};r(Gr,"xglobal",(function(){return Zr}),(function(e){return Zr=e}));const Zr="undefined"!=typeof globalThis?globalThis:void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0;const Yr=void 0===Gr.xglobal.TextDecoder?class{constructor(e){}decode(e){return e.reduce(((e,t)=>e+String.fromCharCode(t)),"")}}:Gr.xglobal.TextDecoder;const Jr=void 0===Gr.xglobal.TextEncoder?class{encode(e){const t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t}}:Gr.xglobal.TextEncoder,Kr={name:"@polkadot/util",version:"7.4.1"};function Qr(e){return"function"==typeof e}function _r(e){return"string"==typeof e||e instanceof String}function $r(e,t){if(!e)throw new Error(Qr(t)?t():t)}const en="Either remove and explicitly install matching versions or dedupe using your package manager.\nThe following conflicting packages were found:";function tn(e){return e.reduce(((e,{version:t})=>Math.max(e,t.length)),0)}function rn(e){if(Qr(e))try{return e()||""}catch(e){return""}return e||""}function nn({name:e,version:t},r,n=[]){$r(e.startsWith("@polkadot"),(()=>`Invalid package descriptor ${e}`));const i=function(e){const t=Gr.xglobal;return t.__polkadotjs||(t.__polkadotjs={}),t.__polkadotjs[e]||(t.__polkadotjs[e]=[]),t.__polkadotjs[e]}(e);if(i.push({path:rn(r),version:t}),1!==i.length)console.warn(`${e} has multiple versions, ensure that there is only one installed.\n${en}\n${function(e){const t=e.map((e=>_r(e)?{version:e}:e)),r=tn(t);return t.map((({path:e,version:t})=>`\t${t.padEnd(r)}\t${!e||e.length<5?"<unknown>":e}`)).join("\n")}(i)}`);else{const r=n.filter((e=>e&&e.version!==t));r.length&&console.warn(`${e} requires direct dependencies exactly matching version ${t}.\n${en}\n${function(e){const t=tn(e);return e.map((({name:e,version:r})=>`\t${r.padEnd(t)}\t${e}`)).join("\n")}(r)}`)}}var on="node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@polkadot/util";nn(Kr,on,[{name:"@polkadot/x-textdecoder",version:"7.4.1"},{name:"@polkadot/x-textencoder",version:"7.4.1"}]);const sn=/^0x[a-fA-F0-9]+$/;function an(e,t=-1,r=!1){return!("string"!=typeof e||"0x"!==e&&!sn.test(e))&&(-1===t?e.length%2==0||r:e.length===2+Math.ceil(t/4))}function cn(e){return function(e,t){return e instanceof t}(e,Uint8Array)}const un=new Jr;function dn(e){return e?un.encode(e.toString()):new Uint8Array}const fn=/^[a-fA-F0-9]+$/;function ln(e){if(!e)return"";if(function(e){return!(!e||!an(e,-1,!0)||"0x"!==e.substr(0,2))}(e))return e.substr(2);if(fn.test(e))return e;throw new Error(`Invalid hex ${e} passed to hexStripPrefix`)}var hn=de;function pn(e){return e?an(e)?function(e,t=-1){if(!e)return new Uint8Array;$r(an(e),(()=>`Expected hex value to convert, found '${e}'`));const r=ln(e),n=r.length/2,i=Math.ceil(-1===t?n:t/8),o=new Uint8Array(i),s=Math.max(0,i-n);for(let e=0;e<i;e++)o[e+s]=parseInt(r.substr(2*e,2),16);return o}(e):_r(e)?dn(e):Array.isArray(e)||function(e){return void 0!==hn&&hn.isBuffer(e)}(e)?new Uint8Array(e):($r(cn(e),(()=>`Unable to convert ${e.toString()} (typeof ${typeof e}) to a Uint8Array`)),e):new Uint8Array}function mn(...e){let t=0,r=0;const n=new Array(e.length);for(let r=0;r<e.length;r++)n[r]=pn(e[r]),t+=n[r].length;const i=new Uint8Array(t);for(let e=0;e<n.length;e++)i.set(n[e],r),r+=n[e].length;return i}const yn=new Yr("utf-8");function bn(e){return null!=e&&e.length?yn.decode(e):""}var gn="node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto";nn({name:"@polkadot/util-crypto",version:"7.4.1"},gn,[{name:"@polkadot/networks",version:"7.4.1"},Kr,{name:"@polkadot/x-randomvalues",version:"7.4.1"}]);var vn="node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@polkadot/wasm-crypto";nn({name:"@polkadot/wasm-crypto",version:"4.2.1"},vn,[{name:"@polkadot/wasm-crypto-asmjs",version:"4.2.1"},{name:"@polkadot/wasm-crypto-wasm",version:"4.2.1"}]);const wn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",xn=[],Pn=[];for(let e=0;e<wn.length;++e)xn[e]=wn[e],Pn[wn.charCodeAt(e)]=e;Pn["-".charCodeAt(0)]=62,Pn["_".charCodeAt(0)]=63;var kn;const Tn=(kn={bytes:"",sizeCompressed:152872,sizeUncompressed:300043}).bytes,Sn=kn.sizeUncompressed,Mn=Uint8Array,An=Uint16Array,Nn=Uint32Array,On=new Mn([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Hn=new Mn([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),In=new Mn([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Vn=(e,t)=>{const r=new An(31);for(let n=0;n<31;++n)r[n]=t+=1<<e[n-1];const n=new Nn(r[30]);for(let e=1;e<30;++e)for(let t=r[e];t<r[e+1];++t)n[t]=t-r[e]<<5|e;return[r,n]},[En,zn]=Vn(Hn,2);En[28]=258,zn[258]=28;const[Cn]=Vn(In,0),jn=new An(32768);for(let e=0;e<32768;++e){let t=(43690&e)>>>1|(21845&e)<<1;t=(52428&t)>>>2|(13107&t)<<2,t=(61680&t)>>>4|(3855&t)<<4,jn[e]=((65280&t)>>>8|(255&t)<<8)>>>1}const Ln=(e,t,r)=>{const n=e.length;let i=0;const o=new An(t);for(;i<n;++i)++o[e[i]-1];const s=new An(t);for(i=0;i<t;++i)s[i]=s[i-1]+o[i-1]<<1;let a;if(r){a=new An(1<<t);const r=15-t;for(i=0;i<n;++i)if(e[i]){const n=i<<4|e[i],o=t-e[i];let c=s[e[i]-1]++<<o;for(const e=c|(1<<o)-1;c<=e;++c)a[jn[c]>>>r]=n}}else for(a=new An(n),i=0;i<n;++i)a[i]=jn[s[e[i]-1]++]>>>15-e[i];return a},Rn=new Mn(288);for(let e=0;e<144;++e)Rn[e]=8;for(let e=144;e<256;++e)Rn[e]=9;for(let e=256;e<280;++e)Rn[e]=7;for(let e=280;e<288;++e)Rn[e]=8;const Bn=new Mn(32);for(let e=0;e<32;++e)Bn[e]=5;const Dn=Ln(Rn,9,1),Xn=Ln(Bn,5,1),qn=(e,t,r)=>{const n=t>>>3;return(e[n]|e[n+1]<<8)>>>(7&t)&r},Wn=(e,t)=>{const r=t>>>3;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>>(7&t)},Fn=e=>{let t=e[0];for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r]);return t},Un=(e,t,r)=>{const n=!r||r.i;r||(r={});const i=e.length,o=!t||!n;t||(t=new Mn(3*i));const s=e=>{let r=t.length;if(e>r){const n=new Mn(Math.max(r<<1,e));n.set(t),t=n}};let a=r.f||0,c=r.p||0,u=r.b||0,d=r.l,f=r.d,l=r.m,h=r.n;if(a&&!d)return t;const p=i<<3;do{if(!d){r.f=a=qn(e,c,1);const y=qn(e,c+1,3);if(c+=3,!y){const a=((m=c)>>>3)+(7&m&&1)+4,d=e[a-4]|e[a-3]<<8,f=a+d;if(f>i){if(n)throw"unexpected EOF";break}o&&s(u+d),t.set(e.subarray(a,f),u),r.b=u+=d,r.p=c=f<<3;continue}if(1==y)d=Dn,f=Xn,l=9,h=5;else{if(2!=y)throw"invalid block type";{const t=qn(e,c,31)+257,r=qn(e,c+10,15)+4,i=t+qn(e,c+5,31)+1;c+=14;const o=new Mn(i),s=new Mn(19);for(let t=0;t<r;++t)s[On[t]]=qn(e,c+3*t,7);c+=3*r;const a=Fn(s),u=(1<<a)-1;if(!n&&c+i*(a+7)>p)break;const m=Ln(s,a,1);for(let t=0;t<i;){const r=m[qn(e,c,u)];c+=15&r;const n=r>>>4;if(n<16)o[t++]=n;else{let r=0,i=0;for(16==n?(i=3+qn(e,c,3),c+=2,r=o[t-1]):17==n?(i=3+qn(e,c,7),c+=3):18==n&&(i=11+qn(e,c,127),c+=7);i--;)o[t++]=r}}const y=o.subarray(0,t),b=o.subarray(t);l=Fn(y),h=Fn(b),d=Ln(y,l,1),f=Ln(b,h,1)}}if(c>p)throw"unexpected EOF"}o&&s(u+131072);const y=(1<<l)-1,b=(1<<h)-1,g=l+h+18;for(;n||c+g<p;){const r=d[Wn(e,c)&y],n=r>>>4;if(c+=15&r,c>p)throw"unexpected EOF";if(!r)throw"invalid length/literal";if(n<256)t[u++]=n;else{if(256==n){d=void 0;break}{let r=n-254;if(n>264){const t=n-257,i=Hn[t];r=qn(e,c,(1<<i)-1)+En[t],c+=i}const i=f[Wn(e,c)&b],a=i>>>4;if(!i)throw"invalid distance";c+=15&i;let d=Cn[a];if(a>3){const t=In[a];d+=Wn(e,c)&(1<<t)-1,c+=t}if(c>p)throw"unexpected EOF";o&&s(u+131072);const l=u+r;for(;u<l;u+=4)t[u]=t[u-d],t[u+1]=t[u+1-d],t[u+2]=t[u+2-d],t[u+3]=t[u+3-d];u=l}}}r.l=d,r.p=c,r.b=u,d&&(a=1,r.m=l,r.d=f,r.n=h)}while(!a);var m;return u==t.length?t:((e,t,r)=>{(null==t||t<0)&&(t=0),(null==r||r>e.length)&&(r=e.length);const n=new(e instanceof An?An:e instanceof Nn?Nn:Mn)(r-t);return n.set(e.subarray(t,r)),n})(t,0,u)};const Gn=(Zn=function(e){const[t,r]=function(e){const t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");const r=e.indexOf("=");return-1===r?[t,0]:[r,4-r%4]}(e),n=new Uint8Array(3*(t+r)/4-r);let i,o,s=0;const a=r>0?t-4:t;for(i=0;i<a;i+=4)o=Pn[e.charCodeAt(i)]<<18|Pn[e.charCodeAt(i+1)]<<12|Pn[e.charCodeAt(i+2)]<<6|Pn[e.charCodeAt(i+3)],n[s++]=o>>16&255,n[s++]=o>>8&255,n[s++]=255&o;return 2===r?(o=Pn[e.charCodeAt(i)]<<2|Pn[e.charCodeAt(i+1)]>>4,n[s++]=255&o):1===r&&(o=Pn[e.charCodeAt(i)]<<10|Pn[e.charCodeAt(i+1)]<<4|Pn[e.charCodeAt(i+2)]>>2,n[s++]=o>>8&255,n[s++]=255&o),n}(Tn),Yn=new Uint8Array(Sn),Un(((e=>{if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"})(Zn),Zn.subarray(2,-4)),Yn));var Zn,Yn;let Jn=null,Kn=null,Qn=null;function _n(e){return(...t)=>($r(Jn,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces."),e(Jn)(...t))}function $n(){return null!==Kn&&Kn.buffer===Jn.memory.buffer||(Kn=new Int32Array(Jn.memory.buffer)),Kn}function ei(){return null!==Qn&&Qn.buffer===Jn.memory.buffer||(Qn=new Uint8Array(Jn.memory.buffer)),Qn}function ti(e,t){return ei().subarray(e/1,e/1+t)}function ri(e){const t=Jn.__wbindgen_malloc(1*e.length);return ei().set(e,t/1),[t,e.length]}function ni(e){return ri(dn(e))}function ii(){const e=$n()[2],t=$n()[3],r=ti(e,t).slice();return Jn.__wbindgen_free(e,1*t),r}var oi={};r(oi,"__wbg_self_1b7a39e3a92c949c",(function(){return pi})),r(oi,"__wbg_require_604837428532a733",(function(){return mi})),r(oi,"__wbg_crypto_968f1772287e2df0",(function(){return yi})),r(oi,"abort",(function(){return xi})),r(oi,"__wbindgen_is_undefined",(function(){return hi})),r(oi,"__wbg_getRandomValues_f5e14ab7ac8e995d",(function(){return gi})),r(oi,"__wbindgen_object_drop_ref",(function(){return wi})),r(oi,"__wbg_getRandomValues_a3d34b4fee3c2869",(function(){return bi})),r(oi,"__wbg_randomFillSync_d5bd2d655fdf256a",(function(){return vi}));const si={getRandomValues:function(e){return crypto.getRandomValues(e)}},ai={crypto:si},ci=new Array(32).fill(void 0).concat(void 0,null,!0,!1);let ui=ci.length;function di(e){return ci[e]}function fi(e){const t=di(e);return function(e){e<36||(ci[e]=ui,ui=e)}(e),t}function li(e){ui===ci.length&&ci.push(ci.length+1);const t=ui;return ui=ci[t],ci[t]=e,t}function hi(e){return void 0===di(e)}function pi(){return li(ai)}function mi(e,t){throw new Error(`Unable to require ${function(e,t){return bn(ti(e,t))}(e,t)}`)}function yi(e){return li(si)}function bi(e){return li(si.getRandomValues)}function gi(e,t,r){si.getRandomValues(ti(t,r))}function vi(e,t,r){throw new Error("randomFillsync is not available")}function wi(e){fi(e)}function xi(){throw new Error("abort")}const Pi=async function(e,t,r){try{$r("undefined"!=typeof WebAssembly&&e&&e.length,"WebAssembly is not available in your environment");const t=await WebAssembly.instantiate(e,{wbg:r});Jn=t.instance.exports}catch(e){t?Jn=t(r):(console.error("FATAL: Unable to initialize @polkadot/wasm-crypto"),console.error(e),Jn=null)}}(Gn,null,oi).catch((()=>null)),ki=(_n((e=>t=>(e.ext_bip39_generate(8,t),bn(ii())))),_n((e=>t=>{const[r,n]=ni(t);return e.ext_bip39_to_entropy(8,r,n),ii()})),_n((e=>(t,r)=>{const[n,i]=ni(t),[o,s]=ni(r);return e.ext_bip39_to_mini_secret(8,n,i,o,s),ii()})),_n((e=>(t,r)=>{const[n,i]=ni(t),[o,s]=ni(r);return e.ext_bip39_to_seed(8,n,i,o,s),ii()})),_n((e=>t=>{const[r,n]=ni(t);return 0!==e.ext_bip39_validate(r,n)})),_n((e=>t=>{const[r,n]=ri(t);return e.ext_ed_from_seed(8,r,n),ii()})),_n((e=>(t,r,n)=>{const[i,o]=ri(t),[s,a]=ri(r),[c,u]=ri(n);return e.ext_ed_sign(8,i,o,s,a,c,u),ii()})),_n((e=>(t,r,n)=>{const[i,o]=ri(t),[s,a]=ri(r),[c,u]=ri(n);return 0!==e.ext_ed_verify(i,o,s,a,c,u)})),_n((e=>(t,r)=>{const[n,i]=ri(t),[o,s]=ri(r);return e.ext_sr_derive_keypair_hard(8,n,i,o,s),ii()})),_n((e=>(t,r)=>{const[n,i]=ri(t),[o,s]=ri(r);return e.ext_sr_derive_keypair_soft(8,n,i,o,s),ii()})),_n((e=>(t,r)=>{const[n,i]=ri(t),[o,s]=ri(r);return e.ext_sr_derive_public_soft(8,n,i,o,s),ii()})),_n((e=>t=>{const[r,n]=ri(t);return e.ext_sr_from_seed(8,r,n),ii()})),_n((e=>(t,r,n)=>{const[i,o]=ri(t),[s,a]=ri(r),[c,u]=ri(n);return e.ext_sr_sign(8,i,o,s,a,c,u),ii()})),_n((e=>(t,r,n)=>{const[i,o]=ri(t),[s,a]=ri(r),[c,u]=ri(n);return 0!==e.ext_sr_verify(i,o,s,a,c,u)})),_n((e=>(t,r)=>{const[n,i]=ri(t),[o,s]=ri(r);return e.ext_sr_agree(8,n,i,o,s),ii()})),_n((e=>(t,r,n,i)=>{const[o,s]=ri(t),[a,c]=ri(r),[u,d]=ri(n),[f,l]=ri(i);return e.ext_vrf_sign(8,o,s,a,c,u,d,f,l),ii()})),_n((e=>(t,r,n,i,o)=>{const[s,a]=ri(t),[c,u]=ri(r),[d,f]=ri(n),[l,h]=ri(i),[p,m]=ri(o);return 0!==e.ext_vrf_verify(s,a,c,u,d,f,l,h,p,m)})),_n((e=>(t,r,n)=>{const[i,o]=ri(t),[s,a]=ri(r);return e.ext_blake2b(8,i,o,s,a,n),ii()})));_n((e=>t=>{const[r,n]=ri(t);return e.ext_keccak256(8,r,n),ii()})),_n((e=>(t,r,n)=>{const[i,o]=ri(t),[s,a]=ri(r);return e.ext_pbkdf2(8,i,o,s,a,n),ii()})),_n((e=>(t,r,n,i,o)=>{const[s,a]=ri(t),[c,u]=ri(r);return e.ext_scrypt(8,s,a,c,u,n,i,o),ii()})),_n((e=>t=>{const[r,n]=ri(t);return e.ext_sha512(8,r,n),ii()})),_n((e=>(t,r)=>{const[n,i]=ri(t);return e.ext_twox(8,n,i,r),ii()}));function Ti(){return!!Jn}Pi.then((()=>Ti())).then((()=>!0)).catch((e=>(console.error("Unable to initialize @polkadot/util-crypto",e),!1))).catch((()=>{}));var Si={},Mi=pe.Buffer;function Ai(e,t){for(var r in e)t[r]=e[r]}function Ni(e,t,r){return Mi(e,t,r)}Mi.from&&Mi.alloc&&Mi.allocUnsafe&&Mi.allocUnsafeSlow?Si=pe:(Ai(pe,Si),Si.Buffer=Ni),Ni.prototype=Object.create(Mi.prototype),Ai(Mi,Ni),Ni.from=function(e,t,r){if("number"==typeof e)throw new TypeError("Argument must not be a number");return Mi(e,t,r)},Ni.alloc=function(e,t,r){if("number"!=typeof e)throw new TypeError("Argument must be a number");var n=Mi(e);return void 0!==t?"string"==typeof r?n.fill(t,r):n.fill(t):n.fill(0),n},Ni.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return Mi(e)},Ni.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return pe.SlowBuffer(e)};var Oi=Si.Buffer;const Hi="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",Ii=e((function(e){if(e.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),r=0;r<t.length;r++)t[r]=255;for(var n=0;n<e.length;n++){var i=e.charAt(n),o=i.charCodeAt(0);if(255!==t[o])throw new TypeError(i+" is ambiguous");t[o]=n}var s=e.length,a=e.charAt(0),c=Math.log(s)/Math.log(256),u=Math.log(256)/Math.log(s);function d(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return Oi.alloc(0);var r=0;if(" "!==e[r]){for(var n=0,i=0;e[r]===a;)n++,r++;for(var o=(e.length-r)*c+1>>>0,u=new Uint8Array(o);e[r];){var d=t[e.charCodeAt(r)];if(255===d)return;for(var f=0,l=o-1;(0!==d||f<i)&&-1!==l;l--,f++)d+=s*u[l]>>>0,u[l]=d%256>>>0,d=d/256>>>0;if(0!==d)throw new Error("Non-zero carry");i=f,r++}if(" "!==e[r]){for(var h=o-i;h!==o&&0===u[h];)h++;var p=Oi.allocUnsafe(n+(o-h));p.fill(0,0,n);for(var m=n;h!==o;)p[m++]=u[h++];return p}}}return{encode:function(t){if((Array.isArray(t)||t instanceof Uint8Array)&&(t=Oi.from(t)),!Oi.isBuffer(t))throw new TypeError("Expected Buffer");if(0===t.length)return"";for(var r=0,n=0,i=0,o=t.length;i!==o&&0===t[i];)i++,r++;for(var c=(o-i)*u+1>>>0,d=new Uint8Array(c);i!==o;){for(var f=t[i],l=0,h=c-1;(0!==f||l<n)&&-1!==h;h--,l++)f+=256*d[h]>>>0,d[h]=f%s>>>0,f=f/s>>>0;if(0!==f)throw new Error("Non-zero carry");n=l,i++}for(var p=c-n;p!==c&&0===d[p];)p++;for(var m=a.repeat(r);p<c;++p)m+=e.charAt(d[p]);return m},decodeUnsafe:d,decode:function(e){var t=d(e);if(t)return t;throw new Error("Non-base"+s+" character")}}}))(Hi),Vi={alphabet:Hi,ipfsChar:"z",type:"base58"};function Ei(e,t){return function({alphabet:e,ipfsChar:t,type:r},n,i){$r(n&&"string"==typeof n,(()=>`Expected non-null, non-empty ${r} string input`)),$r(!i||n[0]===t,(()=>`Expected ${r} to start with '${t}'`));for(let t=i?1:0;t<n.length;t++)$r(e.includes(n[t]),(()=>`Invalid ${r} character "${n[t]}" (0x${n.charCodeAt(t).toString(16)}) at index ${t}`));return!0}(Vi,e,t)}function zi(e,t){return Ei(e,t),r=Ii.decode(e.substr(t?1:0)),new Uint8Array(r||[]);var r}var Ci,ji,Li={},Ri=de;function Bi(e){return(4294967296+e).toString(16).substring(1)}function Di(e,t,r){const n=e[t]+e[r];let i=e[t+1]+e[r+1];n>=4294967296&&i++,e[t]=n,e[t+1]=i}function Xi(e,t,r,n){let i=e[t]+r;r<0&&(i+=4294967296);let o=e[t+1]+n;i>=4294967296&&o++,e[t]=i,e[t+1]=o}function qi(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function Wi(e,t,r,n,i,o){const s=Zi[i],a=Zi[i+1],c=Zi[o],u=Zi[o+1];Di(Gi,e,t),Xi(Gi,e,s,a);let d=Gi[n]^Gi[e],f=Gi[n+1]^Gi[e+1];Gi[n]=f,Gi[n+1]=d,Di(Gi,r,n),d=Gi[t]^Gi[r],f=Gi[t+1]^Gi[r+1],Gi[t]=d>>>24^f<<8,Gi[t+1]=f>>>24^d<<8,Di(Gi,e,t),Xi(Gi,e,c,u),d=Gi[n]^Gi[e],f=Gi[n+1]^Gi[e+1],Gi[n]=d>>>16^f<<16,Gi[n+1]=f>>>16^d<<16,Di(Gi,r,n),d=Gi[t]^Gi[r],f=Gi[t+1]^Gi[r+1],Gi[t]=f>>>31^d<<1,Gi[t+1]=d>>>31^f<<1}Li={normalizeInput:function(e){let t;if(e instanceof Uint8Array)t=e;else if(e instanceof Ri)t=new Uint8Array(e);else{if("string"!=typeof e)throw new Error("Input must be an string, Buffer or Uint8Array");t=new Uint8Array(Ri.from(e,"utf8"))}return t},toHex:function(e){return Array.prototype.map.call(e,(function(e){return(e<16?"0":"")+e.toString(16)})).join("")},debugPrint:function(e,t,r){let n="\n"+e+" = ";for(let i=0;i<t.length;i+=2){if(32===r)n+=Bi(t[i]).toUpperCase(),n+=" ",n+=Bi(t[i+1]).toUpperCase();else{if(64!==r)throw new Error("Invalid size "+r);n+=Bi(t[i+1]).toUpperCase(),n+=Bi(t[i]).toUpperCase()}i%6==4?n+="\n"+new Array(e.length+4).join(" "):i<t.length-2&&(n+=" ")}console.log(n)},testSpeed:function(e,t,r){let n=(new Date).getTime();const i=new Uint8Array(t);for(let e=0;e<t;e++)i[e]=e%256;const o=(new Date).getTime();console.log("Generated random input in "+(o-n)+"ms"),n=o;for(let o=0;o<r;o++){const r=e(i),o=(new Date).getTime(),s=o-n;n=o,console.log("Hashed in "+s+"ms: "+r.substring(0,20)+"..."),console.log(Math.round(t/1048576/(s/1e3)*100)/100+" MB PER SECOND")}}};const Fi=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),Ui=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3].map((function(e){return 2*e}))),Gi=new Uint32Array(32),Zi=new Uint32Array(32);function Yi(e,t){let r=0;for(r=0;r<16;r++)Gi[r]=e.h[r],Gi[r+16]=Fi[r];for(Gi[24]=Gi[24]^e.t,Gi[25]=Gi[25]^e.t/4294967296,t&&(Gi[28]=~Gi[28],Gi[29]=~Gi[29]),r=0;r<32;r++)Zi[r]=qi(e.b,4*r);for(r=0;r<12;r++)Wi(0,8,16,24,Ui[16*r+0],Ui[16*r+1]),Wi(2,10,18,26,Ui[16*r+2],Ui[16*r+3]),Wi(4,12,20,28,Ui[16*r+4],Ui[16*r+5]),Wi(6,14,22,30,Ui[16*r+6],Ui[16*r+7]),Wi(0,10,20,30,Ui[16*r+8],Ui[16*r+9]),Wi(2,12,22,24,Ui[16*r+10],Ui[16*r+11]),Wi(4,14,16,26,Ui[16*r+12],Ui[16*r+13]),Wi(6,8,18,28,Ui[16*r+14],Ui[16*r+15]);for(r=0;r<16;r++)e.h[r]=e.h[r]^Gi[r]^Gi[r+16]}function Ji(e,t){if(0===e||e>64)throw new Error("Illegal output length, expected 0 < length <= 64");if(t&&t.length>64)throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");const r={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:e};for(let e=0;e<16;e++)r.h[e]=Fi[e];const n=t?t.length:0;return r.h[0]^=16842752^n<<8^e,t&&(Ki(r,t),r.c=128),r}function Ki(e,t){for(let r=0;r<t.length;r++)128===e.c&&(e.t+=e.c,Yi(e,!1),e.c=0),e.b[e.c++]=t[r]}function Qi(e){for(e.t+=e.c;e.c<128;)e.b[e.c++]=0;Yi(e,!0);const t=new Uint8Array(e.outlen);for(let r=0;r<e.outlen;r++)t[r]=e.h[r>>2]>>8*(3&r);return t}function _i(e,t,r){r=r||64,e=Li.normalizeInput(e);const n=Ji(r,t);return Ki(n,e),Qi(n)}ji={blake2b:_i,blake2bHex:function(e,t,r){const n=_i(e,t,r);return Li.toHex(n)},blake2bInit:Ji,blake2bUpdate:Ki,blake2bFinal:Qi};var $i;function eo(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function to(e,t,r,n,i,o){oo[e]=oo[e]+oo[t]+i,oo[n]=ro(oo[n]^oo[e],16),oo[r]=oo[r]+oo[n],oo[t]=ro(oo[t]^oo[r],12),oo[e]=oo[e]+oo[t]+o,oo[n]=ro(oo[n]^oo[e],8),oo[r]=oo[r]+oo[n],oo[t]=ro(oo[t]^oo[r],7)}function ro(e,t){return e>>>t^e<<32-t}const no=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),io=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0]),oo=new Uint32Array(16),so=new Uint32Array(16);function ao(e,t){let r=0;for(r=0;r<8;r++)oo[r]=e.h[r],oo[r+8]=no[r];for(oo[12]^=e.t,oo[13]^=e.t/4294967296,t&&(oo[14]=~oo[14]),r=0;r<16;r++)so[r]=eo(e.b,4*r);for(r=0;r<10;r++)to(0,4,8,12,so[io[16*r+0]],so[io[16*r+1]]),to(1,5,9,13,so[io[16*r+2]],so[io[16*r+3]]),to(2,6,10,14,so[io[16*r+4]],so[io[16*r+5]]),to(3,7,11,15,so[io[16*r+6]],so[io[16*r+7]]),to(0,5,10,15,so[io[16*r+8]],so[io[16*r+9]]),to(1,6,11,12,so[io[16*r+10]],so[io[16*r+11]]),to(2,7,8,13,so[io[16*r+12]],so[io[16*r+13]]),to(3,4,9,14,so[io[16*r+14]],so[io[16*r+15]]);for(r=0;r<8;r++)e.h[r]^=oo[r]^oo[r+8]}function co(e,t){if(!(e>0&&e<=32))throw new Error("Incorrect output length, should be in [1, 32]");const r=t?t.length:0;if(t&&!(r>0&&r<=32))throw new Error("Incorrect key length, should be in [1, 32]");const n={h:new Uint32Array(no),b:new Uint8Array(64),c:0,t:0,outlen:e};return n.h[0]^=16842752^r<<8^e,r>0&&(uo(n,t),n.c=64),n}function uo(e,t){for(let r=0;r<t.length;r++)64===e.c&&(e.t+=e.c,ao(e,!1),e.c=0),e.b[e.c++]=t[r]}function fo(e){for(e.t+=e.c;e.c<64;)e.b[e.c++]=0;ao(e,!0);const t=new Uint8Array(e.outlen);for(let r=0;r<e.outlen;r++)t[r]=e.h[r>>2]>>8*(3&r)&255;return t}function lo(e,t,r){r=r||32,e=Li.normalizeInput(e);const n=co(r,t);return uo(n,e),fo(n)}Ci={blake2b:ji.blake2b,blake2bHex:ji.blake2bHex,blake2bInit:ji.blake2bInit,blake2bUpdate:ji.blake2bUpdate,blake2bFinal:ji.blake2bFinal,blake2s:($i={blake2s:lo,blake2sHex:function(e,t,r){const n=lo(e,t,r);return Li.toHex(n)},blake2sInit:co,blake2sUpdate:uo,blake2sFinal:fo}).blake2s,blake2sHex:$i.blake2sHex,blake2sInit:$i.blake2sInit,blake2sUpdate:$i.blake2sUpdate,blake2sFinal:$i.blake2sFinal};const ho=dn("SS58PRE");function po(t){return function(t,r=256,n,i=!1){const o=Math.ceil(r/8);return Ti()&&!i?ki(pn(t),pn(n),o):e(Ci).blake2b(pn(t),n||void 0,o)}(mn(ho,t),512)}const mo={bifrost:["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],"dock-mainnet":["0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-chain":["0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23"],plasm:["0x3e86364d4b4894021cb2a0390bcf2feb5517d5292f2de2bb9404227e908b0b8b"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x9deeb940c92ae02111c3bd5baca89970384f4c9849f02a1b2e53e66414d30f9f"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"]},yo={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},bo={centrifuge:747,"dock-mainnet":594,edgeware:523,equilibrium:99999997,kusama:434,"nodle-chain":1003,polkadot:354,polymesh:595,statemine:434},go={"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,"zero-alphaville":!0},vo=[0,2,42],wo=[{decimals:[10],displayName:"Polkadot Relay Chain",network:"polkadot",prefix:0,standardAccount:"*25519",symbols:["DOT"],website:"https://polkadot.network"},{decimals:null,displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",network:null,prefix:1,standardAccount:null,symbols:null,website:null},{decimals:[12],displayName:"Kusama Relay Chain",network:"kusama",prefix:2,standardAccount:"*25519",symbols:["KSM"],website:"https://kusama.network"},{decimals:null,displayName:"Bare 32-bit Ed25519 public key.",network:null,prefix:3,standardAccount:null,symbols:null,website:null},{decimals:null,displayName:"Katal Chain",network:"katalchain",prefix:4,standardAccount:"*25519",symbols:null,website:null},{decimals:[15],displayName:"Plasm Network",network:"plasm",prefix:5,standardAccount:"*25519",symbols:["PLM"],website:"https://plasmnet.io"},{decimals:[12],displayName:"Bifrost",network:"bifrost",prefix:6,standardAccount:"*25519",symbols:["BNC"],website:"https://bifrost.finance/"},{decimals:[18],displayName:"Edgeware",network:"edgeware",prefix:7,standardAccount:"*25519",symbols:["EDG"],website:"https://edgewa.re"},{decimals:[12],displayName:"Karura",network:"karura",prefix:8,standardAccount:"*25519",symbols:["KAR"],website:"https://karura.network/"},{decimals:[18],displayName:"Laminar Reynolds Canary",network:"reynolds",prefix:9,standardAccount:"*25519",symbols:["REY"],website:"http://laminar.network/"},{decimals:[12],displayName:"Acala",network:"acala",prefix:10,standardAccount:"*25519",symbols:["ACA"],website:"https://acala.network/"},{decimals:[18],displayName:"Laminar",network:"laminar",prefix:11,standardAccount:"*25519",symbols:["LAMI"],website:"http://laminar.network/"},{decimals:[6],displayName:"Polymesh",network:"polymesh",prefix:12,standardAccount:"*25519",symbols:["POLYX"],website:"https://polymath.network/"},{decimals:[12],displayName:"Integritee",network:"integritee",prefix:13,standardAccount:"*25519",symbols:["TEER"],website:"https://integritee.network"},{decimals:[0],displayName:"Totem",network:"totem",prefix:14,standardAccount:"*25519",symbols:["XTX"],website:"https://totemaccounting.com"},{decimals:[12],displayName:"Synesthesia",network:"synesthesia",prefix:15,standardAccount:"*25519",symbols:["SYN"],website:"https://synesthesia.network/"},{decimals:[12],displayName:"Kulupu",network:"kulupu",prefix:16,standardAccount:"*25519",symbols:["KLP"],website:"https://kulupu.network/"},{decimals:null,displayName:"Dark Mainnet",network:"dark",prefix:17,standardAccount:"*25519",symbols:null,website:null},{decimals:[9,9],displayName:"Darwinia Network",network:"darwinia",prefix:18,standardAccount:"*25519",symbols:["RING","KTON"],website:"https://darwinia.network/"},{decimals:[12],displayName:"GeekCash",network:"geek",prefix:19,standardAccount:"*25519",symbols:["GEEK"],website:"https://geekcash.org"},{decimals:[12],displayName:"Stafi",network:"stafi",prefix:20,standardAccount:"*25519",symbols:["FIS"],website:"https://stafi.io"},{decimals:[6],displayName:"Dock Testnet",network:"dock-testnet",prefix:21,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:[6],displayName:"Dock Mainnet",network:"dock-mainnet",prefix:22,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:null,displayName:"ShiftNrg",network:"shift",prefix:23,standardAccount:"*25519",symbols:null,website:null},{decimals:[18],displayName:"ZERO",network:"zero",prefix:24,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[18],displayName:"ZERO Alphaville",network:"zero-alphaville",prefix:25,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[10],displayName:"Jupiter",network:"jupiter",prefix:26,standardAccount:"*25519",symbols:["jDOT"],website:"https://jupiter.patract.io"},{decimals:null,displayName:"Subsocial",network:"subsocial",prefix:28,standardAccount:"*25519",symbols:null,website:null},{decimals:[18],displayName:"Dhiway CORD Network",network:"cord",prefix:29,standardAccount:"*25519",symbols:["DCU"],website:"https://dhiway.com/"},{decimals:[12],displayName:"Phala Network",network:"phala",prefix:30,standardAccount:"*25519",symbols:["PHA"],website:"https://phala.network"},{decimals:[12],displayName:"Litentry Network",network:"litentry",prefix:31,standardAccount:"*25519",symbols:["LIT"],website:"https://litentry.com/"},{decimals:[9],displayName:"Robonomics",network:"robonomics",prefix:32,standardAccount:"*25519",symbols:["XRT"],website:"https://robonomics.network"},{decimals:null,displayName:"DataHighway",network:"datahighway",prefix:33,standardAccount:"*25519",symbols:null,website:null},{decimals:[12],displayName:"Ares Protocol",network:"ares",prefix:34,standardAccount:"*25519",symbols:["ARES"],website:"https://www.aresprotocol.com/"},{decimals:[15],displayName:"Valiu Liquidity Network",network:"vln",prefix:35,standardAccount:"*25519",symbols:["USDv"],website:"https://valiu.com/"},{decimals:[18],displayName:"Centrifuge Chain",network:"centrifuge",prefix:36,standardAccount:"*25519",symbols:["CFG"],website:"https://centrifuge.io/"},{decimals:[18],displayName:"Nodle Chain",network:"nodle",prefix:37,standardAccount:"*25519",symbols:["NODL"],website:"https://nodle.io/"},{decimals:[18],displayName:"KILT Chain",network:"kilt",prefix:38,standardAccount:"*25519",symbols:["KILT"],website:"https://kilt.io/"},{decimals:[18],displayName:"MathChain mainnet",network:"mathchain",prefix:39,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:[18],displayName:"MathChain testnet",network:"mathchain-testnet",prefix:40,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:null,displayName:"Polimec Chain",network:"poli",prefix:41,standardAccount:"*25519",symbols:null,website:"https://polimec.io/"},{decimals:null,displayName:"Substrate",network:"substrate",prefix:42,standardAccount:"*25519",symbols:null,website:"https://substrate.dev/"},{decimals:null,displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",network:null,prefix:43,standardAccount:null,symbols:null,website:null},{decimals:[8],displayName:"ChainX",network:"chainx",prefix:44,standardAccount:"*25519",symbols:["PCX"],website:"https://chainx.org/"},{decimals:[12,12],displayName:"UniArts Network",network:"uniarts",prefix:45,standardAccount:"*25519",symbols:["UART","UINK"],website:"https://uniarts.me"},{decimals:null,displayName:"This prefix is reserved.",network:"reserved46",prefix:46,standardAccount:null,symbols:null,website:null},{decimals:null,displayName:"This prefix is reserved.",network:"reserved47",prefix:47,standardAccount:null,symbols:null,website:null},{decimals:[12],displayName:"Neatcoin Mainnet",network:"neatcoin",prefix:48,standardAccount:"*25519",symbols:["NEAT"],website:"https://neatcoin.org"},{decimals:[12],displayName:"Picasso",network:"picasso",prefix:49,standardAccount:"*25519",symbols:["PICA"],website:"https://picasso.composable.finance"},{decimals:[12],displayName:"Composable",network:"composable",prefix:50,standardAccount:"*25519",symbols:["LAYR"],website:"https://composable.finance"},{decimals:[12],displayName:"HydraDX",network:"hydradx",prefix:63,standardAccount:"*25519",symbols:["HDX"],website:"https://hydradx.io"},{decimals:[18],displayName:"AvN Mainnet",network:"aventus",prefix:65,standardAccount:"*25519",symbols:["AVT"],website:"https://aventus.io"},{decimals:[12],displayName:"Crust Network",network:"crust",prefix:66,standardAccount:"*25519",symbols:["CRU"],website:"https://crust.network"},{decimals:[0,9,9,9,9,9,9,9],displayName:"Equilibrium Network",network:"equilibrium",prefix:67,standardAccount:"*25519",symbols:["Unknown","USD","EQ","ETH","BTC","EOS","DOT","CRV"],website:"https://equilibrium.io"},{decimals:[18],displayName:"SORA Network",network:"sora",prefix:69,standardAccount:"*25519",symbols:["XOR"],website:"https://sora.org"},{decimals:[10],displayName:"Zeitgeist",network:"zeitgeist",prefix:73,standardAccount:"*25519",symbols:["ZTG"],website:"https://zeitgeist.pm"},{decimals:[12],displayName:"Manta network",network:"manta",prefix:77,standardAccount:"*25519",symbols:["MA"],website:"https://manta.network"},{decimals:[12],displayName:"Calamari: Manta Canary Network",network:"calamari",prefix:78,standardAccount:"*25519",symbols:["KMA"],website:"https://manta.network"},{decimals:[18],displayName:"PolkaSmith Canary Network",network:"polkasmith",prefix:98,standardAccount:"*25519",symbols:["PKS"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"PolkaFoundry Network",network:"polkafoundry",prefix:99,standardAccount:"*25519",symbols:["PKF"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"OriginTrail Parachain",network:"origintrail-parachain",prefix:101,standardAccount:"secp256k1",symbols:["TRAC"],website:"https://origintrail.io"},{decimals:[12],displayName:"Heiko",network:"heiko",prefix:110,standardAccount:"*25519",symbols:["HKO"],website:"https://parallel.fi/"},{decimals:null,displayName:"Integritee Incognito",network:"integritee-incognito",prefix:113,standardAccount:"*25519",symbols:null,website:"https://integritee.network"},{decimals:[18],displayName:"Clover Finance",network:"clover",prefix:128,standardAccount:"*25519",symbols:["CLV"],website:"https://clover.finance"},{decimals:[18],displayName:"Altair",network:"altair",prefix:136,standardAccount:"*25519",symbols:["AIR"],website:"https://centrifuge.io/"},{decimals:[12],displayName:"Parallel",network:"parallel",prefix:172,standardAccount:"*25519",symbols:["PARA"],website:"https://parallel.fi/"},{decimals:[18],displayName:"Social Network",network:"social-network",prefix:252,standardAccount:"*25519",symbols:["NET"],website:"https://social.network"},{decimals:[18],displayName:"Moonbeam",network:"moonbeam",prefix:1284,standardAccount:"secp256k1",symbols:["GLMR"],website:"https://moonbeam.network"},{decimals:[18],displayName:"Moonriver",network:"moonriver",prefix:1285,standardAccount:"secp256k1",symbols:["MOVR"],website:"https://moonbeam.network"},{decimals:[12],displayName:"Basilisk",network:"basilisk",prefix:10041,standardAccount:"*25519",symbols:["BSX"],website:"https://bsx.fi"}].map((e=>{const t=e.network||"",r=e;return r.slip44=bo[t],r.hasLedgerSupport=!!r.slip44,r.genesisHash=mo[t]||[],r.icon=yo[t]||"substrate",r.isIgnored=!t||!!go[t]||t.startsWith("reserved"),r})).filter((e=>!e.isIgnored&&!!e.network)).sort(((e,t)=>vo.includes(e.prefix)===vo.includes(t.prefix)?0:vo.includes(e.prefix)?-1:vo.includes(t.prefix)?1:e.displayName.localeCompare(t.displayName))),xo=(wo.filter((e=>e.genesisHash.length||42===e.prefix)),{allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:wo.map((({prefix:e})=>e)),prefix:42});function Po(e,t,r=-1){if($r(e,"Invalid empty address passed"),cn(e)||an(e))return pn(e);try{const n=zi(e);$r(xo.allowedEncodedLengths.includes(n.length),"Invalid decoded address length");const[i,o,s,a]=function(e){const t=64&e[0]?2:1,r=1===t?e[0]:(63&e[0])<<2|e[1]>>6|(63&e[1])<<8,n=[34+t,35+t].includes(e.length),i=e.length-(n?2:1),o=po(e.subarray(0,i));return[0==(128&e[0])&&![46,47].includes(e[0])&&(n?e[e.length-2]===o[0]&&e[e.length-1]===o[1]:e[e.length-1]===o[0]),i,t,r]}(n);return $r(t||i,"Invalid decoded address checksum"),$r([-1,a].includes(r),(()=>`Expected ss58Format ${r}, received ${a}`)),n.slice(s,o)}catch(t){throw new Error(`Decoding ${e}: ${t.message}`)}}function ko(e,t=xo.prefix){const r=Po(e);$r(t>=0&&t<=16383&&![46,47].includes(t),"Out of range ss58Format specified"),$r(xo.allowedDecodedLengths.includes(r.length),(()=>`Expected a valid key to convert, with length ${xo.allowedDecodedLengths.join(", ")}`));const n=mn(t<64?[t]:[(252&t)>>2|64,t>>8|(3&t)<<6],r);return function(e,t){const r=Ii.encode(pn(e));return t?`z${r}`:r}(mn(n,po(n).subarray(0,[32,33].includes(r.length)?2:1)))}function To(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function So(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?To(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):To(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const Mo=window;function Ao(){return 0!==Object.keys(Mo.injectedWeb3).length}function No(e){throw new Error(`${e}: web3Enable(originName) needs to be called before ${e}`)}function Oo(e,t,r){return t.map((({address:t,genesisHash:n,name:i,type:o})=>({address:42===t.length?t:ko(Po(t),r),meta:{genesisHash:n,name:i,source:e},type:o})))}Mo.injectedWeb3=Mo.injectedWeb3||{};let Ho=Ao(),Io=null;function Vo(e,t=[]){if(!e)throw new Error("You must pass a name for your app to the web3Enable function");const r=t.length?Promise.all(t.map((e=>e().catch((()=>!1))))):Promise.resolve([!0]);var n;return n=()=>r.then((()=>function(e){return Promise.all(Object.entries(Mo.injectedWeb3).map((([t,{enable:r,version:n}])=>Promise.all([Promise.resolve({name:t,version:n}),r(e).catch((e=>{console.error(`Error initializing ${t}: ${e.message}`)}))]))))}(e).then((e=>e.filter((e=>!!e[1])).map((([e,t])=>(t.accounts.subscribe||(t.accounts.subscribe=e=>(t.accounts.get().then(e).catch(console.error),()=>{})),So(So({},e),t)))))).catch((()=>[])).then((e=>{const t=e.map((({name:e,version:t})=>`${e}/${t}`));return Ho=Ao(),console.log(`web3Enable: Enabled ${e.length} extension${1!==e.length?"s":""}: ${t.join(", ")}`),e})))),Io=new Promise((e=>{"complete"===document.readyState?e(n()):window.addEventListener("load",(()=>e(n())))})),Io}async function Eo({accountType:e,ss58Format:t}={}){if(!Io)return No("web3Accounts");const r=[],n=await Io;(await Promise.all(n.map((async({accounts:r,name:n})=>{try{return Oo(n,(await r.get()).filter((({type:t})=>!t||!e||e.includes(t))),t)}catch(e){return[]}})))).forEach((e=>{r.push(...e)}));const i=r.map((({address:e})=>e));return console.log(`web3Accounts: Found ${r.length} address${1!==r.length?"es":""}: ${i.join(", ")}`),r}async function zo(e){if(!Io)return No("web3FromSource");const t=await Io,r=e&&t.find((({name:t})=>t===e));if(!r)throw new Error(`web3FromSource: Unable to find an injected ${e}`);return r}var Co={code:201,message:"Extension not installed or not allowed for this dApp"},jo=function(e){return{code:202,message:"Account by address (".concat(e,") not exist")}},Lo={code:203,message:"Sign canceled by user"},Ro={code:204,message:"Unknown error"},Bo=function(){function t(r){e(a)(this,t),e(d)(this,"initPromise",null),e(d)(this,"isError",!1),e(d)(this,"http",null),this.parent=r}var r,n,i,o,s;return e(c)(t,[{key:"isInit",get:function(){return this.initPromise&&!this.isError}},{key:"init",value:(s=e(f)(e(h).mark((function t(){var r=this;return e(h).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.isInit||(this.initPromise=new Promise(function(){var t=e(f)(e(h).mark((function t(n,i){var o;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Vo(r.parent.config.appName);case 2:0===(o=e.sent).length&&(r.isError=!0,i(Co)),r.isError=!1,n(o);case 6:case"end":return e.stop()}}),t)})));return function(e,r){return t.apply(this,arguments)}}())),t.abrupt("return",this.initPromise);case 2:case"end":return t.stop()}}),t,this)}))),function(){return s.apply(this,arguments)})},{key:"getAccounts",value:(o=e(f)(e(h).mark((function t(){return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.init();case 2:return e.next=4,Eo({ss58Format:2});case 4:return e.abrupt("return",e.sent);case 5:case"end":return e.stop()}}),t,this)}))),function(){return o.apply(this,arguments)})},{key:"getAccountByAddress",value:(i=e(f)(e(h).mark((function t(r){var n;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.init();case 2:return e.next=4,this.getAccounts();case 4:return n=e.sent,e.abrupt("return",n.find((function(e){return e.address===r})));case 6:case"end":return e.stop()}}),t,this)}))),function(e){return i.apply(this,arguments)})},{key:"signMessage",value:(n=e(f)(e(h).mark((function t(r,n){var i,o,s,a,c,u;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.init();case 2:return e.next=4,this.getAccountByAddress(r);case 4:if(o=e.sent){e.next=7;break}throw jo(r);case 7:return e.next=9,zo(o.meta.source);case 9:if(s=e.sent,!(a=null==s||null===(i=s.signer)||void 0===i?void 0:i.signRaw)){e.next=23;break}return e.prev=12,e.next=15,a({address:o.address,data:Ur(n),type:"bytes"});case 15:return c=e.sent,u=c.signature,e.abrupt("return",u);case 20:throw e.prev=20,e.t0=e.catch(12),Lo;case 23:throw Ro;case 24:case"end":return e.stop()}}),t,this,[[12,20]])}))),function(e,t){return n.apply(this,arguments)})},{key:"sendTx",value:(r=e(f)(e(h).mark((function t(r,n){var i,o,s=this;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.init();case 2:return e.next=4,this.getAccountByAddress(r);case 4:if(i=e.sent){e.next=7;break}throw jo(r);case 7:return e.next=9,zo(i.meta.source);case 9:return o=e.sent,e.abrupt("return",new Promise((function(e,t){n.signAndSend(i.address,{signer:o.signer},(function(e){var t=e.status,r=e.events,n=e.dispatchError;if(console.log(t,r,n),n)if(n.isModule){var i=s.parent.api.api.registry.findMetaError(n.asModule),o=i.docs,a=i.name,c=i.section;console.log("".concat(c,".").concat(a,": ").concat(o.join(" ")))}else console.log(n.toString())})).catch((function(e){console.error("Transaction failed",e),t(e)}))})));case 11:case"end":return e.stop()}}),t,this)}))),function(e,t){return r.apply(this,arguments)})}]),t}(),Do={},Xo={},qo={};(qo=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}).default=qo,qo.__esModule=!0,(Xo=function(e){if(Array.isArray(e))return qo(e)}).default=Xo,Xo.__esModule=!0;var Wo={};(Wo=function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}).default=Wo,Wo.__esModule=!0;var Fo={};(Fo=function(e,t){if(e){if("string"==typeof e)return qo(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?qo(e,t):void 0}}).default=Fo,Fo.__esModule=!0;var Uo={};(Uo=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}).default=Uo,Uo.__esModule=!0,(Do=function(e){return Xo(e)||Wo(e)||Fo(e)||Uo()}).default=Do,Do.__esModule=!0;var Go;s.register("kCnaQ",(function(e,t){"use strict";var r=s("1Hswh"),n=s("cjzlx"),i=s("fiC4d"),o=s("cF3Kr");var a=function e(t){var s=new i(t),a=n(i.prototype.request,s);return r.extend(a,i.prototype,s),r.extend(a,s),a.create=function(r){return e(o(t,r))},a}(s("11ZfA"));a.Axios=i,a.Cancel=s("lLqs8"),a.CancelToken=s("7ef28"),a.isCancel=s("fX9wb"),a.VERSION=s("9jizx").version,a.all=function(e){return Promise.all(e)},a.spread=s("3YWih"),a.isAxiosError=s("lueKS"),e.exports=a,e.exports.default=a})),s.register("1Hswh",(function(e,t){"use strict";var r=s("cjzlx"),n=Object.prototype.toString;function i(e){return"[object Array]"===n.call(e)}function o(e){return void 0===e}function a(e){return null!==e&&"object"==typeof e}function c(e){if("[object Object]"!==n.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function u(e){return"[object Function]"===n.call(e)}function d(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var r=0,n=e.length;r<n;r++)t.call(null,e[r],r,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===n.call(e)},isBuffer:function(e){return null!==e&&!o(e)&&null!==e.constructor&&!o(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:a,isPlainObject:c,isUndefined:o,isDate:function(e){return"[object Date]"===n.call(e)},isFile:function(e){return"[object File]"===n.call(e)},isBlob:function(e){return"[object Blob]"===n.call(e)},isFunction:u,isStream:function(e){return a(e)&&u(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:d,merge:function e(){var t={};function r(r,n){c(t[n])&&c(r)?t[n]=e(t[n],r):c(r)?t[n]=e({},r):i(r)?t[n]=r.slice():t[n]=r}for(var n=0,o=arguments.length;n<o;n++)d(arguments[n],r);return t},extend:function(e,t,n){return d(t,(function(t,i){e[i]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}})),s.register("cjzlx",(function(e,t){"use strict";e.exports=function(e,t){return function(){for(var r=new Array(arguments.length),n=0;n<r.length;n++)r[n]=arguments[n];return e.apply(t,r)}}})),s.register("fiC4d",(function(e,t){"use strict";var r=s("1Hswh"),n=s("34MOH"),i=s("5V6xY"),o=s("a89Vo"),a=s("cF3Kr"),c=s("dq09r"),u=c.validators;function d(e){this.defaults=e,this.interceptors={request:new i,response:new i}}d.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=a(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=e.transitional;void 0!==t&&c.assertOptions(t,{silentJSONParsing:u.transitional(u.boolean),forcedJSONParsing:u.transitional(u.boolean),clarifyTimeoutError:u.transitional(u.boolean)},!1);var r=[],n=!0;this.interceptors.request.forEach((function(t){"function"==typeof t.runWhen&&!1===t.runWhen(e)||(n=n&&t.synchronous,r.unshift(t.fulfilled,t.rejected))}));var i,s=[];if(this.interceptors.response.forEach((function(e){s.push(e.fulfilled,e.rejected)})),!n){var d=[o,void 0];for(Array.prototype.unshift.apply(d,r),d=d.concat(s),i=Promise.resolve(e);d.length;)i=i.then(d.shift(),d.shift());return i}for(var f=e;r.length;){var l=r.shift(),h=r.shift();try{f=l(f)}catch(e){h(e);break}}try{i=o(f)}catch(e){return Promise.reject(e)}for(;s.length;)i=i.then(s.shift(),s.shift());return i},d.prototype.getUri=function(e){return e=a(this.defaults,e),n(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){d.prototype[e]=function(t,r){return this.request(a(r||{},{method:e,url:t,data:(r||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){d.prototype[e]=function(t,r,n){return this.request(a(n||{},{method:e,url:t,data:r}))}})),e.exports=d})),s.register("34MOH",(function(e,t){"use strict";var r=s("1Hswh");function n(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,i){if(!t)return e;var o;if(i)o=i(t);else if(r.isURLSearchParams(t))o=t.toString();else{var s=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),s.push(n(t)+"="+n(e))})))})),o=s.join("&")}if(o){var a=e.indexOf("#");-1!==a&&(e=e.slice(0,a)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e}})),s.register("5V6xY",(function(e,t){"use strict";var r=s("1Hswh");function n(){this.handlers=[]}n.prototype.use=function(e,t,r){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!r&&r.synchronous,runWhen:r?r.runWhen:null}),this.handlers.length-1},n.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},n.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=n})),s.register("a89Vo",(function(e,t){"use strict";var r=s("1Hswh"),n=s("a4gWZ"),i=s("fX9wb"),o=s("11ZfA"),a=s("lLqs8");function c(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new a("canceled")}e.exports=function(e){return c(e),e.headers=e.headers||{},e.data=n.call(e,e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||o.adapter)(e).then((function(t){return c(e),t.data=n.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return i(t)||(c(e),t&&t.response&&(t.response.data=n.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}})),s.register("a4gWZ",(function(e,t){"use strict";var r=s("1Hswh"),n=s("11ZfA");e.exports=function(e,t,i){var o=this||n;return r.forEach(i,(function(r){e=r.call(o,e,t)})),e}})),s.register("11ZfA",(function(e,t){"use strict";var r=s("1Hswh"),n=s("3eoKx"),i=s("3UUOY"),o={"Content-Type":"application/x-www-form-urlencoded"};function a(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var c,u={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==ut&&"[object process]"===Object.prototype.toString.call(ut))&&(c=s("3BhdI")),c),transformRequest:[function(e,t){return n(t,"Accept"),n(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(a(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)||t&&"application/json"===t["Content-Type"]?(a(t,"application/json"),function(e,t,n){if(r.isString(e))try{return(t||JSON.parse)(e),r.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(n||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||u.transitional,n=t&&t.silentJSONParsing,o=t&&t.forcedJSONParsing,s=!n&&"json"===this.responseType;if(s||o&&r.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(s){if("SyntaxError"===e.name)throw i(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){u.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){u.headers[e]=r.merge(o)})),e.exports=u})),s.register("3eoKx",(function(e,t){"use strict";var r=s("1Hswh");e.exports=function(e,t){r.forEach(e,(function(r,n){n!==t&&n.toUpperCase()===t.toUpperCase()&&(e[t]=r,delete e[n])}))}})),s.register("3UUOY",(function(e,t){"use strict";e.exports=function(e,t,r,n,i){return e.config=t,r&&(e.code=r),e.request=n,e.response=i,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},e}})),s.register("3BhdI",(function(e,t){"use strict";var r=s("1Hswh"),n=s("5Hcx3"),i=s("9aknn"),o=s("34MOH"),a=s("2yuaw"),c=s("fTY15"),u=s("glEZp"),d=s("dIknf"),f=s("11ZfA"),l=s("lLqs8");e.exports=function(e){return new Promise((function(t,s){var h,p=e.data,m=e.headers,y=e.responseType;function b(){e.cancelToken&&e.cancelToken.unsubscribe(h),e.signal&&e.signal.removeEventListener("abort",h)}r.isFormData(p)&&delete m["Content-Type"];var g=new XMLHttpRequest;if(e.auth){var v=e.auth.username||"",w=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";m.Authorization="Basic "+btoa(v+":"+w)}var x=a(e.baseURL,e.url);function P(){if(g){var r="getAllResponseHeaders"in g?c(g.getAllResponseHeaders()):null,i={data:y&&"text"!==y&&"json"!==y?g.response:g.responseText,status:g.status,statusText:g.statusText,headers:r,config:e,request:g};n((function(e){t(e),b()}),(function(e){s(e),b()}),i),g=null}}if(g.open(e.method.toUpperCase(),o(x,e.params,e.paramsSerializer),!0),g.timeout=e.timeout,"onloadend"in g?g.onloadend=P:g.onreadystatechange=function(){g&&4===g.readyState&&(0!==g.status||g.responseURL&&0===g.responseURL.indexOf("file:"))&&setTimeout(P)},g.onabort=function(){g&&(s(d("Request aborted",e,"ECONNABORTED",g)),g=null)},g.onerror=function(){s(d("Network Error",e,null,g)),g=null},g.ontimeout=function(){var t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",r=e.transitional||f.transitional;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),s(d(t,e,r.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",g)),g=null},r.isStandardBrowserEnv()){var k=(e.withCredentials||u(x))&&e.xsrfCookieName?i.read(e.xsrfCookieName):void 0;k&&(m[e.xsrfHeaderName]=k)}"setRequestHeader"in g&&r.forEach(m,(function(e,t){void 0===p&&"content-type"===t.toLowerCase()?delete m[t]:g.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(g.withCredentials=!!e.withCredentials),y&&"json"!==y&&(g.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&g.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&g.upload&&g.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(h=function(e){g&&(s(!e||e&&e.type?new l("canceled"):e),g.abort(),g=null)},e.cancelToken&&e.cancelToken.subscribe(h),e.signal&&(e.signal.aborted?h():e.signal.addEventListener("abort",h))),p||(p=null),g.send(p)}))}})),s.register("5Hcx3",(function(e,t){"use strict";var r=s("dIknf");e.exports=function(e,t,n){var i=n.config.validateStatus;n.status&&i&&!i(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}})),s.register("dIknf",(function(e,t){"use strict";var r=s("3UUOY");e.exports=function(e,t,n,i,o){var s=new Error(e);return r(s,t,n,i,o)}})),s.register("9aknn",(function(e,t){"use strict";var r=s("1Hswh");e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,i,o,s){var a=[];a.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&a.push("expires="+new Date(n).toGMTString()),r.isString(i)&&a.push("path="+i),r.isString(o)&&a.push("domain="+o),!0===s&&a.push("secure"),document.cookie=a.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}})),s.register("2yuaw",(function(e,t){"use strict";var r=s("3BZ4S"),n=s("4G0sQ");e.exports=function(e,t){return e&&!r(t)?n(e,t):t}})),s.register("3BZ4S",(function(e,t){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}})),s.register("4G0sQ",(function(e,t){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}})),s.register("fTY15",(function(e,t){"use strict";var r=s("1Hswh"),n=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,i,o,s={};return e?(r.forEach(e.split("\n"),(function(e){if(o=e.indexOf(":"),t=r.trim(e.substr(0,o)).toLowerCase(),i=r.trim(e.substr(o+1)),t){if(s[t]&&n.indexOf(t)>=0)return;s[t]="set-cookie"===t?(s[t]?s[t]:[]).concat([i]):s[t]?s[t]+", "+i:i}})),s):s}})),s.register("glEZp",(function(e,t){"use strict";var r=s("1Hswh");e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function i(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=i(window.location.href),function(t){var n=r.isString(t)?i(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}})),s.register("lLqs8",(function(e,t){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r})),s.register("fX9wb",(function(e,t){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}})),s.register("cF3Kr",(function(e,t){"use strict";var r=s("1Hswh");e.exports=function(e,t){t=t||{};var n={};function i(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function o(n){return r.isUndefined(t[n])?r.isUndefined(e[n])?void 0:i(void 0,e[n]):i(e[n],t[n])}function s(e){if(!r.isUndefined(t[e]))return i(void 0,t[e])}function a(n){return r.isUndefined(t[n])?r.isUndefined(e[n])?void 0:i(void 0,e[n]):i(void 0,t[n])}function c(r){return r in t?i(e[r],t[r]):r in e?i(void 0,e[r]):void 0}var u={url:s,method:s,data:s,baseURL:a,transformRequest:a,transformResponse:a,paramsSerializer:a,timeout:a,timeoutMessage:a,withCredentials:a,adapter:a,responseType:a,xsrfCookieName:a,xsrfHeaderName:a,onUploadProgress:a,onDownloadProgress:a,decompress:a,maxContentLength:a,maxBodyLength:a,transport:a,httpAgent:a,httpsAgent:a,cancelToken:a,socketPath:a,responseEncoding:a,validateStatus:c};return r.forEach(Object.keys(e).concat(Object.keys(t)),(function(e){var t=u[e]||o,i=t(e);r.isUndefined(i)&&t!==c||(n[e]=i)})),n}})),s.register("dq09r",(function(e,t){"use strict";var r=s("9jizx").version,n={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){n[e]=function(r){return typeof r===e||"a"+(t<1?"n ":" ")+e}}));var i={};n.transitional=function(e,t,n){function o(e,t){return"[Axios v"+r+"] Transitional option '"+e+"'"+t+(n?". "+n:"")}return function(r,n,s){if(!1===e)throw new Error(o(n," has been removed"+(t?" in "+t:"")));return t&&!i[n]&&(i[n]=!0,console.warn(o(n," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(r,n,s)}},e.exports={assertOptions:function(e,t,r){if("object"!=typeof e)throw new TypeError("options must be an object");for(var n=Object.keys(e),i=n.length;i-- >0;){var o=n[i],s=t[o];if(s){var a=e[o],c=void 0===a||s(a,o,e);if(!0!==c)throw new TypeError("option "+o+" must be "+c)}else if(!0!==r)throw Error("Unknown option "+o)}},validators:n}})),s.register("9jizx",(function(e,t){e.exports={version:"0.23.0"}})),s.register("7ef28",(function(e,t){"use strict";var r=s("lLqs8");function n(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;this.promise.then((function(e){if(n._listeners){var t,r=n._listeners.length;for(t=0;t<r;t++)n._listeners[t](e);n._listeners=null}})),this.promise.then=function(e){var t,r=new Promise((function(e){n.subscribe(e),t=e})).then(e);return r.cancel=function(){n.unsubscribe(t)},r},e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}n.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},n.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},n.prototype.unsubscribe=function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},n.source=function(){var e;return{token:new n((function(t){e=t})),cancel:e}},e.exports=n})),s.register("3YWih",(function(e,t){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}})),s.register("lueKS",(function(e,t){"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}})),Go=s("kCnaQ");var Zo={code:301,message:"Invalid JWT credentials"},Yo={code:302,message:"Token has expired"},Jo=function(e){return{code:303,message:e.response.data.message}},Ko=function(){function t(r){var n=this;e(a)(this,t),e(d)(this,"parent",null),e(d)(this,"referralCode",void 0),e(d)(this,"currentAuth",null),e(d)(this,"currentProfile",null),e(d)(this,"expiresTokenTimer",null),e(d)(this,"expiresTokenHandler",null),this.parent=r,this.http=e(Go).create({baseURL:this.parent.config.apiUrl}),this.http.interceptors.request.use((function(e){return n.isAuth&&(e.headers.Authorization="Bearer "+n.currentAuth.token),e})),this.detectReferral(),this.restoreState(),this.persistState()}var r,n,i,o,s,u,l,p,m,y;return e(c)(t,[{key:"isAuth",get:function(){return this.currentAuth&&this.currentAuth.token}},{key:"detectReferral",value:function(){var t=new URLSearchParams(window.location.search);if(t.get("r")&&(this.referralCode=t.get("r"),window.history&&window.history.pushState)){t.delete("r");var r=window.location.pathname+(e(Do)(t.keys()).length?"?"+t.toString():"");history.pushState(null,"",r)}}},{key:"restoreState",value:function(){var e=this.parent.storage,t=e.get("account");if(this.referralCode=this.referralCode||e.get("referralCode"),t&&t.auth)try{this.currentProfile=t.profile,this.setAuthState({user:t.auth.address,token:t.auth.token,expiresAt:+t.auth.expiresAt})}catch(t){e.set("account",void 0),e.set("referralCode",void 0)}else e.set("account",void 0)}},{key:"getServerAuthSalt",value:(y=e(f)(e(h).mark((function t(){return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",this.http.get("/auth/salt").then((function(e){return e.data.salt})));case 1:case"end":return e.stop()}}),t,this)}))),function(){return y.apply(this,arguments)})},{key:"hasUser",value:(m=e(f)(e(h).mark((function t(r){var n,i,o,s;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.type,i=r.payload,e.prev=1,e.next=4,this.http.get("/auth/has_user",{params:{type:n,payload:i}});case 4:return o=e.sent,s=o.data,e.abrupt("return",s.hasUser);case 9:if(e.prev=9,e.t0=e.catch(1),!e.t0.isAxiosError){e.next=13;break}throw Jo(e.t0);case 13:throw e.t0;case 14:case"end":return e.stop()}}),t,this,[[1,9]])}))),function(e){return m.apply(this,arguments)})},{key:"setNodeAddress",value:(p=e(f)(e(h).mark((function t(r){var n,i,o;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getServerAuthSalt();case 2:return n=e.sent,e.next=5,this.parent.extension.signMessage(r,r+n);case 5:return i=e.sent,o={node_address:r,signature:i},e.prev=7,e.next=10,this.http.post("/auth/account",o);case 10:return e.sent.data,e.abrupt("return",!0);case 15:if(e.prev=15,e.t0=e.catch(7),!e.t0.isAxiosError){e.next=19;break}throw Jo(e.t0);case 19:throw e.t0;case 20:case"end":return e.stop()}}),t,this,[[7,15]])}))),function(e){return p.apply(this,arguments)})},{key:"register",value:(l=e(f)(e(h).mark((function t(r){var n,i,o,s,a;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getServerAuthSalt();case 2:return n=e.sent,e.next=5,this.parent.extension.signMessage(r.address,"I own this address and I agree my signature binds me to the terms and conditions I checked (".concat(n,")"));case 5:return i=e.sent,o={email:r.email,address:r.address,referralCode:r.referralCode?r.referralCode:this.referralCode,signature:i},e.prev=7,e.next=10,this.http.post("/auth/register",o);case 10:return s=e.sent,a=s.data,this.setAuthState(a),e.abrupt("return",i);case 16:if(e.prev=16,e.t0=e.catch(7),!e.t0.isAxiosError){e.next=20;break}throw Jo(e.t0);case 20:throw e.t0;case 21:case"end":return e.stop()}}),t,this,[[7,16]])}))),function(e){return l.apply(this,arguments)})},{key:"registerAccount",value:(u=e(f)(e(h).mark((function t(r){var n,i,o,s,a;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getServerAuthSalt();case 2:return n=e.sent,e.next=5,this.parent.extension.signMessage(r.address,"I own this address and I agree my signature binds me to the terms and conditions I checked (".concat(n,")"));case 5:return i=e.sent,o={email:r.email,address:r.address,signature:i},e.prev=7,e.next=10,this.http.post("/auth/register_account",o);case 10:return s=e.sent,a=s.data,this.setAuthState(a),e.abrupt("return",i);case 16:if(e.prev=16,e.t0=e.catch(7),!e.t0.isAxiosError){e.next=20;break}throw Jo(e.t0);case 20:throw e.t0;case 21:case"end":return e.stop()}}),t,this,[[7,16]])}))),function(e){return u.apply(this,arguments)})},{key:"getKycStatus",value:(s=e(f)(e(h).mark((function t(){var r,n;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.http.get("/kyc");case 2:return r=e.sent,n=r.data,e.abrupt("return",n);case 5:case"end":return e.stop()}}),t,this)}))),function(){return s.apply(this,arguments)})},{key:"getCrowdloanParams",value:(o=e(f)(e(h).mark((function t(){var r,n;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.http.get("/crowdloan");case 2:return r=e.sent,n=r.data,e.abrupt("return",n);case 5:case"end":return e.stop()}}),t,this)}))),function(){return o.apply(this,arguments)})},{key:"login",value:(i=e(f)(e(h).mark((function t(r){var n,i,o,s,a;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=this.parent.extension,e.next=3,this.getServerAuthSalt();case 3:return i=e.sent,e.next=6,n.signMessage(r,"".concat(r).concat(i));case 6:return o=e.sent,e.prev=7,e.next=10,this.http.post("/auth/login",{address:r,signature:o});case 10:return s=e.sent,a=s.data,this.setAuthState(a),e.abrupt("return",this.currentAuth);case 16:if(e.prev=16,e.t0=e.catch(7),!e.t0.isAxiosError){e.next=20;break}throw Jo(e.t0);case 20:throw e.t0;case 21:case"end":return e.stop()}}),t,this,[[7,16]])}))),function(e){return i.apply(this,arguments)})},{key:"profile",value:(n=e(f)(e(h).mark((function t(){var r,n,i;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,r=this.parent.storage,(n=r.get("account"))&&n.profile&&!(+Date.now()-(+n.profile.updatedAt||0)>=1e4)){e.next=10;break}return e.next=6,this.http.get("/auth/account").then((function(e){return e.data}));case 6:i=e.sent,this.currentProfile={data:i,updatedAt:+Date.now()},e.next=11;break;case 10:this.currentProfile=n.profile;case 11:return this.persistState(),e.abrupt("return",this.currentProfile.data);case 15:if(e.prev=15,e.t0=e.catch(0),!e.t0.isAxiosError){e.next=19;break}throw Jo(e.t0);case 19:throw e.t0;case 20:case"end":return e.stop()}}),t,this,[[0,15]])}))),function(){return n.apply(this,arguments)})},{key:"checkAccess",value:(r=e(f)(e(h).mark((function t(){var r;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.http.get("/check_access").then((function(e){return e.data}));case 2:return r=e.sent,e.abrupt("return",r.status);case 4:case"end":return e.stop()}}),t,this)}))),function(){return r.apply(this,arguments)})},{key:"logout",value:function(){try{this.setAuthState(null)}catch(e){}this.parent.storage.set("account",void 0)}},{key:"onExpiresSession",value:function(e){this.expiresTokenHandler=e}},{key:"setAuthState",value:function(e){var t=this;try{if(!e.user||!e.token||!e.expiresAt)throw Zo;var r=Math.ceil(+Date.now()/1e3);if(+e.expiresAt<=r)throw Yo;this.currentAuth={address:e.user,token:e.token,expiresAt:+e.expiresAt};var n=Math.max(1e3*(+e.expiresAt-r-3),100);this.expiresTokenTimer=setTimeout((function(){t.expiresTokenHandler&&"function"==typeof t.expiresTokenHandler&&t.expiresTokenHandler(),t.logout()}),n)}catch(e){throw null!==this.expiresTokenTimer&&(this.expiresTokenTimer,1)&&clearTimeout(this.expiresTokenTimer),e}finally{this.persistState()}}},{key:"persistState",value:function(){var e=this.parent.storage,t=e.get("account",{auth:null,profile:null});t.auth=this.currentAuth,t.profile=this.currentProfile,e.set("account",t),e.set("referralCode",this.referralCode)}}]),t}();const Qo={name:"@polkadot/api-derive",version:"6.9.2"},_o={name:"@polkadot/rpc-core",version:"6.9.2"},$o={name:"@polkadot/rpc-provider",version:"6.9.2"},es={name:"@polkadot/types",version:"6.9.2"},ts={name:"@polkadot/types-known",version:"6.9.2"},rs={name:"@polkadot/api",version:"6.9.2"};var ns="node_modules/@polkadot/api";N(rs,ns,[Qo,_o,$o,es,ts]);var is="node_modules/@polkadot/rpc-provider";function os(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}N($o,is,[es]);var ss=0;function as(e){return"__private_"+ss+++"_"+e}var cs={},us=Object.prototype.hasOwnProperty,ds="~";function fs(){}function ls(e,t,r){this.fn=e,this.context=t,this.once=r||!1}function hs(e,t,r,n,i){if("function"!=typeof r)throw new TypeError("The listener must be a function");var o=new ls(r,n||e,i),s=ds?ds+t:t;return e._events[s]?e._events[s].fn?e._events[s]=[e._events[s],o]:e._events[s].push(o):(e._events[s]=o,e._eventsCount++),e}function ps(e,t){0==--e._eventsCount?e._events=new fs:delete e._events[t]}function ms(){this._events=new fs,this._eventsCount=0}Object.create&&(fs.prototype=Object.create(null),(new fs).__proto__||(ds=!1)),ms.prototype.eventNames=function(){var e,t,r=[];if(0===this._eventsCount)return r;for(t in e=this._events)us.call(e,t)&&r.push(ds?t.slice(1):t);return Object.getOwnPropertySymbols?r.concat(Object.getOwnPropertySymbols(e)):r},ms.prototype.listeners=function(e){var t=ds?ds+e:e,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var n=0,i=r.length,o=new Array(i);n<i;n++)o[n]=r[n].fn;return o},ms.prototype.listenerCount=function(e){var t=ds?ds+e:e,r=this._events[t];return r?r.fn?1:r.length:0},ms.prototype.emit=function(e,t,r,n,i,o){var s=ds?ds+e:e;if(!this._events[s])return!1;var a,c,u=this._events[s],d=arguments.length;if(u.fn){switch(u.once&&this.removeListener(e,u.fn,void 0,!0),d){case 1:return u.fn.call(u.context),!0;case 2:return u.fn.call(u.context,t),!0;case 3:return u.fn.call(u.context,t,r),!0;case 4:return u.fn.call(u.context,t,r,n),!0;case 5:return u.fn.call(u.context,t,r,n,i),!0;case 6:return u.fn.call(u.context,t,r,n,i,o),!0}for(c=1,a=new Array(d-1);c<d;c++)a[c-1]=arguments[c];u.fn.apply(u.context,a)}else{var f,l=u.length;for(c=0;c<l;c++)switch(u[c].once&&this.removeListener(e,u[c].fn,void 0,!0),d){case 1:u[c].fn.call(u[c].context);break;case 2:u[c].fn.call(u[c].context,t);break;case 3:u[c].fn.call(u[c].context,t,r);break;case 4:u[c].fn.call(u[c].context,t,r,n);break;default:if(!a)for(f=1,a=new Array(d-1);f<d;f++)a[f-1]=arguments[f];u[c].fn.apply(u[c].context,a)}}return!0},ms.prototype.on=function(e,t,r){return hs(this,e,t,r,!1)},ms.prototype.once=function(e,t,r){return hs(this,e,t,r,!0)},ms.prototype.removeListener=function(e,t,r,n){var i=ds?ds+e:e;if(!this._events[i])return this;if(!t)return ps(this,i),this;var o=this._events[i];if(o.fn)o.fn!==t||n&&!o.once||r&&o.context!==r||ps(this,i);else{for(var s=0,a=[],c=o.length;s<c;s++)(o[s].fn!==t||n&&!o[s].once||r&&o[s].context!==r)&&a.push(o[s]);a.length?this._events[i]=1===a.length?a[0]:a:ps(this,i)}return this},ms.prototype.removeAllListeners=function(e){var t;return e?(t=ds?ds+e:e,this._events[t]&&ps(this,t)):(this._events=new fs,this._eventsCount=0),this},ms.prototype.off=ms.prototype.removeListener,ms.prototype.addListener=ms.prototype.on,ms.prefixed=ds,ms.EventEmitter=ms,cs=ms;const ys=m.WebSocket;var bs=as("id");class gs{constructor(){Object.defineProperty(this,bs,{writable:!0,value:0})}decodeResponse(e){k(e,"Empty response object received"),k("2.0"===e.jsonrpc,"Invalid jsonrpc field in decoded object");const t=!P(e.params)&&!P(e.method);return k(re(e.id)||t&&(re(e.params.subscription)||w(e.params.subscription)),"Invalid id field in decoded object"),this._checkError(e.error),k(!P(e.result)||t,"No result found in JsonRpc response"),t?(this._checkError(e.params.error),e.params.result):e.result}encodeJson(e,t){return Mr(this.encodeObject(e,t))}encodeObject(e,t){return{id:++os(this,bs)[bs],jsonrpc:"2.0",method:e,params:t}}getId(){return os(this,bs)[bs]}_checkError(e){if(e){const{code:t,data:r,message:n}=e;throw new Error(`${t}: ${n}${function(e){if(P(e))return"";const t=`: ${w(e)?e.replace(/Error\("/g,"").replace(/\("/g,"(").replace(/"\)/g,")").replace(/\(/g,", ").replace(/\)/g,""):Mr(e)}`;return t.length<=256?t:`${t.substr(0,255)}…`}(r)}`)}}}var vs="ws://127.0.0.1:9944";class ws{constructor(e){this.key=void 0,this.next=void 0,this.prev=void 0,this.key=e,this.next=this.prev=this}}var xs=as("data"),Ps=as("refs"),ks=as("length"),Ts=as("head"),Ss=as("tail"),Ms=as("toHead");class As{constructor(e=2048){Object.defineProperty(this,Ms,{value:Ns}),this.capacity=void 0,Object.defineProperty(this,xs,{writable:!0,value:new Map}),Object.defineProperty(this,Ps,{writable:!0,value:new Map}),Object.defineProperty(this,ks,{writable:!0,value:0}),Object.defineProperty(this,Ts,{writable:!0,value:void 0}),Object.defineProperty(this,Ss,{writable:!0,value:void 0}),this.capacity=e,os(this,Ts)[Ts]=os(this,Ss)[Ss]=new ws("<empty>")}get length(){return os(this,ks)[ks]}get lengthData(){return os(this,xs)[xs].size}get lengthRefs(){return os(this,Ps)[Ps].size}entries(){const e=this.keys(),t=new Array(e.length);for(let r=0;r<e.length;r++){const n=e[r];t[r]=[n,os(this,xs)[xs].get(n)]}return t}keys(){const e=[];if(os(this,ks)[ks]){let t=os(this,Ts)[Ts];for(;t!==os(this,Ss)[Ss];)e.push(t.key),t=t.next;e.push(t.key)}return e}get(e){const t=os(this,xs)[xs].get(e);return t?(os(this,Ms)[Ms](e),t):null}set(e,t){if(os(this,xs)[xs].has(e))os(this,Ms)[Ms](e);else{const t=new ws(e);os(this,Ps)[Ps].set(t.key,t),0===this.length?os(this,Ts)[Ts]=os(this,Ss)[Ss]=t:(os(this,Ts)[Ts].prev=t,t.next=os(this,Ts)[Ts],os(this,Ts)[Ts]=t),os(this,ks)[ks]===this.capacity?(os(this,xs)[xs].delete(os(this,Ss)[Ss].key),os(this,Ps)[Ps].delete(os(this,Ss)[Ss].key),os(this,Ss)[Ss]=os(this,Ss)[Ss].prev):os(this,ks)[ks]+=1}os(this,xs)[xs].set(e,t)}}function Ns(e){const t=os(this,Ps)[Ps].get(e);t&&t!==os(this,Ts)[Ts]&&(t.prev.next=t.next,t.next.prev=t.prev,t.next=os(this,Ts)[Ts],os(this,Ts)[Ts].prev=t,os(this,Ts)[Ts]=t)}const Os={1e3:"Normal Closure",1001:"Going Away",1002:"Protocol Error",1003:"Unsupported Data",1004:"(For future)",1005:"No Status Received",1006:"Abnormal Closure",1007:"Invalid frame payload data",1008:"Policy Violation",1009:"Message too big",1010:"Missing Extension",1011:"Internal Error",1012:"Service Restart",1013:"Try Again Later",1014:"Bad Gateway",1015:"TLS Handshake"};const Hs={chain_finalisedHead:"chain_finalizedHead",chain_subscribeFinalisedHeads:"chain_subscribeFinalizedHeads",chain_unsubscribeFinalisedHeads:"chain_unsubscribeFinalizedHeads"},Is=Tr("api-ws");function Vs(e,t){Object.keys(e).forEach((r=>{t&&t(e[r]),delete e[r]}))}var Es=as("callCache"),zs=as("coder"),Cs=as("endpoints"),js=as("headers"),Ls=as("eventemitter"),Rs=as("handlers"),Bs=as("isReadyPromise"),Ds=as("waitingForId"),Xs=as("autoConnectMs"),qs=as("endpointIndex"),Ws=as("isConnected"),Fs=as("subscriptions"),Us=as("websocket"),Gs=as("send"),Zs=as("emit"),Ys=as("onSocketClose"),Js=as("onSocketError"),Ks=as("onSocketMessage"),Qs=as("onSocketMessageResult"),_s=as("onSocketMessageSubscribe"),$s=as("onSocketOpen"),ea=as("resubscribe");class ta{constructor(t=vs,r=2500,n={}){Object.defineProperty(this,Gs,{value:ra}),Object.defineProperty(this,Es,{writable:!0,value:new As}),Object.defineProperty(this,zs,{writable:!0,value:void 0}),Object.defineProperty(this,Cs,{writable:!0,value:void 0}),Object.defineProperty(this,js,{writable:!0,value:void 0}),Object.defineProperty(this,Ls,{writable:!0,value:void 0}),Object.defineProperty(this,Rs,{writable:!0,value:{}}),Object.defineProperty(this,Bs,{writable:!0,value:void 0}),Object.defineProperty(this,Ds,{writable:!0,value:{}}),Object.defineProperty(this,Xs,{writable:!0,value:void 0}),Object.defineProperty(this,qs,{writable:!0,value:void 0}),Object.defineProperty(this,Ws,{writable:!0,value:!1}),Object.defineProperty(this,Fs,{writable:!0,value:{}}),Object.defineProperty(this,Us,{writable:!0,value:void 0}),Object.defineProperty(this,Zs,{writable:!0,value:(e,...t)=>{os(this,Ls)[Ls].emit(e,...t)}}),Object.defineProperty(this,Ys,{writable:!0,value:e=>{const t=new Error(`disconnected from ${os(this,Cs)[Cs][os(this,qs)[qs]]}: ${e.code}:: ${e.reason||(r=e.code,r>=0&&r<=999?"(Unused)":Os[r]||function(e){return e<=1999?"(For WebSocket standard)":e<=2999?"(For WebSocket extensions)":e<=3999?"(For libraries and frameworks)":e<=4999?"(For applications)":void 0}(r)||"(Unknown)")}`);var r;os(this,Xs)[Xs]>0&&Is.error(t.message),os(this,Ws)[Ws]=!1,os(this,Us)[Us]&&(os(this,Us)[Us].onclose=null,os(this,Us)[Us].onerror=null,os(this,Us)[Us].onmessage=null,os(this,Us)[Us].onopen=null,os(this,Us)[Us]=null),os(this,Zs)[Zs]("disconnected"),Vs(os(this,Rs)[Rs],(e=>e.callback(t,void 0))),Vs(os(this,Ds)[Ds]),os(this,Xs)[Xs]>0&&setTimeout((()=>{this.connectWithRetry().catch((()=>{}))}),os(this,Xs)[Xs])}}),Object.defineProperty(this,Js,{writable:!0,value:e=>{Is.debug((()=>["socket error",e])),os(this,Zs)[Zs]("error",e)}}),Object.defineProperty(this,Ks,{writable:!0,value:e=>{Is.debug((()=>["received",e.data]));const t=JSON.parse(e.data);return P(t.method)?os(this,Qs)[Qs](t):os(this,_s)[_s](t)}}),Object.defineProperty(this,Qs,{writable:!0,value:e=>{const t=os(this,Rs)[Rs][e.id];if(t){try{const{method:r,params:n,subscription:i}=t,o=os(this,zs)[zs].decodeResponse(e);if(t.callback(null,o),i){const e=`${i.type}::${o}`;os(this,Fs)[Fs][e]=U({},i,{method:r,params:n}),os(this,Ds)[Ds][e]&&os(this,_s)[_s](os(this,Ds)[Ds][e])}}catch(e){t.callback(e,void 0)}delete os(this,Rs)[Rs][e.id]}else Is.debug((()=>`Unable to find handler for id=${e.id}`))}}),Object.defineProperty(this,_s,{writable:!0,value:e=>{const t=`${Hs[e.method]||e.method||"invalid"}::${e.params.subscription}`,r=os(this,Fs)[Fs][t];if(!r)return os(this,Ds)[Ds][t]=e,void Is.debug((()=>`Unable to find handler for subscription=${t}`));delete os(this,Ds)[Ds][t];try{const t=os(this,zs)[zs].decodeResponse(e);r.callback(null,t)}catch(e){r.callback(e,void 0)}}}),Object.defineProperty(this,$s,{writable:!0,value:()=>(k(!x(os(this,Us)[Us]),"WebSocket cannot be null in onOpen"),Is.debug((()=>["connected to",os(this,Cs)[Cs][os(this,qs)[qs]]])),os(this,Ws)[Ws]=!0,os(this,Zs)[Zs]("connected"),os(this,ea)[ea](),!0)}),Object.defineProperty(this,ea,{writable:!0,value:()=>{const e=os(this,Fs)[Fs];os(this,Fs)[Fs]={},Promise.all(Object.keys(e).map((async t=>{const{callback:r,method:n,params:i,type:o}=e[t];if(!o.startsWith("author_"))try{await this.subscribe(o,n,i,r)}catch(e){Is.error(e)}}))).catch(Is.error)}});const i=Array.isArray(t)?t:[t];k(0!==i.length,"WsProvider requires at least one Endpoint"),i.forEach((e=>{k(/^(wss|ws):\/\//.test(e),(()=>`Endpoint should start with 'ws://', received '${e}'`))})),os(this,Ls)[Ls]=new(e(cs)),os(this,Xs)[Xs]=r||0,os(this,zs)[zs]=new gs,os(this,qs)[qs]=-1,os(this,Cs)[Cs]=i,os(this,js)[js]=n,os(this,Us)[Us]=null,r>0&&this.connectWithRetry().catch((()=>{})),os(this,Bs)[Bs]=new Promise((e=>{os(this,Ls)[Ls].once("connected",(()=>{e(this)}))}))}get hasSubscriptions(){return!0}get isConnected(){return os(this,Ws)[Ws]}get isReady(){return os(this,Bs)[Bs]}clone(){return new ta(os(this,Cs)[Cs])}async connect(){try{os(this,qs)[qs]=(os(this,qs)[qs]+1)%os(this,Cs)[Cs].length,os(this,Us)[Us]=void 0!==m.WebSocket&&(e=m.WebSocket,(t=ys)&&(e===t||e.isPrototypeOf(t)))?new ys(os(this,Cs)[Cs][os(this,qs)[qs]]):new ys(os(this,Cs)[Cs][os(this,qs)[qs]],void 0,void 0,os(this,js)[js],void 0,{fragmentOutgoingMessages:!0,fragmentationThreshold:1048576,maxReceivedFrameSize:25165824,maxReceivedMessageSize:25165824}),os(this,Us)[Us].onclose=os(this,Ys)[Ys],os(this,Us)[Us].onerror=os(this,Js)[Js],os(this,Us)[Us].onmessage=os(this,Ks)[Ks],os(this,Us)[Us].onopen=os(this,$s)[$s]}catch(e){throw Is.error(e),os(this,Zs)[Zs]("error",e),e}var e,t}async connectWithRetry(){if(os(this,Xs)[Xs]>0)try{await this.connect()}catch(e){setTimeout((()=>{this.connectWithRetry().catch((()=>{}))}),os(this,Xs)[Xs])}}async disconnect(){os(this,Xs)[Xs]=0;try{os(this,Us)[Us]&&os(this,Us)[Us].close(1e3)}catch(e){throw Is.error(e),os(this,Zs)[Zs]("error",e),e}}on(e,t){return os(this,Ls)[Ls].on(e,t),()=>{os(this,Ls)[Ls].removeListener(e,t)}}send(e,t,r,n){const i=os(this,zs)[zs].encodeJson(e,t);let o=r?os(this,Es)[Es].get(i):null;return o||(o=os(this,Gs)[Gs](i,e,t,n),r&&os(this,Es)[Es].set(i,o)),o}subscribe(e,t,r,n){return this.send(t,r,!1,{callback:n,type:e})}async unsubscribe(e,t,r){const n=`${e}::${r}`;if(P(os(this,Fs)[Fs][n]))return Is.debug((()=>`Unable to find active subscription=${n}`)),!1;delete os(this,Fs)[Fs][n];try{return!(this.isConnected&&!x(os(this,Us)[Us]))||this.send(t,[r])}catch(e){return!1}}}async function ra(e,t,r,n){return new Promise(((i,o)=>{try{k(this.isConnected&&!x(os(this,Us)[Us]),"WebSocket is not connected");const s=os(this,zs)[zs].getId(),a=(e,t)=>{e?o(e):i(t)};Is.debug((()=>["calling",t,e])),os(this,Rs)[Rs][s]={callback:a,method:t,params:r,subscription:n},os(this,Us)[Us].send(e)}catch(e){o(e)}}))}function na(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var ia=0;function oa(e){return"__private_"+ia+++"_"+e}function sa(e,t){return e.findMetaCall(Et(t))}function aa(e,t){return e.findMetaError(Et(t))}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */var ca=function(e,t){return(ca=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)};function ua(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}ca(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}function da(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{c(n.next(e))}catch(e){o(e)}}function a(e){try{c(n.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}c((n=n.apply(e,t||[])).next())}))}function fa(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=s.trys,(i=i.length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o}Object.create;function la(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function ha(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)s.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return s}function pa(e,t){for(var r=0,n=t.length,i=e.length;r<n;r++,i++)e[i]=t[r];return e}function ma(e){return this instanceof ma?(this.v=e,this):new ma(e)}function ya(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,i=r.apply(e,t||[]),o=[];function s(e){i[e]&&(n[e]=function(t){return new Promise((function(r,n){o.push([e,t,r,n])>1||a(e,t)}))})}function a(e,t){try{(r=i[e](t)).value instanceof ma?Promise.resolve(r.value.v).then(c,u):d(o[0][2],r)}catch(e){d(o[0][3],e)}var r}function c(e){a("next",e)}function u(e){a("throw",e)}function d(e,t){e(t),o.shift(),o.length&&a(o[0][0],o[0][1])}return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n}function ba(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,i){(function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r})}),t)})(n,i,(t=e[r](t)).done,t.value)}))}}return r?r.call(e):(e=la(e),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t)}Object.create;function ga(e){return"function"==typeof e}function va(e){var t=e((function(e){Error.call(e),e.stack=(new Error).stack}));return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t}var wa=va((function(e){return function(t){e(this),this.message=t?t.length+" errors occurred during unsubscription:\n"+t.map((function(e,t){return t+1+") "+e.toString()})).join("\n  "):"",this.name="UnsubscriptionError",this.errors=t}}));function xa(e,t){if(e){var r=e.indexOf(t);0<=r&&e.splice(r,1)}}var Pa=function(){function e(e){this.initialTeardown=e,this.closed=!1,this._parentage=null,this._teardowns=null}var t;return e.prototype.unsubscribe=function(){var e,t,r,n,i;if(!this.closed){this.closed=!0;var o=this._parentage;if(o)if(this._parentage=null,Array.isArray(o))try{for(var s=la(o),a=s.next();!a.done;a=s.next()){a.value.remove(this)}}catch(t){e={error:t}}finally{try{a&&!a.done&&(t=s.return)&&t.call(s)}finally{if(e)throw e.error}}else o.remove(this);var c=this.initialTeardown;if(ga(c))try{c()}catch(e){i=e instanceof wa?e.errors:[e]}var u=this._teardowns;if(u){this._teardowns=null;try{for(var d=la(u),f=d.next();!f.done;f=d.next()){var l=f.value;try{Sa(l)}catch(e){i=null!=i?i:[],e instanceof wa?i=pa(pa([],ha(i)),ha(e.errors)):i.push(e)}}}catch(e){r={error:e}}finally{try{f&&!f.done&&(n=d.return)&&n.call(d)}finally{if(r)throw r.error}}}if(i)throw new wa(i)}},e.prototype.add=function(t){var r;if(t&&t!==this)if(this.closed)Sa(t);else{if(t instanceof e){if(t.closed||t._hasParent(this))return;t._addParent(this)}(this._teardowns=null!==(r=this._teardowns)&&void 0!==r?r:[]).push(t)}},e.prototype._hasParent=function(e){var t=this._parentage;return t===e||Array.isArray(t)&&t.includes(e)},e.prototype._addParent=function(e){var t=this._parentage;this._parentage=Array.isArray(t)?(t.push(e),t):t?[t,e]:e},e.prototype._removeParent=function(e){var t=this._parentage;t===e?this._parentage=null:Array.isArray(t)&&xa(t,e)},e.prototype.remove=function(t){var r=this._teardowns;r&&xa(r,t),t instanceof e&&t._removeParent(this)},e.EMPTY=((t=new e).closed=!0,t),e}(),ka=Pa.EMPTY;function Ta(e){return e instanceof Pa||e&&"closed"in e&&ga(e.remove)&&ga(e.add)&&ga(e.unsubscribe)}function Sa(e){ga(e)?e():e.unsubscribe()}var Ma={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1},Aa={setTimeout:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=Aa.delegate;return((null==r?void 0:r.setTimeout)||setTimeout).apply(void 0,pa([],ha(e)))},clearTimeout:function(e){var t=Aa.delegate;return((null==t?void 0:t.clearTimeout)||clearTimeout)(e)},delegate:void 0};function Na(e){Aa.setTimeout((function(){var t=Ma.onUnhandledError;if(!t)throw e;t(e)}))}function Oa(){}var Ha=Ia("C",void 0,void 0);function Ia(e,t,r){return{kind:e,value:t,error:r}}var Va=null;function Ea(e){if(Ma.useDeprecatedSynchronousErrorHandling){var t=!Va;if(t&&(Va={errorThrown:!1,error:null}),e(),t){var r=Va,n=r.errorThrown,i=r.error;if(Va=null,n)throw i}}else e()}function za(e){Ma.useDeprecatedSynchronousErrorHandling&&Va&&(Va.errorThrown=!0,Va.error=e)}var Ca=function(e){function t(t){var r=e.call(this)||this;return r.isStopped=!1,t?(r.destination=t,Ta(t)&&t.add(r)):r.destination=Da,r}return ua(t,e),t.create=function(e,t,r){return new ja(e,t,r)},t.prototype.next=function(e){this.isStopped?Ba(function(e){return Ia("N",e,void 0)}(e),this):this._next(e)},t.prototype.error=function(e){this.isStopped?Ba(Ia("E",void 0,e),this):(this.isStopped=!0,this._error(e))},t.prototype.complete=function(){this.isStopped?Ba(Ha,this):(this.isStopped=!0,this._complete())},t.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,e.prototype.unsubscribe.call(this),this.destination=null)},t.prototype._next=function(e){this.destination.next(e)},t.prototype._error=function(e){try{this.destination.error(e)}finally{this.unsubscribe()}},t.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},t}(Pa),ja=function(e){function t(t,r,n){var i,o=e.call(this)||this;if(ga(t))i=t;else if(t){var s;i=t.next,r=t.error,n=t.complete,o&&Ma.useDeprecatedNextContext?(s=Object.create(t)).unsubscribe=function(){return o.unsubscribe()}:s=t,i=null==i?void 0:i.bind(s),r=null==r?void 0:r.bind(s),n=null==n?void 0:n.bind(s)}return o.destination={next:i?La(i,o):Oa,error:La(null!=r?r:Ra,o),complete:n?La(n,o):Oa},o}return ua(t,e),t}(Ca);function La(e,t){return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];try{e.apply(void 0,pa([],ha(t)))}catch(e){Ma.useDeprecatedSynchronousErrorHandling?za(e):Na(e)}}}function Ra(e){throw e}function Ba(e,t){var r=Ma.onStoppedNotification;r&&Aa.setTimeout((function(){return r(e,t)}))}var Da={closed:!0,next:Oa,error:Ra,complete:Oa},Xa="function"==typeof Symbol&&Symbol.observable||"@@observable";function qa(e){return e}function Wa(e){return 0===e.length?qa:1===e.length?e[0]:function(t){return e.reduce((function(e,t){return t(e)}),t)}}var Fa=function(){function e(e){e&&(this._subscribe=e)}return e.prototype.lift=function(t){var r=new e;return r.source=this,r.operator=t,r},e.prototype.subscribe=function(e,t,r){var n,i=this,o=(n=e)&&n instanceof Ca||function(e){return e&&ga(e.next)&&ga(e.error)&&ga(e.complete)}(n)&&Ta(n)?e:new ja(e,t,r);return Ea((function(){var e=i,t=e.operator,r=e.source;o.add(t?t.call(o,r):r?i._subscribe(o):i._trySubscribe(o))})),o},e.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){e.error(t)}},e.prototype.forEach=function(e,t){var r=this;return new(t=Ua(t))((function(t,n){var i;i=r.subscribe((function(t){try{e(t)}catch(e){n(e),null==i||i.unsubscribe()}}),n,t)}))},e.prototype._subscribe=function(e){var t;return null===(t=this.source)||void 0===t?void 0:t.subscribe(e)},e.prototype[Xa]=function(){return this},e.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return Wa(e)(this)},e.prototype.toPromise=function(e){var t=this;return new(e=Ua(e))((function(e,r){var n;t.subscribe((function(e){return n=e}),(function(e){return r(e)}),(function(){return e(n)}))}))},e.create=function(t){return new e(t)},e}();function Ua(e){var t;return null!==(t=null!=e?e:Ma.Promise)&&void 0!==t?t:Promise}var Ga,Za=va((function(e){return function(){e(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}})),Ya=function(e){function t(){var t=e.call(this)||this;return t.closed=!1,t.observers=[],t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return ua(t,e),t.prototype.lift=function(e){var t=new Ja(this,this);return t.operator=e,t},t.prototype._throwIfClosed=function(){if(this.closed)throw new Za},t.prototype.next=function(e){var t=this;Ea((function(){var r,n;if(t._throwIfClosed(),!t.isStopped){var i=t.observers.slice();try{for(var o=la(i),s=o.next();!s.done;s=o.next()){s.value.next(e)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}}}))},t.prototype.error=function(e){var t=this;Ea((function(){if(t._throwIfClosed(),!t.isStopped){t.hasError=t.isStopped=!0,t.thrownError=e;for(var r=t.observers;r.length;)r.shift().error(e)}}))},t.prototype.complete=function(){var e=this;Ea((function(){if(e._throwIfClosed(),!e.isStopped){e.isStopped=!0;for(var t=e.observers;t.length;)t.shift().complete()}}))},t.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=null},Object.defineProperty(t.prototype,"observed",{get:function(){var e;return(null===(e=this.observers)||void 0===e?void 0:e.length)>0},enumerable:!1,configurable:!0}),t.prototype._trySubscribe=function(t){return this._throwIfClosed(),e.prototype._trySubscribe.call(this,t)},t.prototype._subscribe=function(e){return this._throwIfClosed(),this._checkFinalizedStatuses(e),this._innerSubscribe(e)},t.prototype._innerSubscribe=function(e){var t=this,r=t.hasError,n=t.isStopped,i=t.observers;return r||n?ka:(i.push(e),new Pa((function(){return xa(i,e)})))},t.prototype._checkFinalizedStatuses=function(e){var t=this,r=t.hasError,n=t.thrownError,i=t.isStopped;r?e.error(n):i&&e.complete()},t.prototype.asObservable=function(){var e=new Fa;return e.source=this,e},t.create=function(e,t){return new Ja(e,t)},t}(Fa),Ja=function(e){function t(t,r){var n=e.call(this)||this;return n.destination=t,n.source=r,n}return ua(t,e),t.prototype.next=function(e){var t,r;null===(r=null===(t=this.destination)||void 0===t?void 0:t.next)||void 0===r||r.call(t,e)},t.prototype.error=function(e){var t,r;null===(r=null===(t=this.destination)||void 0===t?void 0:t.error)||void 0===r||r.call(t,e)},t.prototype.complete=function(){var e,t;null===(t=null===(e=this.destination)||void 0===e?void 0:e.complete)||void 0===t||t.call(e)},t.prototype._subscribe=function(e){var t,r;return null!==(r=null===(t=this.source)||void 0===t?void 0:t.subscribe(e))&&void 0!==r?r:ka},t}(Ya),Ka=function(e){function t(t){var r=e.call(this)||this;return r._value=t,r}return ua(t,e),Object.defineProperty(t.prototype,"value",{get:function(){return this.getValue()},enumerable:!1,configurable:!0}),t.prototype._subscribe=function(t){var r=e.prototype._subscribe.call(this,t);return!r.closed&&t.next(this._value),r},t.prototype.getValue=function(){var e=this,t=e.hasError,r=e.thrownError,n=e._value;if(t)throw r;return this._throwIfClosed(),n},t.prototype.next=function(t){e.prototype.next.call(this,this._value=t)},t}(Ya),Qa=function(e){function t(t,r){return e.call(this)||this}return ua(t,e),t.prototype.schedule=function(e,t){return void 0===t&&(t=0),this},t}(Pa),_a={setInterval:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=_a.delegate;return((null==r?void 0:r.setInterval)||setInterval).apply(void 0,pa([],ha(e)))},clearInterval:function(e){var t=_a.delegate;return((null==t?void 0:t.clearInterval)||clearInterval)(e)},delegate:void 0},$a=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.scheduler=t,n.work=r,n.pending=!1,n}return ua(t,e),t.prototype.schedule=function(e,t){if(void 0===t&&(t=0),this.closed)return this;this.state=e;var r=this.id,n=this.scheduler;return null!=r&&(this.id=this.recycleAsyncId(n,r,t)),this.pending=!0,this.delay=t,this.id=this.id||this.requestAsyncId(n,this.id,t),this},t.prototype.requestAsyncId=function(e,t,r){return void 0===r&&(r=0),_a.setInterval(e.flush.bind(e,this),r)},t.prototype.recycleAsyncId=function(e,t,r){if(void 0===r&&(r=0),null!=r&&this.delay===r&&!1===this.pending)return t;_a.clearInterval(t)},t.prototype.execute=function(e,t){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var r=this._execute(e,t);if(r)return r;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},t.prototype._execute=function(e,t){var r,n=!1;try{this.work(e)}catch(e){n=!0,r=e||new Error("Scheduled action threw falsy error")}if(n)return this.unsubscribe(),r},t.prototype.unsubscribe=function(){if(!this.closed){var t=this.id,r=this.scheduler,n=r.actions;this.work=this.state=this.scheduler=null,this.pending=!1,xa(n,this),null!=t&&(this.id=this.recycleAsyncId(r,t,null)),this.delay=null,e.prototype.unsubscribe.call(this)}},t}(Qa),ec=1,tc={};function rc(e){return e in tc&&(delete tc[e],!0)}var nc=function(e){var t=ec++;return tc[t]=!0,Ga||(Ga=Promise.resolve()),Ga.then((function(){return rc(t)&&e()})),t},ic=function(e){rc(e)},oc={setImmediate:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=oc.delegate;return((null==r?void 0:r.setImmediate)||nc).apply(void 0,pa([],ha(e)))},clearImmediate:function(e){var t=oc.delegate;return((null==t?void 0:t.clearImmediate)||ic)(e)},delegate:void 0},sc=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.scheduler=t,n.work=r,n}return ua(t,e),t.prototype.requestAsyncId=function(t,r,n){return void 0===n&&(n=0),null!==n&&n>0?e.prototype.requestAsyncId.call(this,t,r,n):(t.actions.push(this),t._scheduled||(t._scheduled=oc.setImmediate(t.flush.bind(t,void 0))))},t.prototype.recycleAsyncId=function(t,r,n){if(void 0===n&&(n=0),null!=n&&n>0||null==n&&this.delay>0)return e.prototype.recycleAsyncId.call(this,t,r,n);0===t.actions.length&&(oc.clearImmediate(r),t._scheduled=void 0)},t}($a),ac={now:function(){return(ac.delegate||Date).now()},delegate:void 0},cc=function(){function e(t,r){void 0===r&&(r=e.now),this.schedulerActionCtor=t,this.now=r}return e.prototype.schedule=function(e,t,r){return void 0===t&&(t=0),new this.schedulerActionCtor(this,e).schedule(r,t)},e.now=ac.now,e}(),uc=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return ua(t,e),t.prototype.flush=function(e){this._active=!0,this._scheduled=void 0;var t,r=this.actions,n=-1;e=e||r.shift();var i=r.length;do{if(t=e.execute(e.state,e.delay))break}while(++n<i&&(e=r.shift()));if(this._active=!1,t){for(;++n<i&&(e=r.shift());)e.unsubscribe();throw t}},t}(function(e){function t(t,r){void 0===r&&(r=cc.now);var n=e.call(this,t,r)||this;return n.actions=[],n._active=!1,n._scheduled=void 0,n}return ua(t,e),t.prototype.flush=function(e){var t=this.actions;if(this._active)t.push(e);else{var r;this._active=!0;do{if(r=e.execute(e.state,e.delay))break}while(e=t.shift());if(this._active=!1,r){for(;e=t.shift();)e.unsubscribe();throw r}}},t}(cc)),dc=new uc(sc),fc=va((function(e){return function(){e(this),this.name="EmptyError",this.message="no elements in sequence"}}));function lc(e,t){var r="object"==typeof t;return new Promise((function(n,i){var o=new ja({next:function(e){n(e),o.unsubscribe()},error:i,complete:function(){r?n(t.defaultValue):i(new fc)}});e.subscribe(o)}))}var hc=Array.isArray,pc=Object.getPrototypeOf,mc=Object.prototype,yc=Object.keys;function bc(e){if(1===e.length){var t=e[0];if(hc(t))return{args:t,keys:null};if((n=t)&&"object"==typeof n&&pc(n)===mc){var r=yc(t);return{args:r.map((function(e){return t[e]})),keys:r}}}var n;return{args:e,keys:null}}var gc=function(e){return e&&"number"==typeof e.length&&"function"!=typeof e};function vc(e){return ga(null==e?void 0:e.then)}function wc(e){return ga(e[Xa])}function xc(e){return Symbol.asyncIterator&&ga(null==e?void 0:e[Symbol.asyncIterator])}function Pc(e){return new TypeError("You provided "+(null!==e&&"object"==typeof e?"an invalid object":"'"+e+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}var kc="function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator";function Tc(e){return ga(null==e?void 0:e[kc])}function Sc(e){return ya(this,arguments,(function(){var t,r,n;return fa(this,(function(i){switch(i.label){case 0:t=e.getReader(),i.label=1;case 1:i.trys.push([1,,9,10]),i.label=2;case 2:return[4,ma(t.read())];case 3:return r=i.sent(),n=r.value,r.done?[4,ma(void 0)]:[3,5];case 4:return[2,i.sent()];case 5:return[4,ma(n)];case 6:return[4,i.sent()];case 7:return i.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}function Mc(e){return ga(null==e?void 0:e.getReader)}function Ac(e){if(e instanceof Fa)return e;if(null!=e){if(wc(e))return i=e,new Fa((function(e){var t=i[Xa]();if(ga(t.subscribe))return t.subscribe(e);throw new TypeError("Provided object does not correctly implement Symbol.observable")}));if(gc(e))return n=e,new Fa((function(e){for(var t=0;t<n.length&&!e.closed;t++)e.next(n[t]);e.complete()}));if(vc(e))return r=e,new Fa((function(e){r.then((function(t){e.closed||(e.next(t),e.complete())}),(function(t){return e.error(t)})).then(null,Na)}));if(xc(e))return Nc(e);if(Tc(e))return t=e,new Fa((function(e){var r,n;try{for(var i=la(t),o=i.next();!o.done;o=i.next()){var s=o.value;if(e.next(s),e.closed)return}}catch(e){r={error:e}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}e.complete()}));if(Mc(e))return Nc(Sc(e))}var t,r,n,i;throw Pc(e)}function Nc(e){return new Fa((function(t){(function(e,t){var r,n,i,o;return da(this,void 0,void 0,(function(){var s,a;return fa(this,(function(c){switch(c.label){case 0:c.trys.push([0,5,6,11]),r=ba(e),c.label=1;case 1:return[4,r.next()];case 2:if((n=c.sent()).done)return[3,4];if(s=n.value,t.next(s),t.closed)return[2];c.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return a=c.sent(),i={error:a},[3,11];case 6:return c.trys.push([6,,9,10]),n&&!n.done&&(o=r.return)?[4,o.call(r)]:[3,8];case 7:c.sent(),c.label=8;case 8:return[3,10];case 9:if(i)throw i.error;return[7];case 10:return[7];case 11:return t.complete(),[2]}}))}))})(e,t).catch((function(e){return t.error(e)}))}))}function Oc(e,t,r,n,i){void 0===n&&(n=0),void 0===i&&(i=!1);var o=t.schedule((function(){r(),i?e.add(this.schedule(null,n)):this.unsubscribe()}),n);if(e.add(o),!i)return o}function Hc(e){return ga(null==e?void 0:e.lift)}function Ic(e){return function(t){if(Hc(t))return t.lift((function(t){try{return e(t,this)}catch(e){this.error(e)}}));throw new TypeError("Unable to lift unknown Observable type")}}var Vc=function(e){function t(t,r,n,i,o){var s=e.call(this,t)||this;return s.onFinalize=o,s._next=r?function(e){try{r(e)}catch(e){t.error(e)}}:e.prototype._next,s._error=i?function(e){try{i(e)}catch(e){t.error(e)}finally{this.unsubscribe()}}:e.prototype._error,s._complete=n?function(){try{n()}catch(e){t.error(e)}finally{this.unsubscribe()}}:e.prototype._complete,s}return ua(t,e),t.prototype.unsubscribe=function(){var t,r=this.closed;e.prototype.unsubscribe.call(this),!r&&(null===(t=this.onFinalize)||void 0===t||t.call(this))},t}(Ca);function Ec(e,t){return void 0===t&&(t=0),Ic((function(r,n){r.subscribe(new Vc(n,(function(r){return Oc(n,e,(function(){return n.next(r)}),t)}),(function(){return Oc(n,e,(function(){return n.complete()}),t)}),(function(r){return Oc(n,e,(function(){return n.error(r)}),t)})))}))}function zc(e,t){return void 0===t&&(t=0),Ic((function(r,n){n.add(e.schedule((function(){return r.subscribe(n)}),t))}))}function Cc(e,t){if(!e)throw new Error("Iterable cannot be null");return new Fa((function(r){Oc(r,t,(function(){var n=e[Symbol.asyncIterator]();Oc(r,t,(function(){n.next().then((function(e){e.done?r.complete():r.next(e.value)}))}),0,!0)}))}))}function jc(e,t){if(null!=e){if(wc(e))return function(e,t){return Ac(e).pipe(zc(t),Ec(t))}(e,t);if(gc(e))return function(e,t){return new Fa((function(r){var n=0;return t.schedule((function(){n===e.length?r.complete():(r.next(e[n++]),r.closed||this.schedule())}))}))}(e,t);if(vc(e))return function(e,t){return Ac(e).pipe(zc(t),Ec(t))}(e,t);if(xc(e))return Cc(e,t);if(Tc(e))return function(e,t){return new Fa((function(r){var n;return Oc(r,t,(function(){n=e[kc](),Oc(r,t,(function(){var e,t,i;try{t=(e=n.next()).value,i=e.done}catch(e){return void r.error(e)}i?r.complete():r.next(t)}),0,!0)})),function(){return ga(null==n?void 0:n.return)&&n.return()}}))}(e,t);if(Mc(e))return function(e,t){return Cc(Sc(e),t)}(e,t)}throw Pc(e)}function Lc(e,t){return t?jc(e,t):Ac(e)}function Rc(e,t){return Ic((function(r,n){var i=0;r.subscribe(new Vc(n,(function(r){n.next(e.call(t,r,i++))})))}))}var Bc=Array.isArray;function Dc(e){return Rc((function(t){return function(e,t){return Bc(t)?e.apply(void 0,pa([],ha(t))):e(t)}(e,t)}))}function Xc(e){return e[e.length-1]}function qc(e){return ga(Xc(e))?e.pop():void 0}function Wc(e){return(t=Xc(e))&&ga(t.schedule)?e.pop():void 0;var t}function Fc(e,t){return e.reduce((function(e,r,n){return e[r]=t[n],e}),{})}function Uc(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=Wc(e),n=qc(e),i=bc(e),o=i.args,s=i.keys;if(0===o.length)return Lc([],r);var a=new Fa(Gc(o,r,s?function(e){return Fc(s,e)}:qa));return n?a.pipe(Dc(n)):a}function Gc(e,t,r){return void 0===r&&(r=qa),function(n){Zc(t,(function(){for(var i=e.length,o=new Array(i),s=i,a=i,c=function(i){Zc(t,(function(){var c=Lc(e[i],t),u=!1;c.subscribe(new Vc(n,(function(e){o[i]=e,u||(u=!0,a--),a||n.next(r(o.slice()))}),(function(){--s||n.complete()})))}),n)},u=0;u<i;u++)c(u)}),n)}}function Zc(e,t,r){e?Oc(r,e,t):t()}var Yc=new Fa((function(e){return e.complete()}));function Jc(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=Wc(e);return Lc(e,r)}function Kc(e){return Ic((function(t,r){var n,i=null,o=!1;i=t.subscribe(new Vc(r,void 0,void 0,(function(s){n=Ac(e(s,Kc(e)(t))),i?(i.unsubscribe(),i=null,n.subscribe(r)):o=!0}))),o&&(i.unsubscribe(),i=null,n.subscribe(r))}))}function Qc(e,t){return e===t}function _c(e,t){return Ic((function(r,n){var i=0;r.subscribe(new Vc(n,(function(r){return e.call(t,r,i++)&&n.next(r)})))}))}function $c(e){return e<=0?function(){return Yc}:Ic((function(t,r){var n=0;t.subscribe(new Vc(r,(function(t){++n<=e&&(r.next(t),e<=n&&r.complete())})))}))}function eu(e){return Ic((function(t,r){var n=!1;t.subscribe(new Vc(r,(function(e){n=!0,r.next(e)}),(function(){n||r.next(e),r.complete()})))}))}function tu(e){return void 0===e&&(e=ru),Ic((function(t,r){var n=!1;t.subscribe(new Vc(r,(function(e){n=!0,r.next(e)}),(function(){return n?r.complete():r.error(e())})))}))}function ru(){return new fc}function nu(e,t){var r=arguments.length>=2;return function(n){return n.pipe(e?_c((function(t,r){return e(t,r,n)})):qa,$c(1),r?eu(t):tu((function(){return new fc})))}}function iu(e){return Rc((function(){return e}))}function ou(e,t,r){return void 0===r&&(r=1/0),ga(t)?ou((function(r,n){return Rc((function(e,i){return t(r,e,n,i)}))(Ac(e(r,n)))}),r):("number"==typeof t&&(r=t),Ic((function(t,n){return function(e,t,r,n,i,o,s,a){var c=[],u=0,d=0,f=!1,l=function(){!f||c.length||u||t.complete()},h=function(e){return u<n?p(e):c.push(e)},p=function(e){o&&t.next(e),u++;var a=!1;Ac(r(e,d++)).subscribe(new Vc(t,(function(e){null==i||i(e),o?h(e):t.next(e)}),(function(){a=!0}),void 0,(function(){if(a)try{u--;for(var e=function(){var e=c.shift();s?Oc(t,s,(function(){return p(e)})):p(e)};c.length&&u<n;)e();l()}catch(e){t.error(e)}})))};return e.subscribe(new Vc(t,h,(function(){f=!0,l()}))),function(){null==a||a()}}(t,n,e,r)})))}var su=function(e){function t(t,r,n){void 0===t&&(t=1/0),void 0===r&&(r=1/0),void 0===n&&(n=ac);var i=e.call(this)||this;return i._bufferSize=t,i._windowTime=r,i._timestampProvider=n,i._buffer=[],i._infiniteTimeWindow=!0,i._infiniteTimeWindow=r===1/0,i._bufferSize=Math.max(1,t),i._windowTime=Math.max(1,r),i}return ua(t,e),t.prototype.next=function(t){var r=this,n=r.isStopped,i=r._buffer,o=r._infiniteTimeWindow,s=r._timestampProvider,a=r._windowTime;n||(i.push(t),!o&&i.push(s.now()+a)),this._trimBuffer(),e.prototype.next.call(this,t)},t.prototype._subscribe=function(e){this._throwIfClosed(),this._trimBuffer();for(var t=this._innerSubscribe(e),r=this._infiniteTimeWindow,n=this._buffer.slice(),i=0;i<n.length&&!e.closed;i+=r?1:2)e.next(n[i]);return this._checkFinalizedStatuses(e),t},t.prototype._trimBuffer=function(){var e=this,t=e._bufferSize,r=e._timestampProvider,n=e._buffer,i=e._infiniteTimeWindow,o=(i?1:2)*t;if(t<1/0&&o<n.length&&n.splice(0,n.length-o),!i){for(var s=r.now(),a=0,c=1;c<n.length&&n[c]<=s;c+=2)a=c;a&&n.splice(0,a+1)}},t}(Ya);function au(){return Ic((function(e,t){var r=null;e._refCount++;var n=new Vc(t,void 0,void 0,void 0,(function(){if(!e||e._refCount<=0||0<--e._refCount)r=null;else{var n=e._connection,i=r;r=null,!n||i&&n!==i||n.unsubscribe(),t.unsubscribe()}}));e.subscribe(n),n.closed||(r=e.connect())}))}var cu=function(e){function t(t,r){var n=e.call(this)||this;return n.source=t,n.subjectFactory=r,n._subject=null,n._refCount=0,n._connection=null,Hc(t)&&(n.lift=t.lift),n}return ua(t,e),t.prototype._subscribe=function(e){return this.getSubject().subscribe(e)},t.prototype.getSubject=function(){var e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject},t.prototype._teardown=function(){this._refCount=0;var e=this._connection;this._subject=this._connection=null,null==e||e.unsubscribe()},t.prototype.connect=function(){var e=this,t=this._connection;if(!t){t=this._connection=new Pa;var r=this.getSubject();t.add(this.source.subscribe(new Vc(r,void 0,(function(){e._teardown(),r.complete()}),(function(t){e._teardown(),r.error(t)}),(function(){return e._teardown()})))),t.closed&&(this._connection=null,t=Pa.EMPTY)}return t},t.prototype.refCount=function(){return au()(this)},t}(Fa);var uu={connector:function(){return new Ya}};function du(e,t){void 0===t&&(t=uu);var r=t.connector;return Ic((function(t,n){var i,o=r();Lc(e((i=o,new Fa((function(e){return i.subscribe(e)}))))).subscribe(n),n.add(t.subscribe(o))}))}function fu(e,t,r,n){r&&!ga(r)&&(n=r);var i=ga(r)?r:void 0;return function(r){return function(e,t){var r=ga(e)?e:function(){return e};return ga(t)?du(t,{connector:r}):function(e){return new cu(e,r)}}(new su(e,t,n),i)(r)}}function lu(){return void 0===(e=1)&&(e=1/0),ou(qa,e);var e}function hu(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return lu()(Lc(e,Wc(e)))}function pu(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=Wc(e);return Ic((function(t,n){(r?hu(e,t,r):hu(e,t)).subscribe(n)}))}function mu(e,t){return Ic((function(r,n){var i=null,o=0,s=!1,a=function(){return s&&!i&&n.complete()};r.subscribe(new Vc(n,(function(r){null==i||i.unsubscribe();var s=0,c=o++;Ac(e(r,c)).subscribe(i=new Vc(n,(function(e){return n.next(t?t(r,e,c,s++):e)}),(function(){i=null,a()})))}),(function(){s=!0,a()})))}))}function yu(e,t,r){var n=ga(e)||t||r?{next:e,error:t,complete:r}:e;return n?Ic((function(e,t){var r;null===(r=n.subscribe)||void 0===r||r.call(n);var i=!0;e.subscribe(new Vc(t,(function(e){var r;null===(r=n.next)||void 0===r||r.call(n,e),t.next(e)}),(function(){var e;i=!1,null===(e=n.complete)||void 0===e||e.call(n),t.complete()}),(function(e){var r;i=!1,null===(r=n.error)||void 0===r||r.call(n,e),t.error(e)}),(function(){var e,t;i&&(null===(e=n.unsubscribe)||void 0===e||e.call(n)),null===(t=n.finalize)||void 0===t||t.call(n)})))})):qa}function bu(e,t,r,n,i){return function(o,s){var a=r,c=t,u=0;o.subscribe(new Vc(s,(function(t){var r=u++;c=a?e(c,t,r):(a=!0,t),n&&s.next(c)}),i&&function(){a&&s.next(c),s.complete()}))}}var gu=function(e,t){return e.push(t),e};function vu(){return Ic((function(e,t){(function(e,t){return Ic(bu(e,t,arguments.length>=2,!1,!0))})(gu,[])(e).subscribe(t)}))}var wu="node_modules/@polkadot/types";N(es,wu,[ts]);var xu={};r(xu,"assets",(function(){return Hu})),r(xu,"authorship",(function(){return Iu})),r(xu,"aura",(function(){return Vu})),r(xu,"babe",(function(){return Eu})),r(xu,"balances",(function(){return zu})),r(xu,"beefy",(function(){return Cu})),r(xu,"collective",(function(){return ju})),r(xu,"consensus",(function(){return Lu})),r(xu,"contracts",(function(){return Ru})),r(xu,"democracy",(function(){return Bu})),r(xu,"elections",(function(){return Du})),r(xu,"engine",(function(){return Xu})),r(xu,"evm",(function(){return qu})),r(xu,"extrinsics",(function(){return Wu})),r(xu,"genericAsset",(function(){return Fu})),r(xu,"gilt",(function(){return Uu})),r(xu,"grandpa",(function(){return Gu})),r(xu,"identity",(function(){return Zu})),r(xu,"imOnline",(function(){return Yu})),r(xu,"lottery",(function(){return Ju})),r(xu,"mmr",(function(){return Ku})),r(xu,"offences",(function(){return Qu})),r(xu,"proxy",(function(){return _u})),r(xu,"recovery",(function(){return $u})),r(xu,"scheduler",(function(){return ed})),r(xu,"session",(function(){return td})),r(xu,"society",(function(){return rd})),r(xu,"staking",(function(){return nd})),r(xu,"support",(function(){return id})),r(xu,"syncstate",(function(){return od})),r(xu,"system",(function(){return sd})),r(xu,"treasury",(function(){return ad})),r(xu,"txpayment",(function(){return cd})),r(xu,"uniques",(function(){return ud})),r(xu,"utility",(function(){return dd})),r(xu,"vesting",(function(){return fd})),r(xu,"attestations",(function(){return ld})),r(xu,"bridges",(function(){return hd})),r(xu,"claims",(function(){return pd})),r(xu,"crowdloan",(function(){return md})),r(xu,"cumulus",(function(){return yd})),r(xu,"parachains",(function(){return gd})),r(xu,"poll",(function(){return vd})),r(xu,"purchase",(function(){return wd})),r(xu,"xcm",(function(){return cf})),r(xu,"contractsAbi",(function(){return ff})),r(xu,"eth",(function(){return lf})),r(xu,"rpc",(function(){return hf})),r(xu,"author",(function(){return pf})),r(xu,"chain",(function(){return mf})),r(xu,"childstate",(function(){return yf})),r(xu,"offchain",(function(){return bf})),r(xu,"payment",(function(){return vf})),r(xu,"state",(function(){return wf}));var Pu={};r(Pu,"metadata",(function(){return Au})),r(Pu,"runtime",(function(){return Nu})),r(Pu,"scaleInfo",(function(){return Ou}));const ku={ErrorMetadataV11:"ErrorMetadataV10",EventMetadataV11:"EventMetadataV10",ExtrinsicMetadataV11:{version:"u8",signedExtensions:"Vec<Text>"},FunctionArgumentMetadataV11:"FunctionArgumentMetadataV10",FunctionMetadataV11:"FunctionMetadataV10",MetadataV11:{modules:"Vec<ModuleMetadataV11>",extrinsic:"ExtrinsicMetadataV11"},ModuleConstantMetadataV11:"ModuleConstantMetadataV10",ModuleMetadataV11:{name:"Text",storage:"Option<StorageMetadataV11>",calls:"Option<Vec<FunctionMetadataV11>>",events:"Option<Vec<EventMetadataV11>>",constants:"Vec<ModuleConstantMetadataV11>",errors:"Vec<ErrorMetadataV11>"},StorageEntryModifierV11:"StorageEntryModifierV10",StorageEntryMetadataV11:{name:"Text",modifier:"StorageEntryModifierV11",type:"StorageEntryTypeV11",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV11:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV11",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV11",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV11"}}},StorageMetadataV11:{prefix:"Text",items:"Vec<StorageEntryMetadataV11>"},StorageHasherV11:{_enum:{Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null,Identity:null}}},Tu={name:"Text",fields:"Vec<Si1Field>",index:"u8",docs:"Vec<Text>"},Su={Si1Field:{name:"Option<Text>",type:"Si1LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si1LookupTypeId:"Compact<u32>",Si1Path:"Si0Path",Si1Type:{path:"Si1Path",params:"Vec<Si1TypeParameter>",def:"Si1TypeDef",docs:"Vec<Text>"},Si1TypeDef:{_enum:{Composite:"Si1TypeDefComposite",Variant:"Si1TypeDefVariant",Sequence:"Si1TypeDefSequence",Array:"Si1TypeDefArray",Tuple:"Si1TypeDefTuple",Primitive:"Si1TypeDefPrimitive",Compact:"Si1TypeDefCompact",BitSequence:"Si1TypeDefBitSequence",HistoricMetaCompat:"Type"}},Si1TypeDefArray:{len:"u32",type:"Si1LookupTypeId"},Si1TypeDefBitSequence:{bitStoreType:"Si1LookupTypeId",bitOrderType:"Si1LookupTypeId"},Si1TypeDefCompact:{type:"Si1LookupTypeId"},Si1TypeDefComposite:{fields:"Vec<Si1Field>"},Si1TypeDefPrimitive:"Si0TypeDefPrimitive",Si1TypeDefSequence:{type:"Si1LookupTypeId"},Si1TypeDefTuple:"Vec<Si1LookupTypeId>",Si1TypeParameter:{name:"Text",type:"Option<Si1LookupTypeId>"},Si1TypeDefVariant:{variants:"Vec<Si1Variant>"},Si1Variant:Tu},Mu={PortableTypeV14:{id:"Si1LookupTypeId",type:"Si1Type"},ErrorMetadataV14:U({},Tu,{args:"Vec<Type>"}),EventMetadataV14:U({},Tu,{args:"Vec<Type>"}),FunctionArgumentMetadataV14:{name:"Text",type:"Type",typeName:"Option<Type>"},FunctionMetadataV14:U({},Tu,{args:"Vec<FunctionArgumentMetadataV14>"}),ExtrinsicMetadataV14:{type:"SiLookupTypeId",version:"u8",signedExtensions:"Vec<SignedExtensionMetadataV14>"},MetadataV14:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV14>",extrinsic:"ExtrinsicMetadataV14",type:"SiLookupTypeId"},PalletCallMetadataV14:{type:"SiLookupTypeId"},PalletConstantMetadataV14:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>"},PalletErrorMetadataV14:{type:"SiLookupTypeId"},PalletEventMetadataV14:{type:"SiLookupTypeId"},PalletMetadataV14:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8"},PalletStorageMetadataV14:{prefix:"Text",items:"Vec<StorageEntryMetadataV14>"},SignedExtensionMetadataV14:{identifier:"Text",type:"SiLookupTypeId",additionalSigned:"SiLookupTypeId"},StorageEntryMetadataV14:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV14:"StorageEntryModifierV13",StorageEntryTypeV14:{_enum:{Plain:"SiLookupTypeId",Map:{hashers:"Vec<StorageHasherV14>",key:"SiLookupTypeId",value:"SiLookupTypeId"}}},StorageHasherV14:"StorageHasherV13"};var Au={rpc:{},types:U({},{ErrorMetadataV9:{name:"Text",docs:"Vec<Text>"},EventMetadataV9:{name:"Text",args:"Vec<Type>",docs:"Vec<Text>"},FunctionArgumentMetadataV9:{name:"Text",type:"Type"},FunctionMetadataV9:{name:"Text",args:"Vec<FunctionArgumentMetadataV9>",docs:"Vec<Text>"},MetadataV9:{modules:"Vec<ModuleMetadataV9>"},ModuleConstantMetadataV9:{name:"Text",type:"Type",value:"Bytes",docs:"Vec<Text>"},ModuleMetadataV9:{name:"Text",storage:"Option<StorageMetadataV9>",calls:"Option<Vec<FunctionMetadataV9>>",events:"Option<Vec<EventMetadataV9>>",constants:"Vec<ModuleConstantMetadataV9>",errors:"Vec<ErrorMetadataV9>"},StorageEntryMetadataV9:{name:"Text",modifier:"StorageEntryModifierV9",type:"StorageEntryTypeV9",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV9:{_enum:["Optional","Default","Required"]},StorageEntryTypeV9:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV9",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV9",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV9"}}},StorageHasherV9:{_enum:{Blake2_128:null,Blake2_256:null,Twox128:null,Twox256:null,Twox64Concat:null}},StorageMetadataV9:{prefix:"Text",items:"Vec<StorageEntryMetadataV9>"}},{ErrorMetadataV10:"ErrorMetadataV9",EventMetadataV10:"EventMetadataV9",FunctionArgumentMetadataV10:"FunctionArgumentMetadataV9",FunctionMetadataV10:"FunctionMetadataV9",MetadataV10:{modules:"Vec<ModuleMetadataV10>"},ModuleConstantMetadataV10:"ModuleConstantMetadataV9",ModuleMetadataV10:{name:"Text",storage:"Option<StorageMetadataV10>",calls:"Option<Vec<FunctionMetadataV10>>",events:"Option<Vec<EventMetadataV10>>",constants:"Vec<ModuleConstantMetadataV10>",errors:"Vec<ErrorMetadataV10>"},StorageEntryModifierV10:"StorageEntryModifierV9",StorageEntryMetadataV10:{name:"Text",modifier:"StorageEntryModifierV10",type:"StorageEntryTypeV10",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV10:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV10",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV10",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV10"}}},StorageMetadataV10:{prefix:"Text",items:"Vec<StorageEntryMetadataV10>"},StorageHasherV10:{_enum:{Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null}}},ku,{ErrorMetadataV12:"ErrorMetadataV11",EventMetadataV12:"EventMetadataV11",ExtrinsicMetadataV12:"ExtrinsicMetadataV11",FunctionArgumentMetadataV12:"FunctionArgumentMetadataV11",FunctionMetadataV12:"FunctionMetadataV11",MetadataV12:{modules:"Vec<ModuleMetadataV12>",extrinsic:"ExtrinsicMetadataV12"},ModuleConstantMetadataV12:"ModuleConstantMetadataV11",ModuleMetadataV12:{name:"Text",storage:"Option<StorageMetadataV12>",calls:"Option<Vec<FunctionMetadataV12>>",events:"Option<Vec<EventMetadataV12>>",constants:"Vec<ModuleConstantMetadataV12>",errors:"Vec<ErrorMetadataV12>",index:"u8"},StorageEntryModifierV12:"StorageEntryModifierV11",StorageEntryMetadataV12:"StorageEntryMetadataV11",StorageEntryTypeV12:"StorageEntryTypeV11",StorageMetadataV12:"StorageMetadataV11",StorageHasherV12:"StorageHasherV11"},{ErrorMetadataV13:"ErrorMetadataV12",EventMetadataV13:"EventMetadataV12",ExtrinsicMetadataV13:"ExtrinsicMetadataV12",FunctionArgumentMetadataV13:"FunctionArgumentMetadataV12",FunctionMetadataV13:"FunctionMetadataV12",MetadataV13:{modules:"Vec<ModuleMetadataV13>",extrinsic:"ExtrinsicMetadataV13"},ModuleConstantMetadataV13:"ModuleConstantMetadataV12",ModuleMetadataV13:{name:"Text",storage:"Option<StorageMetadataV13>",calls:"Option<Vec<FunctionMetadataV13>>",events:"Option<Vec<EventMetadataV13>>",constants:"Vec<ModuleConstantMetadataV13>",errors:"Vec<ErrorMetadataV13>",index:"u8"},StorageEntryModifierV13:"StorageEntryModifierV12",StorageEntryMetadataV13:{name:"Text",modifier:"StorageEntryModifierV13",type:"StorageEntryTypeV13",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV13:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV13",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV13",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV13"},NMap:{keyVec:"Vec<Type>",hashers:"Vec<StorageHasherV13>",value:"Type"}}},StorageMetadataV13:{prefix:"Text",items:"Vec<StorageEntryMetadataV13>"},StorageHasherV13:"StorageHasherV12"},Mu,{ErrorMetadataLatest:"ErrorMetadataV14",EventMetadataLatest:"EventMetadataV14",ExtrinsicMetadataLatest:"ExtrinsicMetadataV14",FunctionArgumentMetadataLatest:"FunctionArgumentMetadataV14",FunctionMetadataLatest:"FunctionMetadataV14",MetadataLatest:"MetadataV14",PalletCallMetadataLatest:"PalletCallMetadataV14",PalletConstantMetadataLatest:"PalletConstantMetadataV14",PalletErrorMetadataLatest:"PalletErrorMetadataV14",PalletEventMetadataLatest:"PalletEventMetadataV14",PalletMetadataLatest:"PalletMetadataV14",PalletStorageMetadataLatest:"PalletStorageMetadataV14",PortableType:"PortableTypeV14",SignedExtensionMetadataLatest:"SignedExtensionMetadataV14",StorageEntryMetadataLatest:"StorageEntryMetadataV14",StorageEntryModifierLatest:"StorageEntryModifierV14",StorageEntryTypeLatest:"StorageEntryTypeV14",StorageHasher:"StorageHasherV14",MetadataAll:{_enum:{V0:"DoNotConstruct<MetadataV0>",V1:"DoNotConstruct<MetadataV1>",V2:"DoNotConstruct<MetadataV2>",V3:"DoNotConstruct<MetadataV3>",V4:"DoNotConstruct<MetadataV4>",V5:"DoNotConstruct<MetadataV5>",V6:"DoNotConstruct<MetadataV6>",V7:"DoNotConstruct<MetadataV7>",V8:"DoNotConstruct<MetadataV8>",V9:"MetadataV9",V10:"MetadataV10",V11:"MetadataV11",V12:"MetadataV12",V13:"MetadataV13",V14:"MetadataV14"}}})};var Nu={rpc:{},types:U({},{Fixed64:"Int<64, Fixed64>",FixedI64:"Int<64, FixedI64>",FixedU64:"UInt<64, FixedU64>",Fixed128:"Int<128, Fixed128>",FixedI128:"Int<128, FixedI128>",FixedU128:"UInt<128, FixedU128>",I32F32:"Int<64, I32F32>",U32F32:"UInt<64, U32F32>",PerU16:"UInt<16, PerU16>",Perbill:"UInt<32, Perbill>",Percent:"UInt<8, Percent>",Permill:"UInt<32, Permill>",Perquintill:"UInt<64, Perquintill>"},{AccountId:"AccountId32",AccountId20:"GenericEthereumAccountId",AccountId32:"GenericAccountId",AccountIdOf:"AccountId",AccountIndex:"GenericAccountIndex",Address:"MultiAddress",AssetId:"u32",Balance:"UInt<128, Balance>",BalanceOf:"Balance",Block:"GenericBlock",BlockNumber:"u32",BlockNumberFor:"BlockNumber",BlockNumberOf:"BlockNumber",Call:"GenericCall",CallHash:"Hash",CallHashOf:"CallHash",ChangesTrieConfiguration:{digestInterval:"u32",digestLevels:"u32"},ChangesTrieSignal:{_enum:{NewConfiguration:"Option<ChangesTrieConfiguration>"}},ConsensusEngineId:"GenericConsensusEngineId",CodecHash:"Hash",CrateVersion:{major:"u16",minor:"u8",patch:"u8"},Digest:{logs:"Vec<DigestItem>"},DigestItem:{_enum:{Other:"Bytes",AuthoritiesChange:"Vec<AuthorityId>",ChangesTrieRoot:"Hash",SealV0:"SealV0",Consensus:"Consensus",Seal:"Seal",PreRuntime:"PreRuntime",ChangesTrieSignal:"ChangesTrieSignal",RuntimeEnvironmentUpdated:"Null"}},ExtrinsicsWeight:{normal:"Weight",operational:"Weight"},H32:"[u8; 4; H32]",H64:"[u8; 8; H64]",H128:"[u8; 16; H128]",H160:"[u8; 20; H160]",H256:"[u8; 32; H256]",H512:"[u8; 64; H512]",H1024:"[u8; 128; H1024]",H2048:"[u8; 256; H2048]",Hash:"H256",Header:{parentHash:"Hash",number:"Compact<BlockNumber>",stateRoot:"Hash",extrinsicsRoot:"Hash",digest:"Digest"},HeaderPartial:{parentHash:"Hash",number:"BlockNumber"},IndicesLookupSource:"GenericLookupSource",Index:"u32",Justification:"(ConsensusEngineId, EncodedJustification)",EncodedJustification:"Bytes",Justifications:"Vec<Justification>",KeyValue:"(StorageKey, StorageData)",KeyTypeId:"u32",LockIdentifier:"[u8; 8]",LookupSource:"MultiAddress",LookupTarget:"AccountId",ModuleId:"LockIdentifier",MultiAddress:"GenericMultiAddress",MultiSigner:{_enum:{Ed25519:"[u8; 32]",Sr25519:"[u8; 32]",Ecdsa:"[u8; 33]"}},Moment:"UInt<64, Moment>",OpaqueCall:"Bytes",Origin:"DoNotConstruct<Origin>",OriginCaller:{_enum:{System:"SystemOrigin"}},PalletId:"LockIdentifier",PalletsOrigin:"OriginCaller",PalletVersion:{major:"u16",minor:"u8",patch:"u8"},Pays:{_enum:["Yes","No"]},Phantom:"Null",PhantomData:"Null",Releases:{_enum:["V1","V2","V3","V4","V5","V6","V7","V8","V9","V10"]},RuntimeDbWeight:{read:"Weight",write:"Weight"},SignedBlock:"SignedBlockWithJustifications",SignedBlockWithJustification:{block:"Block",justification:"Option<EncodedJustification>"},SignedBlockWithJustifications:{block:"Block",justifications:"Option<Justifications>"},Slot:"u64",StorageData:"Bytes",StorageProof:{trieNodes:"Vec<Bytes>"},TransactionPriority:"u64",TransactionInfo:{_alias:{dataSize:"size"},chunkRoot:"H256",contentHash:"H256",dataSize:"u32",blockChunks:"u32"},TransactionStorageProof:{chunk:"Vec<u8>",proof:"Vec<Vec<u8>>"},ValidatorId:"AccountId",ValidatorIdOf:"ValidatorId",Weight:"u64",WeightMultiplier:"Fixed64",PreRuntime:"(ConsensusEngineId, Bytes)",SealV0:"(u64, Signature)",Seal:"(ConsensusEngineId, Bytes)",Consensus:"(ConsensusEngineId, Bytes)"})};var Ou={rpc:{},types:U({},{Si0Field:{name:"Option<Text>",type:"Si0LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si0LookupTypeId:"u32",Si0Path:"Vec<Text>",Si0Type:{path:"Si0Path",params:"Vec<Si0LookupTypeId>",def:"Si0TypeDef"},Si0TypeDef:{_enum:{Composite:"Si0TypeDefComposite",Variant:"Si0TypeDefVariant",Sequence:"Si0TypeDefSequence",Array:"Si0TypeDefArray",Tuple:"Si0TypeDefTuple",Primitive:"Si0TypeDefPrimitive",Compact:"Si0TypeDefCompact",Phantom:"Si0TypeDefPhantom",BitSequence:"Si0TypeDefBitSequence"}},Si0TypeDefArray:{len:"u32",type:"Si0LookupTypeId"},Si0TypeDefBitSequence:{bitStoreType:"Si0LookupTypeId",bitOrderType:"Si0LookupTypeId"},Si0TypeDefCompact:{type:"Si0LookupTypeId"},Si0TypeDefComposite:{fields:"Vec<Si0Field>"},Si0TypeDefPhantom:"Null",Si0TypeDefVariant:{variants:"Vec<Si0Variant>"},Si0TypeDefPrimitive:{_enum:["Bool","Char","Str","U8","U16","U32","U64","U128","U256","I8","I16","I32","I64","I128","I256"]},Si0TypeDefSequence:{type:"Si0LookupTypeId"},Si0TypeDefTuple:"Vec<Si0LookupTypeId>",Si0TypeParameter:{name:"Text",type:"Option<Si0LookupTypeId>"},Si0Variant:{name:"Text",fields:"Vec<Si0Field>",index:"Option<u8>",discriminant:"Option<u64>",docs:"Vec<Text>"}},Su,{SiField:"Si1Field",SiLookupTypeId:"Si1LookupTypeId",SiPath:"Si1Path",SiType:"Si1Type",SiTypeDef:"Si1TypeDef",SiTypeDefArray:"Si1TypeDefArray",SiTypeDefBitSequence:"Si1TypeDefBitSequence",SiTypeDefCompact:"Si1TypeDefCompact",SiTypeDefComposite:"Si1TypeDefComposite",SiTypeDefPrimitive:"Si1TypeDefPrimitive",SiTypeDefSequence:"Si1TypeDefSequence",SiTypeDefTuple:"Si1TypeDefTuple",SiTypeParameter:"Si1TypeParameter",SiTypeDefVariant:"Si1TypeDefVariant",SiVariant:"Si1Variant"})},Hu={rpc:{},types:{AssetApprovalKey:{owner:"AccountId",delegate:"AccountId"},AssetApproval:{amount:"TAssetBalance",deposit:"TAssetDepositBalance"},AssetBalance:{balance:"TAssetBalance",isFrozen:"bool",isSufficient:"bool"},AssetDestroyWitness:{accounts:"Compact<u32>",sufficients:"Compact<u32>",approvals:"Compact<u32>"},AssetDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",supply:"TAssetBalance",deposit:"TAssetDepositBalance",minBalance:"TAssetBalance",isSufficient:"bool",accounts:"u32",sufficients:"u32",approvals:"u32",isFrozen:"bool"},AssetMetadata:{deposit:"TAssetDepositBalance",name:"Vec<u8>",symbol:"Vec<u8>",decimals:"u8",isFrozen:"bool"},TAssetBalance:"u64",TAssetDepositBalance:"BalanceOf"}},Iu={rpc:{},types:{UncleEntryItem:{_enum:{InclusionHeight:"BlockNumber",Uncle:"(Hash, Option<AccountId>)"}}}},Vu={rpc:{},types:{RawAuraPreDigest:{slotNumber:"u64"}}},Eu={rpc:{epochAuthorship:{description:"Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore",params:[],type:"HashMap<AuthorityId, EpochAuthorship>"}},types:{AllowedSlots:{_enum:["PrimarySlots","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVRFSlots"]},BabeAuthorityWeight:"u64",BabeEpochConfiguration:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},BabeBlockWeight:"u32",BabeEquivocationProof:{offender:"AuthorityId",slotNumber:"SlotNumber",firstHeader:"Header",secondHeader:"Header"},BabeWeight:"u64",MaybeRandomness:"Option<Randomness>",MaybeVrf:"Option<VrfData>",EpochAuthorship:{primary:"Vec<u64>",secondary:"Vec<u64>",secondary_vrf:"Vec<u64>"},NextConfigDescriptor:{_enum:{V0:"Null",V1:"NextConfigDescriptorV1"}},NextConfigDescriptorV1:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},Randomness:"Hash",RawBabePreDigest:{_enum:{Phantom:"Null",Primary:"RawBabePreDigestPrimary",SecondaryPlain:"RawBabePreDigestSecondaryPlain",SecondaryVRF:"RawBabePreDigestSecondaryVRF"}},RawBabePreDigestPrimary:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryPlain:{authorityIndex:"u32",slotNumber:"SlotNumber"},RawBabePreDigestSecondaryVRF:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestTo159:{_enum:{Primary:"RawBabePreDigestPrimaryTo159",Secondary:"RawBabePreDigestSecondaryTo159"}},RawBabePreDigestPrimaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight"},RawBabePreDigestCompat:{_enum:{Zero:"u32",One:"u32",Two:"u32",Three:"u32"}},SlotNumber:"u64",VrfData:"[u8; 32]",VrfOutput:"[u8; 32]",VrfProof:"[u8; 64]"}},zu={rpc:{},types:{AccountData:{free:"Balance",reserved:"Balance",miscFrozen:"Balance",feeFrozen:"Balance"},BalanceLockTo212:{id:"LockIdentifier",amount:"Balance",until:"BlockNumber",reasons:"WithdrawReasons"},BalanceLock:{id:"LockIdentifier",amount:"Balance",reasons:"Reasons"},BalanceStatus:{_enum:["Free","Reserved"]},Reasons:{_enum:["Fee","Misc","All"]},ReserveData:{id:"ReserveIdentifier",amount:"Balance"},ReserveIdentifier:"[u8; 8]",VestingSchedule:{offset:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"},WithdrawReasons:{_set:{TransactionPayment:1,Transfer:2,Reserve:4,Fee:8,Tip:16}}}},Cu={rpc:{subscribeJustifications:{description:"Returns the block most recently finalized by BEEFY, alongside side its justification.",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"BeefySignedCommitment"}},types:{BeefyCommitment:{payload:"BeefyPayload",blockNumber:"BlockNumber",validatorSetId:"ValidatorSetId"},BeefyId:"[u8; 33]",BeefySignedCommitment:{commitment:"BeefyCommitment",signatures:"Vec<Option<EcdsaSignature>>"},BeefyNextAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyPayload:"MmrRootHash",MmrRootHash:"H256",ValidatorSetId:"u64"}},ju={rpc:{},types:{CollectiveOrigin:{_enum:{Members:"(MemberCount, MemberCount)",Member:"AccountId"}},MemberCount:"u32",ProposalIndex:"u32",VotesTo230:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>"},Votes:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>",end:"BlockNumber"}}},Lu={rpc:{},types:{AuthorityId:"AccountId",RawVRFOutput:"[u8; 32]"}},Ru={rpc:{call:{description:"Executes a call to a contract",params:[{name:"callRequest",type:"ContractCallRequest"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ContractExecResult"},instantiate:{description:"Instantiate a new contract",params:[{name:"request",type:"InstantiateRequest"},{name:"at",type:"BlockHash",isHstoric:!0,isOptional:!0}],type:"ContractInstantiateResult"},getStorage:{description:"Returns the value under a specified storage key in a contract",params:[{name:"address",type:"AccountId"},{name:"key",type:"H256"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Option<Bytes>"},rentProjection:{description:"Returns the projected time a given contract will be able to sustain paying its rent",params:[{name:"address",type:"AccountId"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Option<BlockNumber>"}},types:{AliveContractInfo:{trieId:"TrieId",storageSize:"u32",pairCount:"u32",codeHash:"CodeHash",rentAllowance:"Balance",rentPaid:"Balance",deductBlock:"BlockNumber",lastWrite:"Option<BlockNumber>",_reserved:"Option<Null>"},CodeHash:"Hash",ContractCallRequest:{origin:"AccountId",dest:"AccountId",value:"Balance",gasLimit:"u64",inputData:"Bytes"},ContractExecResultSuccessTo255:{status:"u8",data:"Raw"},ContractExecResultTo255:{_enum:{Success:"ContractExecResultSuccessTo255",Error:"Null"}},ContractExecResultSuccessTo260:{flags:"u32",data:"Bytes",gasConsumed:"u64"},ContractExecResultTo260:{_enum:{Success:"ContractExecResultSuccessTo260",Error:"Null"}},ContractExecResultErrModule:{index:"u8",error:"u8",message:"Option<Text>"},ContractExecResultErr:{_enum:{Other:"Text",CannotLookup:"Null",BadOrigin:"Null",Module:"ContractExecResultErrModule"}},ContractExecResultOk:{flags:"u32",data:"Bytes"},ContractExecResultResult:{_enum:{Ok:"ContractExecResultOk",Err:"ContractExecResultErr"}},ContractExecResultTo267:{gasConsumed:"u64",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResult:{gasConsumed:"u64",gasRequired:"u64",debugMessage:"Text",result:"ContractExecResultResult"},ContractInfo:{_enum:{Alive:"AliveContractInfo",Tombstone:"TombstoneContractInfo"}},ContractStorageKey:"[u8; 32]",DeletedContract:{pairCount:"u32",trieId:"TrieId"},ExecReturnValue:{flags:"u32",data:"Bytes"},Gas:"u64",HostFnWeightsTo264:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",restoreTo:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight"},HostFnWeights:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",terminatePerCodeByte:"Weight",restoreTo:"Weight",restoreToPerCallerCodeByte:"Weight",restoreToPerTombstoneCodeByte:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callPerCodeByte:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerCodeByte:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",instantiatePerSaltByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight",rentParams:"Weight"},InstantiateRequest:{origin:"AccountId",endowment:"Balance",gasLimit:"Gas",code:"Bytes",data:"Bytes",salt:"Bytes"},ContractInstantiateResultTo267:{_enum:{Ok:"InstantiateReturnValueTo267",Err:"Null"}},ContractInstantiateResult:{_enum:{Ok:"InstantiateReturnValue",Err:"Null"}},InstantiateReturnValueTo267:{result:"ExecReturnValue",accountId:"AccountId",rentProjection:"Option<RentProjection>"},InstantiateReturnValue:{_fallback:"InstantiateReturnValueTo267",result:"ExecReturnValue",accountId:"AccountId"},InstructionWeights:{i64const:"u32",i64load:"u32",i64store:"u32",select:"u32",rIf:"u32",br:"u32",brIf:"u32",brIable:"u32",brIablePerEntry:"u32",call:"u32",callIndirect:"u32",callIndirectPerParam:"u32",localGet:"u32",localSet:"u32",local_tee:"u32",globalGet:"u32",globalSet:"u32",memoryCurrent:"u32",memoryGrow:"u32",i64clz:"u32",i64ctz:"u32",i64popcnt:"u32",i64eqz:"u32",i64extendsi32:"u32",i64extendui32:"u32",i32wrapi64:"u32",i64eq:"u32",i64ne:"u32",i64lts:"u32",i64ltu:"u32",i64gts:"u32",i64gtu:"u32",i64les:"u32",i64leu:"u32",i64ges:"u32",i64geu:"u32",i64add:"u32",i64sub:"u32",i64mul:"u32",i64divs:"u32",i64divu:"u32",i64rems:"u32",i64remu:"u32",i64and:"u32",i64or:"u32",i64xor:"u32",i64shl:"u32",i64shrs:"u32",i64shru:"u32",i64rotl:"u32",i64rotr:"u32"},LimitsTo264:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32",codeSize:"u32"},Limits:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32"},PrefabWasmModule:{scheduleVersion:"Compact<u32>",initial:"Compact<u32>",maximum:"Compact<u32>",refcount:"Compact<u64>",_reserved:"Option<Null>",code:"Bytes",originalCodeLen:"u32"},RentProjection:{_enum:{EvictionAt:"BlockNumber",NoEviction:"Null"}},ScheduleTo212:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo258:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",transferCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo264:{version:"u32",enablePrintln:"bool",limits:"LimitsTo264",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeightsTo264"},Schedule:{version:"u32",enablePrintln:"bool",limits:"Limits",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeights"},SeedOf:"Hash",TombstoneContractInfo:"Hash",TrieId:"Bytes"}};var Bu={rpc:{},types:{AccountVote:{_enum:{Standard:"AccountVoteStandard",Split:"AccountVoteSplit"}},AccountVoteSplit:{aye:"Balance",nay:"Balance"},AccountVoteStandard:{vote:"Vote",balance:"Balance"},Conviction:{_enum:["None","Locked1x","Locked2x","Locked3x","Locked4x","Locked5x","Locked6x"]},Delegations:{votes:"Balance",capital:"Balance"},PreimageStatus:{_enum:{Missing:"BlockNumber",Available:"PreimageStatusAvailable"}},PreimageStatusAvailable:{data:"Bytes",provider:"AccountId",deposit:"Balance",since:"BlockNumber",expiry:"Option<BlockNumber>"},PriorLock:"(BlockNumber, Balance)",PropIndex:"u32",Proposal:"Call",ProxyState:{_enum:{Open:"AccountId",Active:"AccountId"}},ReferendumIndex:"u32",ReferendumInfoTo239:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber"},ReferendumInfo:{_enum:{Ongoing:"ReferendumStatus",Finished:"ReferendumInfoFinished"}},ReferendumInfoFinished:{approved:"bool",end:"BlockNumber"},ReferendumStatus:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber",tally:"Tally"},Tally:{ayes:"Balance",nays:"Balance",turnout:"Balance"},Voting:{_enum:{Direct:"VotingDirect",Delegating:"VotingDelegating"}},VotingDirect:{votes:"Vec<VotingDirectVote>",delegations:"Delegations",prior:"PriorLock"},VotingDirectVote:"(ReferendumIndex, AccountVote)",VotingDelegating:{balance:"Balance",target:"AccountId",conviction:"Conviction",delegations:"Delegations",prior:"PriorLock"}}},Du={rpc:{},types:{ApprovalFlag:"u32",DefunctVoter:{who:"AccountId",voteCount:"Compact<u32>",candidateCount:"Compact<u32>"},Renouncing:{_enum:{Member:"Null",RunnerUp:"Null",Candidate:"Compact<u32>"}},SetIndex:"u32",Vote:"GenericVote",VoteIndex:"u32",VoterInfo:{lastActive:"VoteIndex",lastWin:"VoteIndex",pot:"Balance",stake:"Balance"},VoteThreshold:{_enum:["Super Majority Approve","Super Majority Against","Simple Majority"]}}},Xu={rpc:{createBlock:{description:"Instructs the manual-seal authorship task to create a new block",params:[{name:"createEmpty",type:"bool"},{name:"finalize",type:"bool"},{name:"parentHash",type:"BlockHash",isOptional:!0}],type:"CreatedBlock"},finalizeBlock:{description:"Instructs the manual-seal authorship task to finalize a block",params:[{name:"hash",type:"BlockHash"},{name:"justification",type:"Justification",isOptional:!0}],type:"bool"}},types:{CreatedBlock:{hash:"BlockHash",aux:"ImportedAux"},ImportedAux:{headerOnly:"bool",clearJustificationRequests:"bool",needsJustification:"bool",badJustification:"bool",needsFinalityProof:"bool",isNewBest:"bool"}}},qu={rpc:{},types:{EvmAccount:{nonce:"u256",balance:"u256"},EvmLog:{address:"H160",topics:"Vec<H256>",data:"Bytes"},EvmVicinity:{gasPrice:"u256",origin:"H160"},ExitError:{_enum:{StackUnderflow:"Null",StackOverflow:"Null",InvalidJump:"Null",InvalidRange:"Null",DesignatedInvalid:"Null",CallTooDeep:"Null",CreateCollision:"Null",CreateContractLimit:"Null",OutOfOffset:"Null",OutOfGas:"Null",OutOfFund:"Null",PCUnderflow:"Null",CreateEmpty:"Null",Other:"Text"}},ExitFatal:{_enum:{NotSupported:"Null",UnhandledInterrupt:"Null",CallErrorAsFatal:"ExitError",Other:"Text"}},ExitReason:{_enum:{Succeed:"ExitSucceed",Error:"ExitError",Revert:"ExitRevert",Fatal:"ExitFatal"}},ExitRevert:{_enum:["Reverted"]},ExitSucceed:{_enum:["Stopped","Returned","Suicided"]}}},Wu={rpc:{},types:{Extrinsic:"GenericExtrinsic",ExtrinsicEra:"GenericExtrinsicEra",ExtrinsicPayload:"GenericExtrinsicPayload",ExtrinsicSignature:"MultiSignature",ExtrinsicV4:"GenericExtrinsicV4",ExtrinsicPayloadV4:"GenericExtrinsicPayloadV4",ExtrinsicSignatureV4:"GenericExtrinsicSignatureV4",ExtrinsicUnknown:"GenericExtrinsicUnknown",ExtrinsicPayloadUnknown:"GenericExtrinsicPayloadUnknown",Era:"ExtrinsicEra",ImmortalEra:"GenericImmortalEra",MortalEra:"GenericMortalEra",AnySignature:"H512",MultiSignature:{_enum:{Ed25519:"Ed25519Signature",Sr25519:"Sr25519Signature",Ecdsa:"EcdsaSignature"}},Signature:"H512",SignerPayload:"GenericSignerPayload",EcdsaSignature:"[u8; 65]",Ed25519Signature:"H512",Sr25519Signature:"H512"}},Fu={rpc:{},types:{AssetOptions:{initalIssuance:"Compact<Balance>",permissions:"PermissionLatest"},Owner:{_enum:{None:"Null",Address:"AccountId"}},PermissionsV1:{update:"Owner",mint:"Owner",burn:"Owner"},PermissionVersions:{_enum:{V1:"PermissionsV1"}},PermissionLatest:"PermissionsV1"}},Uu={rpc:{},types:{ActiveGilt:{proportion:"Perquintill",amount:"Balance",who:"AccountId",expiry:"BlockNumber"},ActiveGiltsTotal:{frozen:"Balance",proportion:"Perquintill",index:"ActiveIndex",target:"Perquintill"},ActiveIndex:"u32",GiltBid:{amount:"Balance",who:"AccountId"}}},Gu={rpc:{proveFinality:{description:"Prove finality for the range (begin; end] hash.",params:[{name:"begin",type:"BlockHash"},{name:"end",type:"BlockHash"},{name:"authoritiesSetId",type:"u64",isOptional:!0}],type:"Option<EncodedFinalityProofs>"},roundState:{description:"Returns the state of the current best round state as well as the ongoing background rounds",params:[],type:"ReportedRoundStates"},subscribeJustifications:{description:"Subscribes to grandpa justifications",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"JustificationNotification"}},types:{AuthorityIndex:"u64",AuthorityList:"Vec<NextAuthority>",AuthoritySet:{currentAuthorities:"AuthorityList",setId:"u64",pendingStandardChanges:"ForkTreePendingChange",pendingForcedChanges:"Vec<PendingChange>",authoritySetChanges:"AuthoritySetChanges"},ForkTreePendingChange:{roots:"Vec<ForkTreePendingChangeNode>",bestFinalizedNumber:"Option<BlockNumber>"},ForkTreePendingChangeNode:{hash:"BlockHash",number:"BlockNumber",data:"PendingChange",children:"Vec<ForkTreePendingChangeNode>"},AuthoritySetChange:"(U64, BlockNumber)",AuthoritySetChanges:"Vec<AuthoritySetChange>",AuthorityWeight:"u64",DelayKind:{_enum:{Finalized:"Null",Best:"DelayKindBest"}},DelayKindBest:{medianLastFinalized:"BlockNumber"},EncodedFinalityProofs:"Bytes",GrandpaEquivocation:{_enum:{Prevote:"GrandpaEquivocationValue",Precommit:"GrandpaEquivocationValue"}},GrandpaEquivocationProof:{setId:"SetId",equivocation:"GrandpaEquivocation"},GrandpaEquivocationValue:{roundNumber:"u64",identity:"AuthorityId",first:"(GrandpaPrevote, AuthoritySignature)",second:"(GrandpaPrevote, AuthoritySignature)"},GrandpaPrevote:{targetHash:"Hash",targetNumber:"BlockNumber"},GrandpaCommit:{targetHash:"BlockHash",targetNumber:"BlockNumber",precommits:"Vec<GrandpaSignedPrecommit>"},GrandpaPrecommit:{targetHash:"BlockHash",targetNumber:"BlockNumber"},GrandpaSignedPrecommit:{precommit:"GrandpaPrecommit",signature:"AuthoritySignature",id:"AuthorityId"},GrandpaJustification:{round:"u64",commit:"GrandpaCommit",votesAncestries:"Vec<Header>"},JustificationNotification:"Bytes",KeyOwnerProof:"MembershipProof",NextAuthority:"(AuthorityId, AuthorityWeight)",PendingChange:{nextAuthorities:"AuthorityList",delay:"BlockNumber",canonHeight:"BlockNumber",canonHash:"BlockHash",delayKind:"DelayKind"},PendingPause:{scheduledAt:"BlockNumber",delay:"BlockNumber"},PendingResume:{scheduledAt:"BlockNumber",delay:"BlockNumber"},Precommits:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},Prevotes:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},ReportedRoundStates:{setId:"u32",best:"RoundState",background:"Vec<RoundState>"},RoundState:{round:"u32",totalWeight:"u32",thresholdWeight:"u32",prevotes:"Prevotes",precommits:"Precommits"},SetId:"u64",StoredPendingChange:{scheduledAt:"BlockNumber",delay:"BlockNumber",nextAuthorities:"AuthorityList"},StoredState:{_enum:{Live:"Null",PendingPause:"PendingPause",Paused:"Null",PendingResume:"PendingResume"}}}},Zu={rpc:{},types:{IdentityFields:{_set:{_bitLength:64,Display:1,Legal:2,Web:4,Riot:8,Email:16,PgpFingerprint:32,Image:64,Twitter:128}},IdentityInfoAdditional:"(Data, Data)",IdentityInfoTo198:{additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data"},IdentityInfo:{_fallback:"IdentityInfoTo198",additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data",twitter:"Data"},IdentityJudgement:{_enum:{Unknown:"Null",FeePaid:"Balance",Reasonable:"Null",KnownGood:"Null",OutOfDate:"Null",LowQuality:"Null",Erroneous:"Null"}},RegistrationJudgement:"(RegistrarIndex, IdentityJudgement)",RegistrationTo198:{judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfoTo198"},Registration:{_fallback:"RegistrationTo198",judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfo"},RegistrarIndex:"u32",RegistrarInfo:{account:"AccountId",fee:"Balance",fields:"IdentityFields"}}},Yu={rpc:{},types:{AuthIndex:"u32",AuthoritySignature:"Signature",Heartbeat:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex",validatorsLen:"u32"},HeartbeatTo244:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex"},OpaqueMultiaddr:"Bytes",OpaquePeerId:"Bytes",OpaqueNetworkState:{peerId:"OpaquePeerId",externalAddresses:"Vec<OpaqueMultiaddr>"}}},Ju={rpc:{},types:{CallIndex:"(u8, u8)",LotteryConfig:{price:"Balance",start:"BlockNumber",length:"BlockNumber",delay:"BlockNumber",repeat:"bool"}}},Ku={rpc:{generateProof:{description:"Generate MMR proof for given leaf index.",params:[{name:"leafIndex",type:"u64"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"MmrLeafProof"}},types:{MmrLeafProof:{blockHash:"BlockHash",leaf:"Bytes",proof:"Bytes"}}},Qu={rpc:{},types:{DeferredOffenceOf:"(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)",Kind:"[u8; 16]",OffenceDetails:{offender:"Offender",reporters:"Vec<Reporter>"},Offender:"IdentificationTuple",OpaqueTimeSlot:"Bytes",ReportIdOf:"Hash",Reporter:"AccountId"}},_u={rpc:{},types:{ProxyDefinition:{delegate:"AccountId",proxyType:"ProxyType",delay:"BlockNumber"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking"]},ProxyAnnouncement:{real:"AccountId",callHash:"Hash",height:"BlockNumber"}}},$u={rpc:{},types:{ActiveRecovery:{created:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>"},RecoveryConfig:{delayPeriod:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>",threshold:"u16"}}},ed={rpc:{},types:{Period:"(BlockNumber, u32)",Priority:"u8",SchedulePeriod:"Period",SchedulePriority:"Priority",Scheduled:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>",origin:"PalletsOrigin"},ScheduledTo254:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>"},TaskAddress:"(BlockNumber, u32)"}};var td={rpc:{},types:U({},{BeefyKey:"[u8; 33]",Keys:"SessionKeys4",SessionKeys1:"(AccountId)",SessionKeys2:"(AccountId, AccountId)",SessionKeys3:"(AccountId, AccountId, AccountId)",SessionKeys4:"(AccountId, AccountId, AccountId, AccountId)",SessionKeys5:"(AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6B:"(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys7:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys7B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys8:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys8B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys9:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys9B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys10:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys10B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)"},{FullIdentification:"Exposure",IdentificationTuple:"(ValidatorId, FullIdentification)",MembershipProof:{session:"SessionIndex",trieNodes:"Vec<Vec<u8>>",validatorCount:"ValidatorCount"},SessionIndex:"u32",ValidatorCount:"u32"})},rd={rpc:{},types:{Bid:{who:"AccountId",kind:"BidKind",value:"Balance"},BidKind:{_enum:{Deposit:"Balance",Vouch:"(AccountId, Balance)"}},SocietyJudgement:{_enum:["Rebid","Reject","Approve"]},SocietyVote:{_enum:["Skeptic","Reject","Approve"]},StrikeCount:"u32",VouchingStatus:{_enum:["Vouching","Banned"]}}};var nd={rpc:{},types:U({},{Points:"u32",EraPoints:{total:"Points",individual:"Vec<Points>"}},{CompactAssignments:"CompactAssignmentsWith16",CompactAssignmentsWith16:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>"},CompactAssignmentsWith24:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>",votes17:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>",votes18:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>",votes19:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>",votes20:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>",votes21:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>",votes22:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>",votes23:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>",votes24:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>"},CompactAssignmentsTo265:"CompactAssignmentsWith16",CompactAssignmentsTo257:{votes1:"Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>",votes2:"Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>",votes3:"Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>",votes4:"Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>",votes5:"Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>",votes6:"Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>",votes7:"Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>",votes8:"Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>",votes9:"Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>",votes10:"Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>",votes11:"Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>",votes12:"Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>",votes13:"Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>",votes14:"Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>",votes15:"Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>",votes16:"Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>"},CompactScore:"(ValidatorIndex, OffchainAccuracy)",CompactScoreCompact:"(ValidatorIndexCompact, OffchainAccuracyCompact)",ElectionCompute:{_enum:["OnChain","Signed","Unsigned"]},ElectionPhase:{_enum:{Off:null,Signed:null,Unsigned:"(bool, BlockNumber)",Emergency:null}},ElectionResult:{compute:"ElectionCompute",slotStake:"Balance",electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure)>"},ElectionScore:"[u128; 3]",ElectionSize:{validators:"Compact<ValidatorIndex>",nominators:"Compact<NominatorIndex>"},ElectionStatus:{_enum:{Close:"Null",Open:"BlockNumber"}},ExtendedBalance:"u128",RawSolution:"RawSolutionWith16",RawSolutionWith16:{compact:"CompactAssignmentsWith16",score:"ElectionScore",round:"u32"},RawSolutionWith24:{compact:"CompactAssignmentsWith24",score:"ElectionScore",round:"u32"},RawSolutionTo265:"RawSolutionWith16",ReadySolution:{supports:"SolutionSupports",score:"ElectionScore",compute:"ElectionCompute"},RoundSnapshot:{voters:"Vec<(AccountId, VoteWeight, Vec<AccountId>)>",targets:"Vec<AccountId>"},SeatHolder:{who:"AccountId",stake:"Balance",deposit:"Balance"},SignedSubmission:{_fallback:"SignedSubmissionTo276",who:"AccountId",deposit:"Balance",solution:"RawSolution",reward:"Balance"},SignedSubmissionTo276:{who:"AccountId",deposit:"Balance",solution:"RawSolution"},SignedSubmissionOf:"SignedSubmission",SolutionOrSnapshotSize:{voters:"Compact<u32>",targets:"Compact<u32>"},SolutionSupport:{total:"ExtendedBalance",voters:"Vec<(AccountId, ExtendedBalance)>"},SolutionSupports:"Vec<(AccountId, SolutionSupport)>",Supports:"SolutionSupports",SubmissionIndicesOf:"BTreeMap<ElectionScore, u32>",Voter:{votes:"Vec<AccountId>",stake:"Balance",deposit:"Balance"},VoteWeight:"u64"},{ActiveEraInfo:{index:"EraIndex",start:"Option<Moment>"},EraIndex:"u32",EraRewardPoints:{total:"RewardPoint",individual:"BTreeMap<AccountId, RewardPoint>"},EraRewards:{total:"u32",rewards:"Vec<u32>"},Exposure:{total:"Compact<Balance>",own:"Compact<Balance>",others:"Vec<IndividualExposure>"},Forcing:{_enum:["NotForcing","ForceNew","ForceNone","ForceAlways"]},IndividualExposure:{who:"AccountId",value:"Compact<Balance>"},KeyType:"AccountId",MomentOf:"Moment",Nominations:{targets:"Vec<AccountId>",submittedIn:"EraIndex",suppressed:"bool"},NominatorIndex:"u32",NominatorIndexCompact:"Compact<NominatorIndex>",OffchainAccuracy:"PerU16",OffchainAccuracyCompact:"Compact<OffchainAccuracy>",PhragmenScore:"[u128; 3]",Points:"u32",RewardDestination:{_enum:{Staked:"Null",Stash:"Null",Controller:"Null",Account:"AccountId",None:"Null"}},RewardPoint:"u32",SlashJournalEntry:{who:"AccountId",amount:"Balance",ownSlash:"Balance"},SlashingSpansTo204:{spanIndex:"SpanIndex",lastStart:"EraIndex",prior:"Vec<EraIndex>"},SlashingSpans:{spanIndex:"SpanIndex",lastStart:"EraIndex",lastNonzeroSlash:"EraIndex",prior:"Vec<EraIndex>"},SpanIndex:"u32",SpanRecord:{slashed:"Balance",paidOut:"Balance"},StakingLedgerTo223:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>"},StakingLedgerTo240:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",lastReward:"Option<EraIndex>"},StakingLedger:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",claimedRewards:"Vec<EraIndex>"},UnappliedSlashOther:"(AccountId, Balance)",UnappliedSlash:{validator:"AccountId",own:"Balance",others:"Vec<UnappliedSlashOther>",reporters:"Vec<AccountId>",payout:"Balance"},UnlockChunk:{value:"Compact<Balance>",era:"Compact<BlockNumber>"},ValidatorIndex:"u16",ValidatorIndexCompact:"Compact<ValidatorIndex>",ValidatorPrefs:"ValidatorPrefsWithBlocked",ValidatorPrefsWithCommission:{commission:"Compact<Perbill>"},ValidatorPrefsWithBlocked:{commission:"Compact<Perbill>",blocked:"bool"},ValidatorPrefsTo196:{validatorPayment:"Compact<Balance>"},ValidatorPrefsTo145:{unstakeThreshold:"Compact<u32>",validatorPayment:"Compact<Balance>"}})},id={rpc:{},types:{WeightToFeeCoefficient:{coeffInteger:"Balance",coeffFrac:"Perbill",negative:"bool",degree:"u8"}}},od={rpc:{genSyncSpec:{endpoint:"sync_state_genSyncSpec",description:"Returns the json-serialized chainspec running the node, with a sync state.",params:[{name:"raw",type:"bool"}],type:"Json"}},types:{}},sd={rpc:{accountNextIndex:{alias:["account_nextIndex"],description:"Retrieves the next accountIndex as available on the node",params:[{name:"accountId",type:"AccountId"}],type:"Index"},dryRun:{alias:["system_dryRunAt"],description:"Dry run an extrinsic at a given block",params:[{name:"extrinsic",type:"Bytes"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ApplyExtrinsicResult"},name:{description:"Retrieves the node name",params:[],type:"Text"},version:{description:"Retrieves the version of the node",params:[],type:"Text"},chain:{description:"Retrieves the chain",params:[],type:"Text"},chainType:{description:"Retrieves the chain type",params:[],type:"ChainType"},properties:{description:"Get a custom set of properties as a JSON object, defined in the chain spec",params:[],type:"ChainProperties"},health:{description:"Return health status of the node",params:[],type:"Health"},localPeerId:{description:"Returns the base58-encoded PeerId of the node",params:[],type:"Text"},localListenAddresses:{description:"The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example",params:[],type:"Vec<Text>"},peers:{description:"Returns the currently connected peers",params:[],type:"Vec<PeerInfo>"},networkState:{alias:["system_unstable_networkState"],description:"Returns current state of the network",params:[],type:"NetworkState"},addReservedPeer:{description:"Adds a reserved peer",params:[{name:"peer",type:"Text"}],type:"Text"},removeReservedPeer:{description:"Remove a reserved peer",params:[{name:"peerId",type:"Text"}],type:"Text"},reservedPeers:{description:"Returns the list of reserved peers",params:[],type:"Vec<Text>"},nodeRoles:{description:"Returns the roles the node is running as",params:[],type:"Vec<NodeRole>"},syncState:{description:"Returns the state of the syncing of the node",params:[],type:"SyncState"},addLogFilter:{description:"Adds the supplied directives to the current log filter",params:[{name:"directives",type:"Text"}],type:"Null"},resetLogFilter:{description:"Resets the log filter to Substrate defaults",params:[],type:"Null"}},types:{AccountInfo:"AccountInfoWithTripleRefCount",AccountInfoWithRefCountU8:{nonce:"Index",refcount:"u8",data:"AccountData"},AccountInfoWithRefCount:{_fallback:"AccountInfoWithRefCountU8",nonce:"Index",refcount:"RefCount",data:"AccountData"},AccountInfoWithDualRefCount:{_fallback:"AccountInfoWithRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",data:"AccountData"},AccountInfoWithProviders:"AccountInfoWithDualRefCount",AccountInfoWithTripleRefCount:{_fallback:"AccountInfoWithDualRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",sufficients:"RefCount",data:"AccountData"},ApplyExtrinsicResult:"Result<DispatchOutcome, TransactionValidityError>",ArithmeticError:{_enum:["Underflow","Overflow","DivisionByZero"]},BlockLength:{max:"PerDispatchClassU32"},BlockWeights:{baseBlock:"Weight",maxBlock:"Weight",perClass:"PerDispatchClassWeightsPerClass"},ChainProperties:"GenericChainProperties",ChainType:{_enum:{Development:"Null",Local:"Null",Live:"Null",Custom:"Text"}},ConsumedWeight:"PerDispatchClassWeight",DigestOf:"Digest",DispatchClass:{_enum:["Normal","Operational","Mandatory"]},DispatchError:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModule",ConsumerRemaining:"Null",NoProviders:"Null",Token:"TokenError",Arithmetic:"ArithmeticError"}},DispatchErrorModule:{index:"u8",error:"u8"},DispatchErrorTo198:{module:"Option<u8>",error:"u8"},DispatchInfo:{weight:"Weight",class:"DispatchClass",paysFee:"Pays"},DispatchInfoTo190:{weight:"Weight",class:"DispatchClass"},DispatchInfoTo244:{weight:"Weight",class:"DispatchClass",paysFee:"bool"},DispatchOutcome:"Result<(), DispatchError>",DispatchResult:"Result<(), DispatchError>",DispatchResultOf:"DispatchResult",DispatchResultTo198:"Result<(), Text>",Event:"GenericEvent",EventId:"[u8; 2]",EventIndex:"u32",EventRecord:{phase:"Phase",event:"Event",topics:"Vec<Hash>"},Health:{peers:"u64",isSyncing:"bool",shouldHavePeers:"bool"},InvalidTransaction:{_enum:{Call:"Null",Payment:"Null",Future:"Null",Stale:"Null",BadProof:"Null",AncientBirthBlock:"Null",ExhaustsResources:"Null",Custom:"u8",BadMandatory:"Null",MandatoryDispatch:"Null"}},Key:"Bytes",LastRuntimeUpgradeInfo:{specVersion:"Compact<u32>",specName:"Text"},NetworkState:{peerId:"Text",listenedAddresses:"Vec<Text>",externalAddresses:"Vec<Text>",connectedPeers:"HashMap<Text, Peer>",notConnectedPeers:"HashMap<Text, NotConnectedPeer>",averageDownloadPerSec:"u64",averageUploadPerSec:"u64",peerset:"NetworkStatePeerset"},NetworkStatePeerset:{messageQueue:"u64",nodes:"HashMap<Text, NetworkStatePeersetInfo>"},NetworkStatePeersetInfo:{connected:"bool",reputation:"i32"},NodeRole:{_enum:{Full:"Null",LightClient:"Null",Authority:"Null",UnknownRole:"u8"}},NotConnectedPeer:{knownAddresses:"Vec<Text>",latestPingTime:"Option<PeerPing>",versionString:"Option<Text>"},Peer:{enabled:"bool",endpoint:"PeerEndpoint",knownAddresses:"Vec<Text>",latestPingTime:"PeerPing",open:"bool",versionString:"Text"},PeerEndpoint:{listening:"PeerEndpointAddr"},PeerEndpointAddr:{_alias:{localAddr:"local_addr",sendBackAddr:"send_back_addr"},localAddr:"Text",sendBackAddr:"Text"},PeerPing:{nanos:"u64",secs:"u64"},PeerInfo:{peerId:"Text",roles:"Text",protocolVersion:"u32",bestHash:"Hash",bestNumber:"BlockNumber"},PerDispatchClassU32:{normal:"u32",operational:"u32",mandatory:"u32"},PerDispatchClassWeight:{normal:"Weight",operational:"Weight",mandatory:"Weight"},PerDispatchClassWeightsPerClass:{normal:"WeightPerClass",operational:"WeightPerClass",mandatory:"WeightPerClass"},Phase:{_enum:{ApplyExtrinsic:"u32",Finalization:"Null",Initialization:"Null"}},RawOrigin:{_enum:{Root:"Null",Signed:"AccountId",None:"Null"}},RefCount:"u32",RefCountTo259:"u8",SyncState:{startingBlock:"BlockNumber",currentBlock:"BlockNumber",highestBlock:"Option<BlockNumber>"},SystemOrigin:"RawOrigin",TokenError:{_enum:["NoFunds","WouldDie","BelowMinimum","CannotCreate","UnknownAsset","Frozen","Underflow","Overflow"]},TransactionValidityError:{_enum:{Invalid:"InvalidTransaction",Unknown:"UnknownTransaction"}},UnknownTransaction:{_enum:{CannotLookup:"Null",NoUnsignedValidator:"Null",Custom:"u8"}},WeightPerClass:{baseExtrinsic:"Weight",maxExtrinsic:"Weight",maxTotal:"Option<Weight>",reserved:"Option<Weight>"}}},ad={rpc:{},types:{Bounty:{proposer:"AccountId",value:"Balance",fee:"Balance",curatorDeposit:"Balance",bond:"Balance",status:"BountyStatus"},BountyIndex:"u32",BountyStatus:{_enum:{Proposed:"Null",Approved:"Null",Funded:"Null",CuratorProposed:"BountyStatusCuratorProposed",Active:"BountyStatusActive",PendingPayout:"BountyStatusPendingPayout"}},BountyStatusActive:{curator:"AccountId",updateDue:"BlockNumber"},BountyStatusCuratorProposed:{curator:"AccountId"},BountyStatusPendingPayout:{curator:"AccountId",beneficiary:"AccountId",unlockAt:"BlockNumber"},OpenTip:{reason:"Hash",who:"AccountId",finder:"AccountId",deposit:"Balance",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>",findersFee:"bool"},OpenTipTo225:{reason:"Hash",who:"AccountId",finder:"Option<OpenTipFinderTo225>",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>"},OpenTipFinderTo225:"(AccountId, Balance)",OpenTipTip:"(AccountId, Balance)",TreasuryProposal:{proposer:"AccountId",value:"Balance",beneficiary:"AccountId",bond:"Balance"}}},cd={rpc:{},types:{Multiplier:"Fixed128"}},ud={rpc:{},types:{ClassId:"u32",InstanceId:"u32",DepositBalance:"Balance",DepositBalanceOf:"Balance",ClassDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",totalDeposit:"DepositBalance",freeHolding:"bool",instances:"u32",instanceMetadatas:"u32",attributes:"u32",isFrozen:"bool"},DestroyWitness:{instances:"Compact<u32>",instanceMetadatas:"Compact<u32>",attributes:"Compact<u32>"},InstanceDetails:{owner:"AccountId",approved:"Option<AccountId>",isFrozen:"bool",deposit:"DepositBalance"},ClassMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"},InstanceMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"}}},dd={rpc:{},types:{Multisig:{when:"Timepoint",deposit:"Balance",depositor:"AccountId",approvals:"Vec<AccountId>"},Timepoint:{height:"BlockNumber",index:"u32"}}},fd={rpc:{},types:{VestingInfo:{locked:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"}}},ld={rpc:{},types:{BlockAttestations:{receipt:"CandidateReceipt",valid:"Vec<AccountId>",invalid:"Vec<AccountId>"},IncludedBlocks:{actualNumber:"BlockNumber",session:"SessionIndex",randomSeed:"H256",activeParachains:"Vec<ParaId>",paraBlocks:"Vec<Hash>"},MoreAttestations:{}}},hd={rpc:{},types:{BridgedBlockHash:"H256",BridgedBlockNumber:"BlockNumber",BridgedHeader:"Header",BridgeMessageId:"(LaneId, MessageNonce)",CallOrigin:{_enum:{SourceRoot:"Null",TargetAccount:"(AccountId, MultiSigner, MultiSignature)",SourceAccount:"AccountId"}},ChainId:"[u8; 4]",DeliveredMessages:{begin:"MessageNonce",end:"MessageNonce",dispatchResults:"BitVec"},DispatchFeePayment:{_enum:["AtSourceChain","AtTargetChain"]},InboundLaneData:{relayers:"Vec<UnrewardedRelayer>",lastConfirmedNonce:"MessageNonce"},InboundRelayer:"AccountId",InitializationData:{header:"Header",authorityList:"AuthorityList",setId:"SetId",isHalted:"bool"},LaneId:"[u8; 4]",MessageData:{payload:"Bytes",fee:"Balance"},MessagesDeliveryProofOf:{bridgedHeaderHash:"BlockHash",storageProof:"Vec<Bytes>",lane:"LaneId"},MessageKey:{laneId:"LaneId",nonce:"MessageNonce"},MessageNonce:"u64",MessagesProofOf:{bridgedHeaderHash:"BridgedBlockHash",storageProof:"Vec<Bytes>",lane:"LaneId",noncesStart:"MessageNonce",noncesEnd:"MessageNonce"},OperatingMode:{_enum:["Normal","RejectingOutboundMessages","Halted"]},OutboundLaneData:{oldestUnprunedNonce:"MessageNonce",latestReceivedNonce:"MessageNonce",latestGeneratedNonce:"MessageNonce"},OutboundMessageFee:"Balance",OutboundPayload:{specVersion:"u32",weight:"Weight",origin:"CallOrigin",dispatchFeePayment:"DispatchFeePayment",call:"Bytes"},Parameter:"Null",RelayerId:"AccountId",UnrewardedRelayer:{relayer:"RelayerId",messages:"DeliveredMessages"},UnrewardedRelayersState:{unrewardedRelayer_Entries:"MessageNonce",messagesInOldestEntry:"MessageNonce",totalMessages:"MessageNonce"}}},pd={rpc:{},types:{StatementKind:{_enum:["Regular","Saft"]}}},md={rpc:{},types:{FundIndex:"u32",LastContribution:{_enum:{Never:"Null",PreEnding:"u32",Ending:"BlockNumber"}},FundInfo:{depositor:"AccountId",verifier:"Option<MultiSigner>",deposit:"Balance",raised:"Balance",end:"BlockNumber",cap:"Balance",lastContribution:"LastContribution",firstPeriod:"LeasePeriod",lastPeriod:"LeasePeriod",trieIndex:"TrieIndex"},TrieIndex:"u32"}};var yd={rpc:{},types:{ConfigData:{maxIndividual:"Weight"},MessageId:"[u8; 32]",OverweightIndex:"u64",PageCounter:"u32",PageIndexData:{beginUsed:"PageCounter",endUsed:"PageCounter",overweightCount:"OverweightIndex"}}};var bd=U({},{Bidder:{_enum:{New:"NewBidder",Existing:"ParaId"}},IncomingParachain:{_enum:{Unset:"NewBidder",Fixed:"IncomingParachainFixed",Deploy:"IncomingParachainDeploy"}},IncomingParachainDeploy:{code:"ValidationCode",initialHeadData:"HeadData"},IncomingParachainFixed:{codeHash:"Hash",codeSize:"u32",initialHeadData:"HeadData"},NewBidder:{who:"AccountId",sub:"SubId"},SubId:"u32"},{AuctionIndex:"u32",LeasePeriod:"BlockNumber",LeasePeriodOf:"BlockNumber",SlotRange:{_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","OneOne","OneTwo","OneThree","TwoTwo","TwoThree","ThreeThree"]},WinningData:"[WinningDataEntry; 10]",WinningDataEntry:"Option<(AccountId, ParaId, BalanceOf)>",WinnersData:"Vec<WinnersDataTuple>",WinnersDataTuple:"(AccountId, ParaId, BalanceOf, SlotRange)"});var gd={rpc:{},types:U({},{ServiceQuality:{_enum:["Ordered","Fast"]}},{DisputeLocation:{_enum:["Local","Remote"]},DisputeResult:{_enum:["Valid","Invalid"]},DisputeState:{validatorsFor:"BitVec",validatorsAgainst:"BitVec",start:"BlockNumber",concludedAt:"Option<BlockNumber>"},DisputeStatement:{_enum:{Valid:"ValidDisputeStatementKind",Invalid:"InvalidDisputeStatementKind"}},DisputeStatementSet:{candidateHash:"CandidateHash",session:"SessionIndex",statements:"Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>"},ExplicitDisputeStatement:{valid:"bool",candidateHash:"CandidateHash",session:"SessionIndex"},InvalidDisputeStatementKind:{_enum:["Explicit"]},MultiDisputeStatementSet:"Vec<DisputeStatementSet>",ValidDisputeStatementKind:{_enum:{Explicit:"Null",BackingSeconded:"Hash",BackingValid:"Hash",ApprovalChecking:"Null"}}},{HrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>",senderDeposit:"Balance",recipientDeposit:"Balance"},HrmpChannelId:{sender:"u32",receiver:"u32"},HrmpOpenChannelRequest:{confirmed:"bool",age:"SessionIndex",senderDeposit:"Balance",maxMessageSize:"u32",maxCapacity:"u32",maxTotalSize:"u32"}},{ParachainProposal:{proposer:"AccountId",genesisHead:"HeadData",validators:"Vec<ValidatorId>",name:"Bytes",balance:"Balance"},RegisteredParachainInfo:{validators:"Vec<ValidatorId>",proposer:"AccountId"}},bd,{AbridgedCandidateReceipt:{parachainIndex:"ParaId",relayParent:"Hash",headData:"HeadData",collator:"CollatorId",signature:"CollatorSignature",povBlockHash:"Hash",commitments:"CandidateCommitments"},AbridgedHostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber"},AbridgedHrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>"},AssignmentId:"AccountId",AssignmentKind:{_enum:{Parachain:"Null",Parathread:"(CollatorId, u32)"}},AttestedCandidate:{candidate:"AbridgedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},AuthorityDiscoveryId:"AccountId",AvailabilityBitfield:"BitVec",AvailabilityBitfieldRecord:{bitfield:"AvailabilityBitfield",submittedTt:"BlockNumber"},BackedCandidate:{candidate:"CommittedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},BufferedSessionChange:{applyAt:"BlockNumber",validators:"Vec<ValidatorId>",queued:"Vec<ValidatorId>",sessionIndex:"SessionIndex"},CandidateCommitments:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",headData:"HeadData",processedDownwardMessages:"u32",hrmpWatermark:"BlockNumber"},CandidateDescriptor:{paraId:"ParaId",relayParent:"RelayChainHash",collatorId:"CollatorId",persistedValidationDataHash:"Hash",povHash:"Hash",erasureRoot:"Hash",signature:"CollatorSignature",paraHead:"Hash",validationCodeHash:"ValidationCodeHash"},CandidateHash:"Hash",CandidateInfo:{who:"AccountId",deposit:"Balance"},CandidatePendingAvailability:{core:"CoreIndex",hash:"CandidateHash",descriptor:"CandidateDescriptor",availabilityVotes:"BitVec",backers:"BitVec",relayParentNumber:"BlockNumber",backedInNumber:"BlockNumber",backingGroup:"GroupIndex"},CandidateReceipt:{descriptor:"CandidateDescriptor",commitmentsHash:"Hash"},GlobalValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},CollatorId:"H256",CollatorSignature:"Signature",CommittedCandidateReceipt:{descriptor:"CandidateDescriptor",commitments:"CandidateCommitments"},CoreAssignment:{core:"CoreIndex",paraId:"ParaId",kind:"AssignmentKind",groupIdx:"GroupIndex"},CoreIndex:"u32",CoreOccupied:{_enum:{Parathread:"ParathreadEntry",Parachain:"Null"}},DoubleVoteReport:{identity:"ValidatorId",first:"(Statement, ValidatorSignature)",second:"(Statement, ValidatorSignature)",proof:"MembershipProof",signingContext:"SigningContext"},DownwardMessage:"Bytes",GroupIndex:"u32",GlobalValidationSchedule:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},HeadData:"Bytes",HostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber",maxPovSize:"u32",maxDownwardMessageSize:"u32",preferredDispatchableUpwardMessagesStepWeight:"Weight",hrmpMaxParachainOutboundChannels:"u32",hrmpMaxParathreadOutboundChannels:"u32",hrmpOpenRequestTtl:"u32",hrmpSenderDeposit:"Balance",hrmpRecipientDeposit:"Balance",hrmpChannelMaxCapacity:"u32",hrmpChannelMaxTotalSize:"u32",hrmpMaxParachainInboundChannels:"u32",hrmpMaxParathreadInboundChannels:"u32",hrmpChannelMaxMessageSize:"u32",codeRetentionPeriod:"BlockNumber",parathreadCores:"u32",parathreadRetries:"u32",groupRotationFrequency:"BlockNumber",chainAvailabilityPeriod:"BlockNumber",threadAvailabilityPeriod:"BlockNumber",schedulingLookahead:"u32",maxValidatorsPerCore:"Option<u32>",maxValidators:"Option<u32>",disputePeriod:"SessionIndex",disputePostConclusionAcceptancePeriod:"BlockNumber",disputeMaxSpamSlots:"u32",disputeConclusionByTimeOutPeriod:"BlockNumber",noShowSlots:"u32",nDelayTranches:"u32",zerothDelayTrancheWidth:"u32",neededApprovals:"u32",relayVrfModuloSamples:"u32"},InboundDownwardMessage:{pubSentAt:"BlockNumber",pubMsg:"DownwardMessage"},InboundHrmpMessage:{sentAt:"BlockNumber",data:"Bytes"},InboundHrmpMessages:"Vec<InboundHrmpMessage>",LocalValidationData:{parentHead:"HeadData",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>"},MessageIngestionType:{downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, InboundHrmpMessages>"},MessageQueueChain:"RelayChainHash",OutboundHrmpMessage:{recipient:"u32",data:"Bytes"},ParachainDispatchOrigin:{_enum:["Signed","Parachain","Root"]},ParachainInherentData:{validationData:"PersistedValidationData",relayChainState:"StorageProof",downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, VecInboundHrmpMessage>"},ParachainsInherentData:{bitfields:"SignedAvailabilityBitfields",backedCandidates:"Vec<BackedCandidate>",disputes:"MultiDisputeStatementSet",parentHeader:"Header"},ParaGenesisArgs:{genesisHead:"Bytes",validationCode:"Bytes",parachain:"bool"},ParaId:"u32",ParaInfo:{manager:"AccountId",deposit:"Balance",locked:"bool"},ParaLifecycle:{_enum:["Onboarding","Parathread","Parachain","UpgradingToParachain","DowngradingToParathread","OutgoingParathread","OutgoingParachain"]},ParaPastCodeMeta:{upgradeTimes:"Vec<ReplacementTimes>",lastPruned:"Option<BlockNumber>"},ParaScheduling:{_enum:["Always","Dynamic"]},ParathreadClaim:"(ParaId, CollatorId)",ParathreadClaimQueue:{queue:"Vec<QueuedParathread>",nextCoreOffset:"u32"},ParathreadEntry:{claim:"ParathreadClaim",retries:"u32"},ParaValidatorIndex:"u32",PersistedValidationData:{parentHead:"HeadData",relayParentNumber:"RelayChainBlockNumber",relayParentStorageRoot:"Hash",maxPovSize:"u32"},QueuedParathread:{claim:"ParathreadEntry",coreOffset:"u32"},RelayBlockNumber:"u32",RelayChainBlockNumber:"RelayBlockNumber",RelayHash:"Hash",RelayChainHash:"RelayHash",Remark:"[u8; 32]",ReplacementTimes:{expectedAt:"BlockNumber",activatedAt:"BlockNumber"},Retriable:{_enum:{Never:"Null",WithRetries:"u32"}},Scheduling:{_enum:["Always","Dynamic"]},SessionInfo:{validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<SessionInfoValidatorGroup>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},SessionInfoValidatorGroup:"Vec<ParaValidatorIndex>",SignedAvailabilityBitfield:{payload:"BitVec",validatorIndex:"ParaValidatorIndex",signature:"ValidatorSignature"},SignedAvailabilityBitfields:"Vec<SignedAvailabilityBitfield>",SigningContext:{sessionIndex:"SessionIndex",parentHash:"Hash"},Statement:{_enum:{Never:"Null",Candidate:"Hash",Valid:"Hash",Invalid:"Hash"}},TransientValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>",dmqLength:"u32"},UpgradeGoAhead:{_enum:["Abort","GoAhead"]},UpgradeRestriction:{_enum:["Present"]},UpwardMessage:"Bytes",ValidationFunctionParams:{maxCodeSize:"u32",relayChainHeight:"RelayChainBlockNumber",codeUpgradeAllowed:"Option<RelayChainBlockNumber>"},ValidationCode:"Bytes",ValidationCodeHash:"Hash",ValidationData:{persisted:"PersistedValidationData",transient:"TransientValidationData"},ValidationDataType:{validationData:"ValidationData",relayChainState:"Vec<Bytes>"},ValidatorSignature:"Signature",ValidityAttestation:{_enum:{Never:"Null",Implicit:"ValidatorSignature",Explicit:"ValidatorSignature"}},MessagingStateSnapshot:{relayDispatchQueueSize:"(u32, u32)",egressChannels:"Vec<MessagingStateSnapshotEgressEntry>"},MessagingStateSnapshotEgressEntry:"(ParaId, AbridgedHrmpChannel)",SystemInherentData:"ParachainInherentData",VecInboundHrmpMessage:"Vec<InboundHrmpMessage>"})},vd={rpc:{},types:{Approvals:"[bool; 4]"}},wd={rpc:{},types:{AccountStatus:{validity:"AccountValidity",freeBalance:"Balance",lockedBalance:"Balance",signature:"Vec<u8>",vat:"Permill"},AccountValidity:{_enum:["Invalid","Initiated","Pending","ValidLow","ValidHigh","Completed"]}}},xd="node_modules/@polkadot/types-known";N(ts,xd,[es]);var Pd={};var kd={assets:{Approval:"AssetApproval",ApprovalKey:"AssetApprovalKey",Balance:"TAssetBalance",DestroyWitness:"AssetDestroyWitness"},babe:{EquivocationProof:"BabeEquivocationProof"},balances:{Status:"BalanceStatus"},beefy:{AuthorityId:"BeefyId"},contracts:{StorageKey:"ContractStorageKey"},electionProviderMultiPhase:{Phase:"ElectionPhase"},ethereum:{Block:"EthBlock",Header:"EthHeader",Receipt:"EthReceipt",Transaction:"EthTransaction",TransactionStatus:"EthTransactionStatus"},evm:{Account:"EvmAccount",Log:"EvmLog",Vicinity:"EvmVicinity"},grandpa:{Equivocation:"GrandpaEquivocation",EquivocationProof:"GrandpaEquivocationProof"},identity:{Judgement:"IdentityJudgement"},inclusion:{ValidatorIndex:"ParaValidatorIndex"},paraDisputes:{ValidatorIndex:"ParaValidatorIndex"},paraInclusion:{ValidatorIndex:"ParaValidatorIndex"},paraScheduler:{ValidatorIndex:"ParaValidatorIndex"},paraShared:{ValidatorIndex:"ParaValidatorIndex"},parachains:{Id:"ParaId"},parasDisputes:{ValidatorIndex:"ParaValidatorIndex"},parasInclusion:{ValidatorIndex:"ParaValidatorIndex"},parasScheduler:{ValidatorIndex:"ParaValidatorIndex"},parasShared:{ValidatorIndex:"ParaValidatorIndex"},proposeParachain:{Proposal:"ParachainProposal"},proxy:{Announcement:"ProxyAnnouncement"},scheduler:{ValidatorIndex:"ParaValidatorIndex"},shared:{ValidatorIndex:"ParaValidatorIndex"},society:{Judgement:"SocietyJudgement",Vote:"SocietyVote"},staking:{Compact:"CompactAssignments"},treasury:{Proposal:"TreasuryProposal"},xcm:{AssetId:"XcmAssetId"},xcmPallet:{AssetId:"XcmAssetId"}};const Td={AnchorData:{anchoredBlock:"u64",docRoot:"H256",id:"H256"},PreCommitData:{expirationBlock:"u64",identity:"H256",signingRoot:"H256"},Fee:{key:"Hash",price:"Balance"},MultiAccountData:{deposit:"Balance",depositor:"AccountId",signatories:"Vec<AccountId>",threshold:"u16"},ChainId:"u8",DepositNonce:"u64",ResourceId:"[u8; 32]","chainbridge::ChainId":"u8",RegistryId:"H160",TokenId:"U256",AssetId:{registryId:"RegistryId",tokenId:"TokenId"},AssetInfo:{metadata:"Bytes"},MintInfo:{anchorId:"Hash",proofs:"Vec<ProofMint>",staticHashes:"[Hash; 3]"},Proof:{leafHash:"H256",sortedHashes:"H256"},ProofMint:{hashes:"Vec<Hash>",property:"Bytes",salt:"[u8; 32]",value:"Bytes"},RegistryInfo:{fields:"Vec<Bytes>",ownerCanBurn:"bool"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","NonProxy"]}},Sd=U({},Td,{AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",LookupSource:"IndicesLookupSource",Multiplier:"Fixed64",RefCount:"RefCountTo259"});var Md=[{minmax:[240,243],types:U({},Sd,{ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","Vesting"]}})},{minmax:[244,999],types:U({},Sd)},{minmax:[1e3,void 0],types:U({},Td)}];const Ad=["AssetInstance","Fungibility","Junction","Junctions","MultiAsset","MultiAssetFilter","MultiLocation","Response","WildFungibility","WildMultiAsset","Xcm","XcmError","XcmOrder"];function Nd(e){return Ad.reduce(((t,r)=>U(t,{[r]:`${r}${e}`})),{})}const Od={CompactAssignments:"CompactAssignmentsWith24",RawSolution:"RawSolutionWith24",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","IdentityJudgement","CancelProxy","Auction"]}},Hd={AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"IndicesLookupSource",ValidatorPrefs:"ValidatorPrefsWithCommission"},Id={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"};var Vd=[{minmax:[1019,1031],types:U({},Hd,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchError:"DispatchErrorTo198",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",IdentityInfo:"IdentityInfoTo198",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1032,1042],types:U({},Hd,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1043,1045],types:U({},Hd,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1046,1054],types:U({},Od,Id,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo240",Weight:"u32"})},{minmax:[1055,1056],types:U({},Od,Id,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",StakingLedger:"StakingLedgerTo240",Weight:"u32"})},{minmax:[1057,1061],types:U({},Od,Id,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[1062,2012],types:U({},Od,Id,{CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[2013,2022],types:U({},Od,Id,{CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"})},{minmax:[2023,2024],types:U({},Od,Id,{RefCount:"RefCountTo259"})},{minmax:[2025,2027],types:U({},Od,Id)},{minmax:[2028,2029],types:U({},Od,{AccountInfo:"AccountInfoWithDualRefCount",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"})},{minmax:[2030,9e3],types:U({},Od,{CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"})},{minmax:[9010,9099],types:U({},Od,Nd("V0"))},{minmax:[9100,9105],types:U({},Od,Nd("V1"))},{minmax:[9106,void 0],types:{}}];var Ed=[{minmax:[0,void 0],types:{}}];var zd=[{minmax:[0,void 0],types:{}}];const Cd={CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:{Any:0,NonTransfer:1,Governance:2,Staking:3,UnusedSudoBalances:4,IdentityJudgement:5,CancelProxy:6,Auction:7}}},jd={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"};var Ld=[{minmax:[0,12],types:U({},Cd,jd,{CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[13,22],types:U({},Cd,jd,{CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"})},{minmax:[23,24],types:U({},Cd,jd,{RefCount:"RefCountTo259"})},{minmax:[25,27],types:U({},Cd,jd)},{minmax:[28,29],types:U({},Cd,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[30,9109],types:U({},Cd)},{minmax:[9110,void 0],types:{}}];const Rd={FullIdentification:"()",Keys:"SessionKeys7B"};var Bd=[{minmax:[0,200],types:U({},Rd,{AccountInfo:"AccountInfoWithDualRefCount",Address:"AccountId",LookupSource:"AccountId"})},{minmax:[201,214],types:U({},Rd,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[215,228],types:U({},Rd,{Keys:"SessionKeys6"})},{minmax:[229,9099],types:U({},Rd,Nd("V0"))},{minmax:[9100,9105],types:U({},Rd,Nd("V1"))},{minmax:[9106,void 0],types:{}}];var Dd=[{minmax:[0,void 0],types:{}}];const Xd={TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]}};var qd=[{minmax:[0,3],types:U({},Xd,Nd("V0"))},{minmax:[4,5],types:U({},Xd,Nd("V1"))},{minmax:[500,void 0],types:{}}];const Wd={CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Staking","SudoBalances","IdentityJudgement","CancelProxy"]}},Fd={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",LookupSource:"AccountId",Keys:"SessionKeys5",RawSolution:"RawSolutionWith16",ValidatorPrefs:"ValidatorPrefsWithCommission"};var Ud={"centrifuge-chain":Md,kusama:Vd,node:Ed,"node-template":zd,polkadot:Ld,rococo:Bd,shell:Dd,statemine:qd,statemint:qd,westend:[{minmax:[1,2],types:U({},Wd,Fd,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Weight:"u32"})},{minmax:[3,22],types:U({},Wd,Fd,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[23,42],types:U({},Wd,Fd,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"})},{minmax:[43,44],types:U({},Wd,Fd,{DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"})},{minmax:[45,47],types:U({},Wd,Fd)},{minmax:[48,49],types:U({},Wd,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[50,9099],types:U({},Wd,Nd("V0"))},{minmax:[9100,9105],types:U({},Wd,Nd("V1"))},{minmax:[9106,void 0],types:{}}],westmint:qd};const Gd={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],bifrost:["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],"dock-mainnet":["0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-chain":["0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23"],plasm:["0x3e86364d4b4894021cb2a0390bcf2feb5517d5292f2de2bb9404227e908b0b8b"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"]},Zd={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},Yd={centrifuge:747,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,kusama:434,"nodle-chain":1003,polkadot:354,polymesh:595,statemine:434},Jd={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,subspace_testnet:!0,"zero-alphaville":!0},Kd=[0,2,42],Qd=["testnet"];const _d=[{decimals:[10],displayName:"Polkadot Relay Chain",network:"polkadot",prefix:0,standardAccount:"*25519",symbols:["DOT"],website:"https://polkadot.network"},{decimals:null,displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",network:"BareSr25519",prefix:1,standardAccount:"Sr25519",symbols:null,website:null},{decimals:[12],displayName:"Kusama Relay Chain",network:"kusama",prefix:2,standardAccount:"*25519",symbols:["KSM"],website:"https://kusama.network"},{decimals:null,displayName:"Bare 32-bit Ed25519 public key.",network:"BareEd25519",prefix:3,standardAccount:"Ed25519",symbols:null,website:null},{decimals:null,displayName:"Katal Chain",network:"katalchain",prefix:4,standardAccount:"*25519",symbols:null,website:null},{decimals:[15],displayName:"Plasm Network",network:"plasm",prefix:5,standardAccount:"*25519",symbols:["PLM"],website:"https://plasmnet.io"},{decimals:[12],displayName:"Bifrost",network:"bifrost",prefix:6,standardAccount:"*25519",symbols:["BNC"],website:"https://bifrost.finance/"},{decimals:[18],displayName:"Edgeware",network:"edgeware",prefix:7,standardAccount:"*25519",symbols:["EDG"],website:"https://edgewa.re"},{decimals:[12],displayName:"Karura",network:"karura",prefix:8,standardAccount:"*25519",symbols:["KAR"],website:"https://karura.network/"},{decimals:[18],displayName:"Laminar Reynolds Canary",network:"reynolds",prefix:9,standardAccount:"*25519",symbols:["REY"],website:"http://laminar.network/"},{decimals:[12],displayName:"Acala",network:"acala",prefix:10,standardAccount:"*25519",symbols:["ACA"],website:"https://acala.network/"},{decimals:[18],displayName:"Laminar",network:"laminar",prefix:11,standardAccount:"*25519",symbols:["LAMI"],website:"http://laminar.network/"},{decimals:[6],displayName:"Polymesh",network:"polymesh",prefix:12,standardAccount:"*25519",symbols:["POLYX"],website:"https://polymath.network/"},{decimals:[12],displayName:"Integritee",network:"integritee",prefix:13,standardAccount:"*25519",symbols:["TEER"],website:"https://integritee.network"},{decimals:[0],displayName:"Totem",network:"totem",prefix:14,standardAccount:"*25519",symbols:["TOTEM"],website:"https://totemaccounting.com"},{decimals:[12],displayName:"Synesthesia",network:"synesthesia",prefix:15,standardAccount:"*25519",symbols:["SYN"],website:"https://synesthesia.network/"},{decimals:[12],displayName:"Kulupu",network:"kulupu",prefix:16,standardAccount:"*25519",symbols:["KLP"],website:"https://kulupu.network/"},{decimals:null,displayName:"Dark Mainnet",network:"dark",prefix:17,standardAccount:"*25519",symbols:null,website:null},{decimals:[9,9],displayName:"Darwinia Network",network:"darwinia",prefix:18,standardAccount:"*25519",symbols:["RING","KTON"],website:"https://darwinia.network/"},{decimals:[12],displayName:"GeekCash",network:"geek",prefix:19,standardAccount:"*25519",symbols:["GEEK"],website:"https://geekcash.org"},{decimals:[12],displayName:"Stafi",network:"stafi",prefix:20,standardAccount:"*25519",symbols:["FIS"],website:"https://stafi.io"},{decimals:[6],displayName:"Dock Testnet",network:"dock-testnet",prefix:21,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:[6],displayName:"Dock Mainnet",network:"dock-mainnet",prefix:22,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:null,displayName:"ShiftNrg",network:"shift",prefix:23,standardAccount:"*25519",symbols:null,website:null},{decimals:[18],displayName:"ZERO",network:"zero",prefix:24,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[18],displayName:"ZERO Alphaville",network:"zero-alphaville",prefix:25,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[10],displayName:"Jupiter",network:"jupiter",prefix:26,standardAccount:"*25519",symbols:["jDOT"],website:"https://jupiter.patract.io"},{decimals:null,displayName:"Subsocial",network:"subsocial",prefix:28,standardAccount:"*25519",symbols:null,website:null},{decimals:[12,12],displayName:"CORD Network",network:"cord",prefix:29,standardAccount:"*25519",symbols:["DHI","WAY"],website:"https://cord.network/"},{decimals:[12],displayName:"Phala Network",network:"phala",prefix:30,standardAccount:"*25519",symbols:["PHA"],website:"https://phala.network"},{decimals:[12],displayName:"Litentry Network",network:"litentry",prefix:31,standardAccount:"*25519",symbols:["LIT"],website:"https://litentry.com/"},{decimals:[9],displayName:"Robonomics",network:"robonomics",prefix:32,standardAccount:"*25519",symbols:["XRT"],website:"https://robonomics.network"},{decimals:null,displayName:"DataHighway",network:"datahighway",prefix:33,standardAccount:"*25519",symbols:null,website:null},{decimals:[12],displayName:"Ares Protocol",network:"ares",prefix:34,standardAccount:"*25519",symbols:["ARES"],website:"https://www.aresprotocol.com/"},{decimals:[15],displayName:"Valiu Liquidity Network",network:"vln",prefix:35,standardAccount:"*25519",symbols:["USDv"],website:"https://valiu.com/"},{decimals:[18],displayName:"Centrifuge Chain",network:"centrifuge",prefix:36,standardAccount:"*25519",symbols:["CFG"],website:"https://centrifuge.io/"},{decimals:[18],displayName:"Nodle Chain",network:"nodle",prefix:37,standardAccount:"*25519",symbols:["NODL"],website:"https://nodle.io/"},{decimals:[18],displayName:"KILT Chain",network:"kilt",prefix:38,standardAccount:"*25519",symbols:["KILT"],website:"https://kilt.io/"},{decimals:[18],displayName:"MathChain mainnet",network:"mathchain",prefix:39,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:[18],displayName:"MathChain testnet",network:"mathchain-testnet",prefix:40,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:null,displayName:"Polimec Chain",network:"poli",prefix:41,standardAccount:"*25519",symbols:null,website:"https://polimec.io/"},{decimals:null,displayName:"Substrate",network:"substrate",prefix:42,standardAccount:"*25519",symbols:null,website:"https://substrate.io/"},{decimals:null,displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",network:"BareSecp256k1",prefix:43,standardAccount:"secp256k1",symbols:null,website:null},{decimals:[8],displayName:"ChainX",network:"chainx",prefix:44,standardAccount:"*25519",symbols:["PCX"],website:"https://chainx.org/"},{decimals:[12,12],displayName:"UniArts Network",network:"uniarts",prefix:45,standardAccount:"*25519",symbols:["UART","UINK"],website:"https://uniarts.me"},{decimals:null,displayName:"This prefix is reserved.",network:"reserved46",prefix:46,standardAccount:null,symbols:null,website:null},{decimals:null,displayName:"This prefix is reserved.",network:"reserved47",prefix:47,standardAccount:null,symbols:null,website:null},{decimals:[12],displayName:"Neatcoin Mainnet",network:"neatcoin",prefix:48,standardAccount:"*25519",symbols:["NEAT"],website:"https://neatcoin.org"},{decimals:[12],displayName:"Picasso",network:"picasso",prefix:49,standardAccount:"*25519",symbols:["PICA"],website:"https://picasso.composable.finance"},{decimals:[12],displayName:"Composable",network:"composable",prefix:50,standardAccount:"*25519",symbols:["LAYR"],website:"https://composable.finance"},{decimals:[9],displayName:"xx network",network:"xxnetwork",prefix:55,standardAccount:"*25519",symbols:["XX"],website:"https://xx.network"},{decimals:[12],displayName:"HydraDX",network:"hydradx",prefix:63,standardAccount:"*25519",symbols:["HDX"],website:"https://hydradx.io"},{decimals:[18],displayName:"AvN Mainnet",network:"aventus",prefix:65,standardAccount:"*25519",symbols:["AVT"],website:"https://aventus.io"},{decimals:[12],displayName:"Crust Network",network:"crust",prefix:66,standardAccount:"*25519",symbols:["CRU"],website:"https://crust.network"},{decimals:[0,9,9,9,9,9,9,9],displayName:"Equilibrium Network",network:"equilibrium",prefix:67,standardAccount:"*25519",symbols:["Unknown","USD","EQ","ETH","BTC","EOS","DOT","CRV"],website:"https://equilibrium.io"},{decimals:[18],displayName:"SORA Network",network:"sora",prefix:69,standardAccount:"*25519",symbols:["XOR"],website:"https://sora.org"},{decimals:[10],displayName:"Zeitgeist",network:"zeitgeist",prefix:73,standardAccount:"*25519",symbols:["ZTG"],website:"https://zeitgeist.pm"},{decimals:[12],displayName:"Manta network",network:"manta",prefix:77,standardAccount:"*25519",symbols:["MA"],website:"https://manta.network"},{decimals:[12],displayName:"Calamari: Manta Canary Network",network:"calamari",prefix:78,standardAccount:"*25519",symbols:["KMA"],website:"https://manta.network"},{decimals:[12],displayName:"Polkadex Mainnet",network:"polkadex",prefix:88,standardAccount:"*25519",symbols:["PDEX"],website:"https://polkadex.trade"},{decimals:[18],displayName:"PolkaSmith Canary Network",network:"polkasmith",prefix:98,standardAccount:"*25519",symbols:["PKS"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"PolkaFoundry Network",network:"polkafoundry",prefix:99,standardAccount:"*25519",symbols:["PKF"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"OriginTrail Parachain",network:"origintrail-parachain",prefix:101,standardAccount:"secp256k1",symbols:["TRAC"],website:"https://origintrail.io"},{decimals:[10],displayName:"Pontem Network",network:"pontem-network",prefix:105,standardAccount:"*25519",symbols:["PONT"],website:"https://pontem.network"},{decimals:[12],displayName:"Heiko",network:"heiko",prefix:110,standardAccount:"*25519",symbols:["HKO"],website:"https://parallel.fi/"},{decimals:null,displayName:"Integritee Incognito",network:"integritee-incognito",prefix:113,standardAccount:"*25519",symbols:null,website:"https://integritee.network"},{decimals:[18],displayName:"Clover Finance",network:"clover",prefix:128,standardAccount:"*25519",symbols:["CLV"],website:"https://clover.finance"},{decimals:[18],displayName:"Altair",network:"altair",prefix:136,standardAccount:"*25519",symbols:["AIR"],website:"https://centrifuge.io/"},{decimals:[12],displayName:"Parallel",network:"parallel",prefix:172,standardAccount:"*25519",symbols:["PARA"],website:"https://parallel.fi/"},{decimals:[18],displayName:"Social Network",network:"social-network",prefix:252,standardAccount:"*25519",symbols:["NET"],website:"https://social.network"},{decimals:[15],displayName:"QUARTZ by UNIQUE",network:"quartz_mainnet",prefix:255,standardAccount:"*25519",symbols:["QTZ"],website:"https://unique.network"},{decimals:[18],displayName:"Pioneer Network by Bit.Country",network:"pioneer_network",prefix:268,standardAccount:"*25519",symbols:["NEER"],website:"https://bit.country"},{decimals:[18],displayName:"Moonbeam",network:"moonbeam",prefix:1284,standardAccount:"secp256k1",symbols:["GLMR"],website:"https://moonbeam.network"},{decimals:[18],displayName:"Moonriver",network:"moonriver",prefix:1285,standardAccount:"secp256k1",symbols:["MOVR"],website:"https://moonbeam.network"},{decimals:[12],displayName:"Kapex",network:"kapex",prefix:2007,standardAccount:"*25519",symbols:["KAPEX"],website:"https://totemaccounting.com"},{decimals:[18],displayName:"Subspace testnet",network:"subspace_testnet",prefix:2254,standardAccount:"*25519",symbols:["tSSC"],website:"https://subspace.network"},{decimals:[18],displayName:"Subspace",network:"subspace",prefix:6094,standardAccount:"*25519",symbols:["SSC"],website:"https://subspace.network"},{decimals:[12],displayName:"Basilisk",network:"basilisk",prefix:10041,standardAccount:"*25519",symbols:["BSX"],website:"https://bsx.fi"},{decimals:[12],displayName:"CESS Testnet",network:"cess-testnet",prefix:10042,standardAccount:"*25519",symbols:["TCESS"],website:"https://cess.cloud"},{decimals:[12],displayName:"CESS",network:"cess",prefix:10043,standardAccount:"*25519",symbols:["CESS"],website:"https://cess.cloud"},{decimals:[18],displayName:"Automata ContextFree",network:"contextfree",prefix:11820,standardAccount:"*25519",symbols:["CTX"],website:"https://ata.network"}].map((function(e){const t=e.network||"",r=t.replace(/_/g,"-").split("-"),n=e;return n.slip44=Yd[t],n.hasLedgerSupport=!!n.slip44,n.genesisHash=Gd[t]||[],n.icon=Zd[t]||"substrate",n.isTestnet=!!Jd[t]||Qd.includes(r[r.length-1]),n.isIgnored=n.isTestnet||!(e.standardAccount&&e.decimals&&e.symbols)&&42!==e.prefix,n})).filter((function(e){return!e.isIgnored&&!!e.network})).sort((function(e,t){const r=Kd.includes(e.prefix),n=Kd.includes(t.prefix);return r===n?0:r?-1:n?1:e.displayName.localeCompare(t.displayName)})),$d=_d.filter((function({genesisHash:e,prefix:t}){return!!e.length||42===t}));X=s("ctT9w");const ef={kusama:[[0,1020],[26669,1021],[38245,1022],[54248,1023],[59659,1024],[67651,1025],[82191,1027],[83238,1028],[101503,1029],[203466,1030],[295787,1031],[461692,1032],[504329,1033],[569327,1038],[587687,1039],[653183,1040],[693488,1042],[901442,1045],[1375086,1050],[1445458,1051],[1472960,1052],[1475648,1053],[1491596,1054],[1574408,1055],[2064961,1058],[2201991,1062],[2671528,2005],[2704202,2007],[2728002,2008],[2832534,2011],[2962294,2012],[324e4,2013],[3274408,2015],[3323565,2019],[3534175,2022],[3860281,2023],[4143129,2024],[4401242,2025],[4841367,2026],[5961600,2027],[6137912,2028],[6561855,2029],[7100891,2030],[7468792,9010],[7668600,9030],[7812476,9040],[8010981,9050],[8073833,9070],[8555825,9080],[8945245,9090],[9611377,9100],[9625129,9111],[9866422,9122]],polkadot:[[0,0],[29231,1],[188836,5],[199405,6],[214264,7],[244358,8],[303079,9],[314201,10],[342400,11],[443963,12],[528470,13],[687751,14],[746085,15],[787923,16],[799302,17],[1205128,18],[1603423,23],[1733218,24],[2005673,25],[2436698,26],[3613564,27],[3899547,28],[4345767,29],[4876134,30],[5661442,9050],[6321619,9080],[6713249,9090],[7217907,9100],[7229126,9110],[7560558,9122]],westend:[[214356,4],[392764,7],[409740,8],[809976,20],[877581,24],[879238,25],[889472,26],[902937,27],[932751,28],[991142,29],[1030162,31],[1119657,32],[1199282,33],[1342534,34],[1392263,35],[1431703,36],[1433369,37],[1490972,41],[2087397,43],[2316688,44],[2549864,45],[3925782,46],[3925843,47],[4207800,48],[4627944,49],[5124076,50],[5478664,900],[5482450,9e3],[5584305,9010],[5784566,9030],[5879822,9031],[5896856,9032],[5897316,9033],[6117927,9050],[6210274,9070],[6379314,9080],[6979141,9090],[7568453,9100],[7766394,9111],[7911691,9120],[7968866,9121],[7982889,9122]]},tf={westend:{genesisHash:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"]}};function rf(e,t){const r=t.filter(((e,r)=>{const n=t[r-1];return 0!==r&&(e[0]<=n[0]||e[1]<=n[1])}));return k(!r.length,(()=>`${e}: Mismatched upgrade ordering: ${Mr(r)}`)),t}var nf=Object.entries(ef).map((function([t,r]){const n=$d.find((e=>e.network===t))||tf[t];return k(n,(()=>`Unable to find info for chain ${t}`)),{genesisHash:ae(n.genesisHash[0]),network:t,versions:rf(t,r).map((([t,r])=>({blockNumber:new(e(X))(t),specVersion:new(e(X))(r)})))}}));const of={Council:"CollectiveOrigin",System:"SystemOrigin",TechnicalCommittee:"CollectiveOrigin",Xcm:"XcmOrigin",XcmPallet:"XcmOrigin",Authority:"AuthorityOrigin",GeneralCouncil:"CollectiveOrigin"};function sf(e=[],t){return e.filter((({minmax:[e,r]})=>(P(e)||x(e)||t>=e)&&(P(r)||x(r)||t<=r))).reduce(((e,{types:t})=>U(e,t)),{})}function af({knownTypes:e},t,r){var n,i,o,s,a,c;const u=t.toString(),d=r.toString();return U({},null===(n=e.typesBundle)||void 0===n||null===(i=n.spec)||void 0===i||null===(o=i[d])||void 0===o?void 0:o.rpc,null===(s=e.typesBundle)||void 0===s||null===(a=s.chain)||void 0===a||null===(c=a[u])||void 0===c?void 0:c.rpc)}var cf={rpc:{},types:U({},{BodyId:{_enum:{Unit:"Null",Named:"Vec<u8>",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null"}},BodyPart:{_enum:{Voice:"Null",Members:"Compact<u32>",Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},InteriorMultiLocation:"Junctions",NetworkId:{_enum:{Any:"Null",Named:"Vec<u8>",Polkadot:"Null",Kusama:"Null"}}},{XcmOrigin:{_enum:{Xcm:"MultiLocation"}},XcmpMessageFormat:{_enum:["ConcatenatedVersionedXcm","ConcatenatedEncodedBlob","Signals"]},XcmAssetId:{_enum:{Concrete:"MultiLocation",Abstract:"Bytes"}},InboundStatus:{_enum:["Ok","Suspended"]},OutboundStatus:{_enum:["Ok","Suspended"]},MultiAssets:"Vec<MultiAsset>"},{FungibilityV0:"FungibilityV1",WildFungibilityV0:"WildFungibilityV1",AssetInstanceV0:{_enum:{Undefined:"Null",Index8:"u8",Index16:"Compact<u16>",Index32:"Compact<u32>",Index64:"Compact<u64>",Index128:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Vec<u8>"}},JunctionV0:{_enum:{Parent:"Null",Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},MultiAssetV0:{_enum:{None:"Null",All:"Null",AllFungible:"Null",AllNonFungible:"Null",AllAbstractFungible:"Vec<u8>",AllAbstractNonFungible:"Vec<u8>",AllConcreteFungible:"MultiLocationV0",AllConcreteNonFungible:"MultiLocationV0",AbstractFungible:{id:"Vec<u8>",instance:"Compact<u128>"},AbstractNonFungible:{class:"Vec<u8>",instance:"AssetInstanceV0"},ConcreteFungible:{id:"MultiLocationV0",amount:"Compact<u128>"},ConcreteNonFungible:{class:"MultiLocationV0",instance:"AssetInstanceV0"}}},MultiLocationV0:{_enum:{Here:"Null",X1:"JunctionV0",X2:"(JunctionV0, JunctionV0)",X3:"(JunctionV0, JunctionV0, JunctionV0)",X4:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X5:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X6:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X7:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X8:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)"}},OriginKindV0:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},ResponseV0:{_enum:{Assets:"Vec<MultiAssetV0>"}},XcmV0:{_enum:{WithdrawAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReserveAssetDeposit:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReceiveTeleportedAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV0"},TransferAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},TransferReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV0",message:"XcmV0"}}},XcmErrorV0:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocation, Xcm)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",RecursionLimitReached:"Null"}},XcmOrderV0:{_enum:{Null:"Null",DepositAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},DepositReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},ExchangeAsset:{give:"Vec<MultiAssetV0>",receive:"Vec<MultiAssetV0>"},InitiateReserveWithdraw:{assets:"Vec<MultiAssetV0>",reserve:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},InitiateTeleport:{assets:"Vec<MultiAsset>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV0",assets:"Vec<MultiAssetV0>"},BuyExecution:{fees:"MultiAsset",weight:"u64",debt:"u64",haltOnError:"bool",xcm:"Vec<XcmV0>"}}}},{AssetInstanceV1:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Bytes"}},FungibilityV1:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV1"}},JunctionV1:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},JunctionsV1:{_enum:{Here:"Null",X1:"JunctionV1",X2:"(JunctionV1, JunctionV1)",X3:"(JunctionV1, JunctionV1, JunctionV1)",X4:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X5:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X6:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X7:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X8:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)"}},MultiAssetsV1:"Vec<MultiAssetV1>",MultiAssetV1:{id:"XcmAssetId",fungibility:"FungibilityV1"},MultiAssetFilterV1:{_enum:{Definite:"MultiAssetsV1",Wild:"WildMultiAssetV1"}},MultiLocationV1:{parents:"u8",interior:"JunctionsV1"},OriginKindV1:"OriginKindV0",ResponseV1:{_enum:{Assets:"MultiAssetsV1"}},WildFungibilityV1:{_enum:["Fungible","NonFungible"]},WildMultiAssetV1:{_enum:{All:"Null",AllOf:{id:"XcmAssetId",fungibility:"WildFungibilityV1"}}},XcmV1:{_enum:{WithdrawAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReserveAssetDeposit:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReceiveTeleportedAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV1"},TransferAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1"},TransferReserveAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV1",message:"XcmV1"}}},XcmErrorV1:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocationV1, XcmV1)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null"}},XcmOrderV1:{_enum:{Noop:"Null",DepositAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",beneficiary:"MultiLocationV1"},DepositReserveAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},ExchangeAsset:{give:"MultiAssetFilterV1",receive:"MultiAssetsV1"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV1",reserve:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},InitiateTeleport:{assets:"MultiAssetFilterV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV1",assets:"MultiAssetFilterV1"},BuyExecution:{fees:"MultiAssetV1",weight:"u64",debt:"u64",haltOnError:"bool",instructions:"Vec<XcmV1>"}}}},{AssetInstanceV2:"AssetInstanceV1",FungibilityV2:"FungibilityV1",JunctionV2:"JunctionV1",JunctionsV2:"JunctionsV1",MultiAssetsV2:"MultiAssetsV1",MultiAssetV2:"MultiAssetV1",MultiAssetFilterV2:"MultiAssetFilterV1",MultiLocationV2:"MultiLocationV1",OriginKindV2:"OriginKindV1",WildFungibilityV2:"WildFungibilityV1",ResponseV2:{_enum:{Null:"Null",Assets:"MultiAssetsV2",ExecutionResult:"ResponseV2Result"}},ResponseV2Error:"(u32, XcmErrorV2)",ResponseV2Result:"Result<Null, ResponseV2Error>",WeightLimitV2:{_enum:{Unlimited:"Null",Limited:"Compact<u64>"}},InstructionV2:{_enum:{WithdrawAsset:"MultiAssetsV2",ReserveAssetDeposited:"MultiAssetsV2",ReceiveTeleportedAsset:"MultiAssetsV2",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV2",maxWeight:"Compact<u64>"},TransferAsset:{assets:"MultiAssetsV2",beneficiary:"MultiLocationV2"},TransferReserveAsset:{assets:"MultiAssetsV2",dest:"MultiLocationV2",xcm:"XcmV2"},Transact:{originType:"OriginKindV2",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocation",ReportError:{queryId:"Compact<u64>",dest:"MultiLocationV2",maxResponseWeight:"Compact<u64>"},DepositAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",beneficiary:"MultiLocationV2"},DepositReserveAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",dest:"MultiLocationV2",xcm:"XcmV2"},ExchangeAsset:{give:"MultiAssetFilterV2",receive:"MultiAssetsV2"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV2",reserve:"MultiLocationV2",xcm:"XcmV2"},InitiateTeleport:{assets:"MultiAssetFilterV2",dest:"MultiLocationV2",xcm:"XcmV2"},QueryHolding:{query_id:"Compact<u64>",dest:"MultiLocationV2",assets:"MultiAssetFilterV2",maxResponse_Weight:"Compact<u64>"},BuyExecution:{fees:"MultiAssetV2",weightLimit:"WeightLimitV2"},RefundSurplus:"Null",SetErrorHandler:"XcmV2",SetAppendix:"XcmV2",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV2",ticket:"MultiLocationV2"},Trap:"u64"}},WildMultiAssetV2:"WildMultiAssetV1",XcmV2:"Vec<InstructionV2>",XcmErrorV2:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",MultiLocationFull:"Null",MultiLocationNotInvertible:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null",Transport:"Null",Unroutable:"Null",UnknownWeightRequired:"Null",Trap:"u64",UnknownClaim:"Null",InvalidLocation:"Null"}},XcmOrderV2:"XcmOrderV1"},Nd("V2"),{DoubleEncodedCall:{encoded:"Vec<u8>"},XcmOriginKind:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},Outcome:{_enum:{Complete:"Weight",Incomplete:"(Weight, XcmErrorV0)",Error:"XcmErrorV0"}},QueryId:"u64",QueryStatus:{_enum:{Pending:{responder:"VersionedMultiLocation",maybeNotify:"Option<(u8, u8)>",timeout:"BlockNumber"},Ready:{response:"VersionedResponse",at:"BlockNumber"}}},QueueConfigData:{suspendThreshold:"u32",dropThreshold:"u32",resumeThreshold:"u32",thresholdWeight:"Weight",weightRestrictDecay:"Weight"},VersionMigrationStage:{_enum:{MigrateSupportedVersion:"Null",MigrateVersionNotifiers:"Null",NotifyCurrentTargets:"Option<Bytes>",MigrateAndNotifyOldTargets:"Null"}},VersionedMultiAsset:{_enum:{V0:"MultiAssetV0",V1:"MultiAssetV1",V2:"MultiAssetV2"}},VersionedMultiAssets:{_enum:{V0:"Vec<MultiAssetV0>",V1:"MultiAssetsV1",V2:"MultiAssetsV2"}},VersionedMultiLocation:{_enum:{V0:"MultiLocationV0",V1:"MultiLocationV1",V2:"MultiLocationV2"}},VersionedResponse:{V0:"ResponseV0",V1:"ResponseV1",V2:"ResponseV2"},VersionedXcm:{_enum:{V0:"XcmV0",V1:"XcmV1",V2:"XcmV2"}},XcmVersion:"u32"})};const uf={types:"Vec<Si0Type>",spec:"ContractContractSpec"},df={source:"ContractProjectSource",contract:"ContractProjectContract"};var ff={rpc:{},types:U({},{ContractCryptoHasher:{_enum:["Blake2x256","Sha2x256","Keccak256"]},ContractDiscriminant:"u32",ContractLayoutArray:{offset:"ContractLayoutKey",len:"u32",cellsPerElem:"u64",layout:"ContractStorageLayout"},ContractLayoutCell:{key:"ContractLayoutKey",ty:"SiLookupTypeId"},ContractLayoutEnum:{dispatchKey:"ContractLayoutKey",variants:"BTreeMap<ContractDiscriminant, ContractLayoutStruct>"},ContractLayoutHash:{offset:"ContractLayoutKey",strategy:"ContractLayoutHashingStrategy",layout:"ContractStorageLayout"},ContractLayoutHashingStrategy:{hasher:"ContractCryptoHasher",postfix:"Vec<u8>",prefix:"Vec<u8>"},ContractLayoutKey:"[u8; 32]",ContractLayoutStruct:{fields:"Vec<ContractLayoutStructField>"},ContractLayoutStructField:{layout:"ContractStorageLayout",name:"Text"},ContractStorageLayout:{_enum:{Cell:"ContractLayoutCell",Hash:"ContractLayoutHash",Array:"ContractLayoutArray",Struct:"ContractLayoutStruct",Enum:"ContractLayoutEnum"}}},{ContractConstructorSpec:{name:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpec>",docs:"Vec<Text>"},ContractContractSpec:{constructors:"Vec<ContractConstructorSpec>",messages:"Vec<ContractMessageSpec>",events:"Vec<ContractEventSpec>",docs:"Vec<Text>"},ContractDisplayName:"SiPath",ContractEventParamSpec:{name:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventSpec:{name:"Text",args:"Vec<ContractEventParamSpec>",docs:"Vec<Text>"},ContractMessageParamSpec:{name:"Text",type:"ContractTypeSpec"},ContractMessageSpec:{name:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpec>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractSelector:"[u8; 4]",ContractTypeSpec:{type:"SiLookupTypeId",displayName:"ContractDisplayName"}},{ContractProjectInfo:df,ContractMetadataV0:uf,ContractMetadataV1:{types:"Vec<PortableType>",spec:"ContractContractSpec"},ContractMetadata:{_enum:{V0:"ContractMetadataV0",V1:"ContractMetadataV1"}},ContractMetadataLatest:"ContractMetadataV1",ContractProjectV0:U({metadataVersion:"Text"},df,uf),ContractProject:"(ContractProjectInfo, ContractMetadata)",ContractProjectContract:{_alias:{docs:"documentation"},name:"Text",version:"Text",authors:"Vec<Text>",description:"Option<Text>",docs:"Option<Text>",repository:"Option<Text>",homepage:"Option<Text>",license:"Option<Text>"},ContractProjectSource:{_alias:{wasmHash:"hash"},wasmHash:"[u8; 32]",language:"Text",compiler:"Text",wasm:"Raw"}})};var lf={rpc:U({},{listening:{aliasSection:"net",description:"Returns true if client is actively listening for network connections. Otherwise false.",params:[],type:"bool"},peerCount:{aliasSection:"net",description:"Returns number of peers connected to node.",params:[],type:"String"},version:{aliasSection:"net",description:"Returns protocol version.",params:[],type:"String"}},{clientVersion:{aliasSection:"web3",description:"Returns current client version.",params:[],type:"String"},sha3:{aliasSection:"web3",description:"Returns sha3 of the given data",params:[{name:"data",type:"Bytes"}],type:"H256"}},{accounts:{description:"Returns accounts list.",params:[],type:"Vec<H160>"},blockNumber:{description:"Returns the blockNumber",params:[],type:"U256"},call:{description:"Call contract, returning the output data.",params:[{name:"request",type:"EthCallRequest"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},chainId:{description:"Returns the chain ID used for transaction signing at the current best block. None is returned if not available.",params:[],type:"U64"},coinbase:{description:"Returns block author.",params:[],type:"H160"},estimateGas:{description:"Estimate gas needed for execution of given contract.",params:[{name:"request",type:"EthCallRequest"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},gasPrice:{description:"Returns current gas price.",params:[],type:"U256"},getBalance:{description:"Returns balance of the given account.",params:[{name:"address",type:"H160"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getBlockByHash:{description:"Returns block with given hash.",params:[{name:"hash",type:"H256"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockByNumber:{description:"Returns block with given number.",params:[{name:"block",type:"BlockNumber"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockTransactionCountByHash:{description:"Returns the number of transactions in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getBlockTransactionCountByNumber:{description:"Returns the number of transactions in a block with given block number.",params:[{name:"block",type:"BlockNumber"}],type:"U256"},getCode:{description:"Returns the code at given address at given time (block number).",params:[{name:"address",type:"H160"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},getFilterChanges:{description:"Returns filter changes since last poll.",params:[{name:"index",type:"U256"}],type:"EthFilterChanges"},getFilterLogs:{description:"Returns all logs matching given filter (in a range 'from' - 'to').",params:[{name:"index",type:"U256"}],type:"Vec<EthLog>"},getLogs:{description:"Returns logs matching given filter object.",params:[{name:"filter",type:"EthFilter"}],type:"Vec<EthLog>"},getProof:{description:"Returns proof for account and storage.",params:[{name:"address",type:"H160"},{name:"storageKeys",type:"Vec<H256>"},{name:"number",type:"BlockNumber"}],type:"EthAccount"},getStorageAt:{description:"Returns content of the storage at given address.",params:[{name:"address",type:"H160"},{name:"index",type:"U256"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"H256"},getTransactionByBlockHashAndIndex:{description:"Returns transaction at given block hash and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByBlockNumberAndIndex:{description:"Returns transaction by given block number and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByHash:{description:"Get transaction by its hash.",params:[{name:"hash",type:"H256"}],type:"EthTransaction"},getTransactionCount:{description:"Returns the number of transactions sent from given address at given time (block number).",params:[{name:"hash",type:"H256"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getTransactionReceipt:{description:"Returns transaction receipt by transaction hash.",params:[{name:"hash",type:"H256"}],type:"EthReceipt"},getUncleByBlockHashAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleByBlockNumberAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleCountByBlockHash:{description:"Returns the number of uncles in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getUncleCountByBlockNumber:{description:"Returns the number of uncles in a block with given block number.",params:[{name:"number",type:"BlockNumber"}],type:"U256"},getWork:{description:"Returns the hash of the current block, the seedHash, and the boundary condition to be met.",params:[],type:"EthWork"},hashrate:{description:"Returns the number of hashes per second that the node is mining with.",params:[],type:"U256"},mining:{description:"Returns true if client is actively mining new blocks.",params:[],type:"bool"},newBlockFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},newFilter:{description:"Returns id of new filter.",params:[{name:"filter",type:"EthFilter"}],type:"U256"},newPendingTransactionFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},protocolVersion:{description:"Returns protocol version encoded as a string (quotes are necessary).",params:[],type:"u64"},sendRawTransaction:{description:"Sends signed transaction, returning its hash.",params:[{name:"bytes",type:"Bytes"}],type:"H256"},sendTransaction:{description:"Sends transaction; will block waiting for signer to return the transaction hash",params:[{name:"tx",type:"EthTransactionRequest"}],type:"H256"},submitHashrate:{description:"Used for submitting mining hashrate.",params:[{name:"index",type:"U256"},{name:"hash",type:"H256"}],type:"bool"},submitWork:{description:"Used for submitting a proof-of-work solution.",params:[{name:"nonce",type:"H64"},{name:"headerHash",type:"H256"},{name:"mixDigest",type:"H256"}],type:"bool"},subscribe:{description:"Subscribe to Eth subscription.",params:[{name:"kind",type:"EthSubKind"},{isOptional:!0,name:"params",type:"EthSubParams"}],pubsub:["subscription","subscribe","unsubscribe"],type:"Null"},syncing:{description:"Returns an object with data about the sync status or false.",params:[],type:"EthSyncStatus"},uninstallFilter:{description:"Uninstalls filter.",params:[{name:"index",type:"U256"}],type:"bool"}}),types:U({},{BlockV0:{header:"EthHeader",transactions:"Vec<TransactionV0>",ommers:"Vec<EthHeader>"},LegacyTransaction:{nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",signature:"EthTransactionSignature"},TransactionV0:"LegacyTransaction"},{BlockV1:{header:"EthHeader",transactions:"Vec<TransactionV1>",ommers:"Vec<EthHeader>"},EIP2930Transaction:{chainId:"u64",nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV1:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction"}}},{BlockV2:{header:"EthHeader",transactions:"Vec<TransactionV2>",ommers:"Vec<EthHeader>"},EIP1559Transaction:{chainId:"u64",nonce:"U256",maxPriorityFeePerGas:"U256",maxFeePerGas:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV2:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction",EIP1559:"EIP1559Transaction"}}},{EthereumAccountId:"GenericEthereumAccountId",EthereumAddress:"GenericEthereumAccountId",EthereumLookupSource:"GenericEthereumLookupSource",EthereumSignature:"[u8; 65]",EthAccessListItem:{address:"EthAddress",slots:"Vec<H256>"},EthAccessList:"Vec<EthAccessListItem>",EthAccount:{address:"EthAddress",balance:"U256",nonce:"U256",codeHash:"H256",storageHash:"H256",accountProof:"Vec<Bytes>",storageProof:"Vec<EthStorageProof>"},EthAddress:"H160",EthBlock:{header:"EthHeader",transactions:"Vec<EthTransaction>",ommers:"Vec<EthHeader>"},EthHeader:{parentHash:"H256",ommersHash:"H256",beneficiary:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",logsBloom:"EthBloom",difficulty:"U256",number:"U256",gasLimit:"U256",gasUsed:"U256",timestamp:"u64",extraData:"Bytes",mixMash:"H256",nonce:"H64"},EthRichBlock:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",totalDifficulty:"Option<U256>",sealFields:"Vec<Bytes>",uncles:"Vec<H256>",transactions:"Vec<EthTransaction>",blockSize:"Option<U256>"},EthBloom:"H2048",EthCallRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthFilter:{fromBlock:"Option<BlockNumber>",toBlock:"Option<BlockNumber>",blockHash:"Option<H256>",address:"Option<EthFilterAddress>",topics:"Option<EthFilterTopic>"},EthFilterAddress:{_enum:{Single:"EthAddress",Multiple:"Vec<EthAddress>",Null:"Null"}},EthFilterChanges:{_enum:{Logs:"Vec<EthLog>",Hashes:"Vec<H256>",Empty:"Null"}},EthFilterTopic:{_enum:{Single:"EthFilterTopicInner",Multiple:"Vec<EthFilterTopicInner>",Null:"Null"}},EthFilterTopicEntry:"Option<H256>",EthFilterTopicInner:{_enum:{Single:"EthFilterTopicEntry",Multiple:"Vec<EthFilterTopicEntry>",Null:"Null"}},EthRichHeader:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",sealFields:"Vec<Bytes>",blockSize:"Option<U256>"},EthLog:{address:"EthAddress",topics:"Vec<H256>",data:"Bytes",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionHash:"Option<H256>",transactionIndex:"Option<U256>",logIndex:"Option<U256>",transactionLogIndex:"Option<U256>",removed:"bool"},EthReceipt:{transactionHash:"Option<H256>",transactionIndex:"Option<U256>",blockHash:"Option<H256>",from:"Option<EthAddress>",to:"Option<EthAddress>",blockNumber:"Option<U256>",cumulativeGasUsed:"U256",gasUsed:"Option<U256>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",root:"Option<H256>",logsBloom:"EthBloom",statusCode:"Option<U64>"},EthStorageProof:{key:"U256",value:"U256",proof:"Vec<Bytes>"},EthSubKind:{_enum:["newHeads","logs","newPendingTransactions","syncing"]},EthSubParams:{_enum:{None:"Null",Logs:"EthFilter"}},EthSubResult:{_enum:{Header:"EthRichHeader",Log:"EthLog",TransactionHash:"H256",SyncState:"EthSyncStatus"}},EthSyncInfo:{startingBlock:"U256",currentBlock:"U256",highestBlock:"U256",warpChunksAmount:"Option<U256>",warpChunksProcessed:"Option<U256>"},EthSyncStatus:{_enum:{Info:"EthSyncInfo",None:"Null"}},EthTransaction:"LegacyTransaction",EthTransactionSignature:{v:"u64",r:"H256",s:"H256"},EthTransactionAction:{_enum:{Call:"H160",Create:"Null"}},EthTransactionCondition:{_enum:{block:"u64",time:"u64"}},EthTransactionRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthTransactionStatus:{transactionHash:"H256",transactionIndex:"u32",from:"EthAddress",to:"Option<EthAddress>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",logsBloom:"EthBloom"},EthWork:{powHash:"H256",seedHash:"H256",target:"H256",number:"Option<u64>"}})},hf={rpc:{methods:{description:"Retrieves the list of RPC methods that are exposed by the node",params:[],type:"RpcMethods"}},types:{RpcMethods:{version:"u32",methods:"Vec<Text>"}}},pf={rpc:{hasKey:{description:"Returns true if the keystore has private keys for the given public key and key type.",params:[{name:"publicKey",type:"Bytes"},{name:"keyType",type:"Text"}],type:"bool"},hasSessionKeys:{description:"Returns true if the keystore has private keys for the given session public keys.",params:[{name:"sessionKeys",type:"Bytes"}],type:"bool"},removeExtrinsic:{description:"Remove given extrinsic from the pool and temporarily ban it to prevent reimporting",params:[{name:"bytesOrHash",type:"Vec<ExtrinsicOrHash>"}],type:"Vec<Hash>"},insertKey:{description:"Insert a key into the keystore.",params:[{name:"keyType",type:"Text"},{name:"suri",type:"Text"},{name:"publicKey",type:"Bytes"}],type:"Bytes"},rotateKeys:{description:"Generate new session keys and returns the corresponding public keys",params:[],type:"Bytes"},pendingExtrinsics:{description:"Returns all pending extrinsics, potentially grouped by sender",params:[],type:"Vec<Extrinsic>"},submitExtrinsic:{isSigned:!0,description:"Submit a fully formatted extrinsic for block inclusion",params:[{name:"extrinsic",type:"Extrinsic"}],type:"Hash"},submitAndWatchExtrinsic:{description:"Submit and subscribe to watch an extrinsic until unsubscribed",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],pubsub:["extrinsicUpdate","submitAndWatchExtrinsic","unwatchExtrinsic"],type:"ExtrinsicStatus"}},types:{ExtrinsicOrHash:{_enum:{Hash:"Hash",Extrinsic:"Bytes"}},ExtrinsicStatus:{_enum:{Future:"Null",Ready:"Null",Broadcast:"Vec<Text>",InBlock:"Hash",Retracted:"Hash",FinalityTimeout:"Hash",Finalized:"Hash",Usurped:"Hash",Dropped:"Null",Invalid:"Null"}}}},mf={rpc:{getHeader:{alias:["chain_getHead"],description:"Retrieves the header for a specific block",params:[{name:"hash",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Header"},getBlock:{description:"Get header and body of a relay chain block",params:[{name:"hash",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"SignedBlock"},getBlockHash:{description:"Get the block hash for a specific block",params:[{name:"blockNumber",type:"BlockNumber",isOptional:!0}],type:"BlockHash"},getFinalizedHead:{alias:["chain_getFinalisedHead"],description:"Get hash of the last finalized block in the canon chain",params:[],type:"BlockHash"},subscribeNewHeads:{alias:["chain_unsubscribeNewHeads","subscribe_newHead","unsubscribe_newHead"],description:"Retrieves the best header via subscription",params:[],pubsub:["newHead","subscribeNewHead","unsubscribeNewHead"],type:"Header"},subscribeFinalizedHeads:{alias:["chain_subscribeFinalisedHeads","chain_unsubscribeFinalisedHeads"],description:"Retrieves the best finalized header via subscription",params:[],pubsub:["finalizedHead","subscribeFinalizedHeads","unsubscribeFinalizedHeads"],type:"Header"},subscribeAllHeads:{description:"Retrieves the newest header via subscription",params:[],pubsub:["allHead","subscribeAllHeads","unsubscribeAllHeads"],type:"Header"}},types:{BlockHash:"Hash"}},yf={rpc:{getKeys:{description:"Returns the keys with prefix from a child storage, leave empty to get all the keys",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["childstate_getKeysPagedAt"],description:"Returns the keys with prefix from a child storage with pagination support",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"count",type:"u32"},{name:"startKey",type:"StorageKey",isOptional:!0},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getStorage:{description:"Returns a child storage entry at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Option<StorageData>"},getStorageEntries:{description:"Returns child storage entries for multiple keys at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Vec<Option<StorageData>>"},getStorageHash:{description:"Returns the hash of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Option<Hash>"},getStorageSize:{description:"Returns the size of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Option<u64>"}},types:{PrefixedStorageKey:"StorageKey"}},bf={rpc:{localStorageSet:{description:"Set offchain local storage under given key and prefix",params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"},{name:"value",type:"Bytes"}],type:"Null"},localStorageGet:{description:"Get offchain local storage under given key and prefix",params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"}},types:{StorageKind:{_enum:{PERSISTENT:1,LOCAL:2}}}};const gf=[{name:"extrinsic",type:"Bytes"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}];var vf={rpc:{queryInfo:{description:"Retrieves the fee information for an encoded extrinsic",params:gf,type:"RuntimeDispatchInfo"},queryFeeDetails:{description:"Query the detailed fee of a given encoded extrinsic",params:gf,type:"FeeDetails"}},types:{FeeDetails:{inclusionFee:"Option<InclusionFee>"},InclusionFee:{baseFee:"Balance",lenFee:"Balance",adjustedWeightFee:"Balance"},RuntimeDispatchInfo:{weight:"Weight",class:"DispatchClass",partialFee:"Balance"}}},wf={rpc:{call:{alias:["state_callAt"],description:"Perform a call to a builtin on the chain",params:[{name:"method",type:"Text"},{name:"data",type:"Bytes"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Bytes"},getKeys:{description:"Retrieves the keys with a certain prefix",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getPairs:{description:"Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)",params:[{name:"prefix",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<KeyValue>"},getKeysPaged:{alias:["state_getKeysPagedAt"],description:"Returns the keys with prefix with pagination support.",params:[{name:"key",type:"StorageKey"},{name:"count",type:"u32"},{name:"startKey",type:"StorageKey",isOptional:!0},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getStorage:{alias:["state_getStorageAt"],description:"Retrieves the storage for a key",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"StorageData"},getStorageHash:{alias:["state_getStorageHashAt"],description:"Retrieves the storage hash",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Hash"},getStorageSize:{alias:["state_getStorageSizeAt"],description:"Retrieves the storage size",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"u64"},getChildKeys:{description:"Retrieves the keys with prefix of a specific child storage",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getChildStorage:{description:"Retrieves the child storage for a key",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"StorageData"},getChildStorageHash:{description:"Retrieves the child storage hash",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Hash"},getChildStorageSize:{description:"Retrieves the child storage size",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"u64"},getMetadata:{description:"Returns the runtime metadata",params:[{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Metadata"},getRuntimeVersion:{alias:["chain_getRuntimeVersion"],description:"Get the runtime version",params:[{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"RuntimeVersion"},queryStorage:{description:"Query historical storage entries (by key) starting from a start block",params:[{name:"keys",type:"Vec<StorageKey>"},{name:"fromBlock",type:"Hash"},{name:"toBlock",type:"BlockHash",isOptional:!0}],type:"Vec<StorageChangeSet>"},queryStorageAt:{description:"Query storage entries (by key) starting at block hash given as the second parameter",params:[{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageChangeSet>"},getChildReadProof:{description:"Returns proof of storage for child key entries at a specific block state.",params:[{name:"childStorageKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ReadProof"},getReadProof:{description:"Returns proof of storage entries at a specific block state",params:[{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ReadProof"},subscribeRuntimeVersion:{alias:["chain_subscribeRuntimeVersion","chain_unsubscribeRuntimeVersion"],description:"Retrieves the runtime version via subscription",params:[],pubsub:["runtimeVersion","subscribeRuntimeVersion","unsubscribeRuntimeVersion"],type:"RuntimeVersion"},subscribeStorage:{description:"Subscribes to storage changes for the provided keys",params:[{name:"keys",type:"Vec<StorageKey>",isOptional:!0}],pubsub:["storage","subscribeStorage","unsubscribeStorage"],type:"StorageChangeSet"},traceBlock:{description:"Provides a way to trace the re-execution of a single block",params:[{name:"block",type:"Hash"},{name:"targets",type:"Option<Text>"},{name:"storageKeys",type:"Option<Text>"}],type:"TraceBlockResponse"}},types:{ApiId:"[u8; 8]",BlockTrace:{blockHash:"Text",parentHash:"Text",tracingTargets:"Text",storageKeys:"Text",spans:"Vec<BlockTraceSpan>",events:"Vec<BlockTraceEvent>"},BlockTraceEvent:{target:"Text",data:"BlockTraceEventData",parentId:"Option<u64>"},BlockTraceEventData:{stringValues:"HashMap<Text, Text>"},BlockTraceSpan:{id:"u64",parentId:"Option<u64>",name:"Text",target:"Text",wasm:"bool"},KeyValueOption:"(StorageKey, Option<StorageData>)",ReadProof:{at:"Hash",proof:"Vec<Bytes>"},RuntimeVersionApi:"(ApiId, u32)",RuntimeVersion:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32"},RuntimeVersionPartial:{specName:"Text",specVersion:"u32"},SpecVersion:"u32",StorageChangeSet:{block:"Hash",changes:"Vec<KeyValueOption>"},TraceBlockResponse:{_enum:{TraceError:"TraceError",BlockTrace:"BlockTrace"}},TraceError:{error:"Text"}}};n(xu,Pu);const xf={};Object.keys(xu).forEach((e=>Object.entries(xu[e].rpc||{}).forEach((([t,r])=>{const n=r.aliasSection||e;xf[n]||(xf[n]={}),xf[n][t]=U({},r,{isSubscription:!!r.pubsub,jsonrpc:`${n}_${t}`,method:t,section:n})}))));var Pf=xf;function kf(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var Tf=0;function Sf(e){return"__private_"+Tf+++"_"+e}var Mf="node_modules/@polkadot/util-crypto";N({name:"@polkadot/util-crypto",version:"7.9.2"},Mf,[{name:"@polkadot/networks",version:"7.9.2"},g,{name:"@polkadot/x-randomvalues",version:"7.9.2"}]);var Af="node_modules/@polkadot/util-crypto/node_modules/@polkadot/wasm-crypto";N({name:"@polkadot/wasm-crypto",version:"4.4.1"},Af,[{name:"@polkadot/wasm-crypto-asmjs",version:"4.4.1"},{name:"@polkadot/wasm-crypto-wasm",version:"4.4.1"}]);const Nf="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Of=[],Hf=[];for(let e=0;e<Nf.length;++e)Of[e]=Nf[e],Hf[Nf.charCodeAt(e)]=e;Hf["-".charCodeAt(0)]=62,Hf["_".charCodeAt(0)]=63;var If;const Vf=(If={bytes:"",sizeCompressed:153363,sizeUncompressed:301802}).bytes,Ef=If.sizeUncompressed,zf=Uint8Array,Cf=Uint16Array,jf=Uint32Array,Lf=new zf([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Rf=new zf([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Bf=new zf([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Df=(e,t)=>{const r=new Cf(31);for(let n=0;n<31;++n)r[n]=t+=1<<e[n-1];const n=new jf(r[30]);for(let e=1;e<30;++e)for(let t=r[e];t<r[e+1];++t)n[t]=t-r[e]<<5|e;return[r,n]},[Xf,qf]=Df(Rf,2);Xf[28]=258,qf[258]=28;const[Wf]=Df(Bf,0),Ff=new Cf(32768);for(let e=0;e<32768;++e){let t=(43690&e)>>>1|(21845&e)<<1;t=(52428&t)>>>2|(13107&t)<<2,t=(61680&t)>>>4|(3855&t)<<4,Ff[e]=((65280&t)>>>8|(255&t)<<8)>>>1}const Uf=(e,t,r)=>{const n=e.length;let i=0;const o=new Cf(t);for(;i<n;++i)++o[e[i]-1];const s=new Cf(t);for(i=0;i<t;++i)s[i]=s[i-1]+o[i-1]<<1;let a;if(r){a=new Cf(1<<t);const r=15-t;for(i=0;i<n;++i)if(e[i]){const n=i<<4|e[i],o=t-e[i];let c=s[e[i]-1]++<<o;for(const e=c|(1<<o)-1;c<=e;++c)a[Ff[c]>>>r]=n}}else for(a=new Cf(n),i=0;i<n;++i)a[i]=Ff[s[e[i]-1]++]>>>15-e[i];return a},Gf=new zf(288);for(let e=0;e<144;++e)Gf[e]=8;for(let e=144;e<256;++e)Gf[e]=9;for(let e=256;e<280;++e)Gf[e]=7;for(let e=280;e<288;++e)Gf[e]=8;const Zf=new zf(32);for(let e=0;e<32;++e)Zf[e]=5;const Yf=Uf(Gf,9,1),Jf=Uf(Zf,5,1),Kf=(e,t,r)=>{const n=t>>>3;return(e[n]|e[n+1]<<8)>>>(7&t)&r},Qf=(e,t)=>{const r=t>>>3;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>>(7&t)},_f=e=>{let t=e[0];for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r]);return t},$f=(e,t,r)=>{const n=!r||r.i;r||(r={});const i=e.length,o=!t||!n;t||(t=new zf(3*i));const s=e=>{let r=t.length;if(e>r){const n=new zf(Math.max(r<<1,e));n.set(t),t=n}};let a=r.f||0,c=r.p||0,u=r.b||0,d=r.l,f=r.d,l=r.m,h=r.n;if(a&&!d)return t;const p=i<<3;do{if(!d){r.f=a=Kf(e,c,1);const y=Kf(e,c+1,3);if(c+=3,!y){const a=((m=c)>>>3)+(7&m&&1)+4,d=e[a-4]|e[a-3]<<8,f=a+d;if(f>i){if(n)throw"unexpected EOF";break}o&&s(u+d),t.set(e.subarray(a,f),u),r.b=u+=d,r.p=c=f<<3;continue}if(1==y)d=Yf,f=Jf,l=9,h=5;else{if(2!=y)throw"invalid block type";{const t=Kf(e,c,31)+257,r=Kf(e,c+10,15)+4,i=t+Kf(e,c+5,31)+1;c+=14;const o=new zf(i),s=new zf(19);for(let t=0;t<r;++t)s[Lf[t]]=Kf(e,c+3*t,7);c+=3*r;const a=_f(s),u=(1<<a)-1;if(!n&&c+i*(a+7)>p)break;const m=Uf(s,a,1);for(let t=0;t<i;){const r=m[Kf(e,c,u)];c+=15&r;const n=r>>>4;if(n<16)o[t++]=n;else{let r=0,i=0;for(16==n?(i=3+Kf(e,c,3),c+=2,r=o[t-1]):17==n?(i=3+Kf(e,c,7),c+=3):18==n&&(i=11+Kf(e,c,127),c+=7);i--;)o[t++]=r}}const y=o.subarray(0,t),b=o.subarray(t);l=_f(y),h=_f(b),d=Uf(y,l,1),f=Uf(b,h,1)}}if(c>p)throw"unexpected EOF"}o&&s(u+131072);const y=(1<<l)-1,b=(1<<h)-1,g=l+h+18;for(;n||c+g<p;){const r=d[Qf(e,c)&y],n=r>>>4;if(c+=15&r,c>p)throw"unexpected EOF";if(!r)throw"invalid length/literal";if(n<256)t[u++]=n;else{if(256==n){d=void 0;break}{let r=n-254;if(n>264){const t=n-257,i=Rf[t];r=Kf(e,c,(1<<i)-1)+Xf[t],c+=i}const i=f[Qf(e,c)&b],a=i>>>4;if(!i)throw"invalid distance";c+=15&i;let d=Wf[a];if(a>3){const t=Bf[a];d+=Qf(e,c)&(1<<t)-1,c+=t}if(c>p)throw"unexpected EOF";o&&s(u+131072);const l=u+r;for(;u<l;u+=4)t[u]=t[u-d],t[u+1]=t[u+1-d],t[u+2]=t[u+2-d],t[u+3]=t[u+3-d];u=l}}}r.l=d,r.p=c,r.b=u,d&&(a=1,r.m=l,r.d=f,r.n=h)}while(!a);var m;return u==t.length?t:((e,t,r)=>{(null==t||t<0)&&(t=0),(null==r||r>e.length)&&(r=e.length);const n=new(e instanceof Cf?Cf:e instanceof jf?jf:zf)(r-t);return n.set(e.subarray(t,r)),n})(t,0,u)};const el=function(e,t){return $f(((e=>{if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"})(e),e.subarray(2,-4)),t)}(function(e){const[t,r]=function(e){const t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");const r=e.indexOf("=");return-1===r?[t,0]:[r,4-r%4]}(e),n=new Uint8Array(3*(t+r)/4-r);let i,o,s=0;const a=r>0?t-4:t;for(i=0;i<a;i+=4)o=Hf[e.charCodeAt(i)]<<18|Hf[e.charCodeAt(i+1)]<<12|Hf[e.charCodeAt(i+2)]<<6|Hf[e.charCodeAt(i+3)],n[s++]=o>>16&255,n[s++]=o>>8&255,n[s++]=255&o;return 2===r?(o=Hf[e.charCodeAt(i)]<<2|Hf[e.charCodeAt(i+1)]>>4,n[s++]=255&o):1===r&&(o=Hf[e.charCodeAt(i)]<<10|Hf[e.charCodeAt(i+1)]<<4|Hf[e.charCodeAt(i+2)]>>2,n[s++]=o>>8&255,n[s++]=255&o),n}(Vf),new Uint8Array(Ef));let tl=null,rl=null,nl=null;function il(e){return(...t)=>(k(tl,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces."),e(tl)(...t))}function ol(){return null!==rl&&rl.buffer===tl.memory.buffer||(rl=new Int32Array(tl.memory.buffer)),rl}function sl(){return null!==nl&&nl.buffer===tl.memory.buffer||(nl=new Uint8Array(tl.memory.buffer)),nl}function al(e,t){return sl().subarray(e/1,e/1+t)}function cl(e){const t=tl.__wbindgen_malloc(1*e.length);return sl().set(e,t/1),[t,e.length]}function ul(e){return cl(Vt(e))}function dl(){const e=ol()[2],t=ol()[3],r=al(e,t).slice();return tl.__wbindgen_free(e,1*t),r}var fl={};r(fl,"__wbg_crypto_968f1772287e2df0",(function(){return Pl})),r(fl,"__wbg_getRandomValues_a3d34b4fee3c2869",(function(){return kl})),r(fl,"__wbindgen_object_drop_ref",(function(){return Ml})),r(fl,"abort",(function(){return Al})),r(fl,"__wbg_getRandomValues_f5e14ab7ac8e995d",(function(){return Tl})),r(fl,"__wbindgen_is_undefined",(function(){return vl})),r(fl,"__wbg_require_604837428532a733",(function(){return xl})),r(fl,"__wbg_randomFillSync_d5bd2d655fdf256a",(function(){return Sl})),r(fl,"__wbg_self_1b7a39e3a92c949c",(function(){return wl}));const ll={getRandomValues:function(e){return crypto.getRandomValues(e)}},hl={crypto:ll},pl=new Array(32).fill(void 0).concat(void 0,null,!0,!1);let ml=pl.length;function yl(e){return pl[e]}function bl(e){const t=yl(e);return function(e){e<36||(pl[e]=ml,ml=e)}(e),t}function gl(e){ml===pl.length&&pl.push(pl.length+1);const t=ml;return ml=pl[t],pl[t]=e,t}function vl(e){return void 0===yl(e)}function wl(){return gl(hl)}function xl(e,t){throw new Error(`Unable to require ${function(e,t){return Xt(al(e,t))}(e,t)}`)}function Pl(e){return gl(ll)}function kl(e){return gl(ll.getRandomValues)}function Tl(e,t,r){ll.getRandomValues(al(t,r))}function Sl(e,t,r){throw new Error("randomFillsync is not available")}function Ml(e){bl(e)}function Al(){throw new Error("abort")}const Nl=async function(e,t,r){try{k("undefined"!=typeof WebAssembly&&e&&e.length,"WebAssembly is not available in your environment");const t=await WebAssembly.instantiate(e,{wbg:r});tl=t.instance.exports}catch(e){t?tl=t(r):(console.error("FATAL: Unable to initialize @polkadot/wasm-crypto"),console.error(e),tl=null)}}(el,null,fl).catch((()=>null)),Ol=(il((e=>t=>(e.ext_bip39_generate(8,t),Xt(dl())))),il((e=>t=>{const[r,n]=ul(t);return e.ext_bip39_to_entropy(8,r,n),dl()})),il((e=>(t,r)=>{const[n,i]=ul(t),[o,s]=ul(r);return e.ext_bip39_to_mini_secret(8,n,i,o,s),dl()})),il((e=>(t,r)=>{const[n,i]=ul(t),[o,s]=ul(r);return e.ext_bip39_to_seed(8,n,i,o,s),dl()})),il((e=>t=>{const[r,n]=ul(t);return 0!==e.ext_bip39_validate(r,n)})),il((e=>t=>{const[r,n]=cl(t);return e.ext_ed_from_seed(8,r,n),dl()})),il((e=>(t,r,n)=>{const[i,o]=cl(t),[s,a]=cl(r),[c,u]=cl(n);return e.ext_ed_sign(8,i,o,s,a,c,u),dl()})),il((e=>(t,r,n)=>{const[i,o]=cl(t),[s,a]=cl(r),[c,u]=cl(n);return 0!==e.ext_ed_verify(i,o,s,a,c,u)})),il((e=>(t,r)=>{const[n,i]=cl(t),[o,s]=cl(r);return e.ext_sr_derive_keypair_hard(8,n,i,o,s),dl()})),il((e=>(t,r)=>{const[n,i]=cl(t),[o,s]=cl(r);return e.ext_sr_derive_keypair_soft(8,n,i,o,s),dl()})),il((e=>(t,r)=>{const[n,i]=cl(t),[o,s]=cl(r);return e.ext_sr_derive_public_soft(8,n,i,o,s),dl()})),il((e=>t=>{const[r,n]=cl(t);return e.ext_sr_from_seed(8,r,n),dl()})),il((e=>(t,r,n)=>{const[i,o]=cl(t),[s,a]=cl(r),[c,u]=cl(n);return e.ext_sr_sign(8,i,o,s,a,c,u),dl()})),il((e=>(t,r,n)=>{const[i,o]=cl(t),[s,a]=cl(r),[c,u]=cl(n);return 0!==e.ext_sr_verify(i,o,s,a,c,u)})),il((e=>(t,r)=>{const[n,i]=cl(t),[o,s]=cl(r);return e.ext_sr_agree(8,n,i,o,s),dl()})),il((e=>(t,r,n,i)=>{const[o,s]=cl(t),[a,c]=cl(r),[u,d]=cl(n),[f,l]=cl(i);return e.ext_vrf_sign(8,o,s,a,c,u,d,f,l),dl()})),il((e=>(t,r,n,i,o)=>{const[s,a]=cl(t),[c,u]=cl(r),[d,f]=cl(n),[l,h]=cl(i),[p,m]=cl(o);return 0!==e.ext_vrf_verify(s,a,c,u,d,f,l,h,p,m)})),il((e=>(t,r,n)=>{const[i,o]=cl(t),[s,a]=cl(r);return e.ext_blake2b(8,i,o,s,a,n),dl()}))),Hl=(il((e=>(t,r)=>{const[n,i]=cl(t),[o,s]=cl(r);return e.ext_hmac_sha256(8,n,i,o,s),dl()})),il((e=>(t,r)=>{const[n,i]=cl(t),[o,s]=cl(r);return e.ext_hmac_sha512(8,n,i,o,s),dl()})),il((e=>t=>{const[r,n]=cl(t);return e.ext_keccak256(8,r,n),dl()}))),Il=il((e=>t=>{const[r,n]=cl(t);return e.ext_keccak512(8,r,n),dl()})),Vl=(il((e=>(t,r,n)=>{const[i,o]=cl(t),[s,a]=cl(r);return e.ext_pbkdf2(8,i,o,s,a,n),dl()})),il((e=>(t,r,n,i,o)=>{const[s,a]=cl(t),[c,u]=cl(r);return e.ext_scrypt(8,s,a,c,u,n,i,o),dl()})),il((e=>t=>{const[r,n]=cl(t);return e.ext_sha256(8,r,n),dl()})),il((e=>t=>{const[r,n]=cl(t);return e.ext_sha512(8,r,n),dl()})),il((e=>(t,r)=>{const[n,i]=cl(t);return e.ext_twox(8,n,i,r),dl()})));function El(){return!!tl}function zl(){return Nl.then((()=>El())).then((()=>!0)).catch((e=>(console.error("Unable to initialize @polkadot/util-crypto",e),!1)))}zl().catch((()=>{}));var Cl={};function jl(...e){const t=(e,t)=>r=>e(t(r));return{encode:Array.from(e).reverse().reduce(((e,r)=>e?t(e,r.encode):r.encode),void 0),decode:e.reduce(((e,r)=>e?t(e,r.decode):r.decode),void 0)}}function Ll(e){return{encode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("alphabet.encode input should be an array of numbers");return t.map((t=>{if(t<0||t>=e.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${e.length})`);return e[t]}))},decode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("alphabet.decode input should be array of strings");return t.map((t=>{const r=e.indexOf(t);if(-1===r)throw new Error(`Unknown letter: "${t}". Allowed: ${e}`);return r}))}}}function Rl(e=""){return{encode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("join.encode input should be array of strings");return t.join(e)},decode:t=>{if("string"!=typeof t)throw new Error("join.decode input should be string");return t.split(e)}}}function Bl(e,t="="){return{encode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");for(;r.length*e%8;)r.push(t);return r},decode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");let n=r.length;if(n*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;n>0&&r[n-1]===t;)if(n--,!(n*e%8))throw new Error("Invalid padding: string has too much padding");return r.slice(0,n)}}}function Dl(e){return{encode:e=>e,decode:t=>e(t)}}function Xl(e,t,r){if(!e.length)return[];let n=0;const i=[],o=Array.from(e);for(;;){let e=0,s=!0;for(let i=n;i<o.length;i++){const a=t*e+o[i];e=a%r,o[i]=Math.floor(a/r),s&&(o[i]?s=!1:n=i)}if(i.push(e),s)break}for(let t=0;t<e.length-1&&0===e[t];t++)i.push(0);return i.reverse()}function ql(e,t,r,n){let i=0,o=0;const s=2**r-1,a=[];for(const n of e)for(i=i<<t|n,o+=t;o>=r;o-=r)a.push(i>>o-r&s);if(i=i<<r-o&s,!n&&o>=t)throw new Error("Excess padding");if(!n&&i)throw new Error(`Non-zero padding: ${i}`);return n&&o>0&&a.push(i),a}function Wl(e,t=!1){return{encode:r=>{if(!(r instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return ql(Array.from(r),8,e,!t)},decode:r=>{if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(ql(r,e,8,t))}}}function Fl(e){return function(...t){try{return e.apply(null,t)}catch(e){}}}function Ul(e,t){return{encode(r){if(!(r instanceof Uint8Array))throw new Error("checksum.encode: input should be Uint8Array");const n=t(r).slice(0,e),i=new Uint8Array(r.length+e);return i.set(r),i.set(n,r.length),i},decode(r){if(!(r instanceof Uint8Array))throw new Error("checksum.decode: input should be Uint8Array");const n=r.slice(0,-e),i=t(n).slice(0,e),o=r.slice(-e);for(let t=0;t<e;t++)if(i[t]!==o[t])throw new Error("Invalid checksum");return n}}}
/*! micro-base - MIT License (c) 2021 Paul Miller (paulmillr.com) */Object.defineProperty(Cl,"__esModule",{value:!0}),Cl.bytes=Cl.stringToBytes=Cl.str=Cl.bytesToString=Cl.hex=Cl.utf8=Cl.bech32m=Cl.bech32=Cl.base58check=Cl.base58xmr=Cl.base58xrp=Cl.base58flickr=Cl.base58=Cl.base64url=Cl.base64=Cl.base32crockford=Cl.base32hex=Cl.base32=Cl.base16=Cl.utils=void 0,Cl.utils={alphabet:Ll,chain:jl,checksum:Ul,radix2:Wl},Cl.base16=jl(Wl(4),Ll("0123456789ABCDEF"),Rl("")),Cl.base32=jl(Wl(5),Ll("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),Bl(5),Rl("")),Cl.base32hex=jl(Wl(5),Ll("0123456789ABCDEFGHIJKLMNOPQRSTUV"),Bl(5),Rl("")),Cl.base32crockford=jl(Wl(5),Ll("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),Rl(""),Dl((e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),Cl.base64=jl(Wl(6),Ll("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),Bl(6),Rl("")),Cl.base64url=jl(Wl(6),Ll("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),Bl(6),Rl(""));const Gl=e=>{return jl((t=58,{encode:e=>{if(!(e instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return Xl(Array.from(e),256,t)},decode:e=>{if(!Array.isArray(e)||e.length&&"number"!=typeof e[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(Xl(e,t,256))}}),Ll(e),Rl(""));var t};Cl.base58=Gl("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),Cl.base58flickr=Gl("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),Cl.base58xrp=Gl("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"),Cl.base58xmr={encode(e){let t="";for(let r=0;r<e.length;r+=8){const n=e.subarray(r,r+8);t+=Cl.base58.encode(n).padStart(8===n.length?11:7,"1")}return t},decode(e){let t=[];for(let r=0;r<e.length;r+=11)t=t.concat(Array.from(Cl.base58.decode(e.slice(r,r+11))));return Uint8Array.from(t)}};Cl.base58check=e=>jl(Ul(4,(t=>e(e(t)))),Cl.base58);const Zl=jl(Ll("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),Rl("")),Yl=[996825010,642813549,513874426,1027748829,705979059];function Jl(e){const t=e>>25;let r=(33554431&e)<<5;for(let e=0;e<Yl.length;e++)1==(t>>e&1)&&(r^=Yl[e]);return r}function Kl(e,t,r=1){const n=e.length;let i=1;for(let t=0;t<n;t++){const r=e.charCodeAt(t);if(r<33||r>126)throw new Error(`Invalid prefix (${e})`);i=Jl(i)^r>>5}i=Jl(i);for(let t=0;t<n;t++)i=Jl(i)^31&e.charCodeAt(t);for(let e of t)i=Jl(i)^e;for(let e=0;e<6;e++)i=Jl(i);return i^=r,Zl.encode(ql([i%2**30],30,5,!1))}function Ql(e){const t="bech32"===e?1:734539939,r=Wl(5),n=r.decode,i=r.encode,o=Fl(n);function s(e,r=90){if("string"!=typeof e)throw new Error("bech32.decode input should be string, not "+typeof e);if(e.length<8||!1!==r&&e.length>r)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${r})`);const n=e.toLowerCase();if(e!==n&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const i=(e=n).lastIndexOf("1");if(0===i||-1===i)throw new Error('Letter "1" must be present between prefix and data only');const[o,s]=[e.slice(0,i),e.slice(i+1)];if(s.length<6)throw new Error("Data must be at least 6 characters long");const a=Zl.decode(s).slice(0,-6),c=Kl(o,a,t);if(!s.endsWith(c))throw new Error(`Invalid checksum in ${e}: expected "${c}"`);return{prefix:o,words:a}}return{encode:function(e,r,n=90){if("string"!=typeof e)throw new Error("bech32.decode prefix should be string, not "+typeof e);if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("bech32.decode words should be array of numbers, not "+typeof r);const i=e.length+7+r.length;if(!1!==n&&i>n)throw new TypeError(`Length ${i} exceeds limit ${n}`);return`${e=e.toLowerCase()}1${Zl.encode(r)}${Kl(e,r,t)}`},decode:s,decodeToBytes:function(e){const{prefix:t,words:r}=s(e,!1);return{prefix:t,words:r,bytes:n(r)}},decodeUnsafe:Fl(s),fromWords:n,fromWordsUnsafe:o,toWords:i}}Cl.bech32=Ql("bech32"),Cl.bech32m=Ql("bech32m"),Cl.utf8={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},Cl.hex=jl(Wl(4),Ll("0123456789abcdef"),Rl(""),Dl((e=>{if("string"!=typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()})));const _l={utf8:Cl.utf8,hex:Cl.hex,base16:Cl.base16,base32:Cl.base32,base64:Cl.base64,base64url:Cl.base64url,base58:Cl.base58,base58xmr:Cl.base58xmr},$l=`Invalid encoding type. Available types: ${Object.keys(_l).join(", ")}`;Cl.bytesToString=(e,t)=>{if("string"!=typeof e||!_l.hasOwnProperty(e))throw new TypeError($l);if(!(t instanceof Uint8Array))throw new TypeError("bytesToString() expects Uint8Array");return _l[e].encode(t)},Cl.str=Cl.bytesToString;Cl.stringToBytes=(e,t)=>{if(!_l.hasOwnProperty(e))throw new TypeError($l);if("string"!=typeof t)throw new TypeError("stringToBytes() expects string");return _l[e].decode(t)},Cl.bytes=Cl.stringToBytes;const eh={alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:Cl.base58,ipfsChar:"z",type:"base58"},th=function({alphabet:e,ipfsChar:t,regex:r,type:n}){return(i,o)=>{if(k(i&&"string"==typeof i,(()=>`Expected non-null, non-empty ${n} string input`)),t&&o&&k(i[0]===t,(()=>`Expected ipfs-compatible ${n} to start with '${t}'`)),r)k(r.test(i),`Invalid ${n} encoding`);else for(let t=o?1:0;t<i.length;t++)k(e.includes(i[t]),(()=>`Invalid ${n} character "${i[t]}" (0x${i.charCodeAt(t).toString(16)}) at index ${t}`));return!0}}(eh),rh=function({coder:e,ipfsChar:t},r){return(n,i)=>(r(n,i),e.decode(t&&i?n.substr(1):n))}(eh,th),nh=function({coder:e,ipfsChar:t}){return(r,n)=>{const i=e.encode(Et(r));return t&&n?`${t}${i}`:i}}(eh);ih=th;var ih;function oh(e){return(...t)=>Lt(e(...t))}function sh(e,t){return(r,n)=>t(r,e,n)}function ah(e){return El()&&!e}function ch(t,r=256,n,i){const o=Math.ceil(r/8),s=Et(t);return ah(i)?Ol(s,Et(n),o):e(Ci).blake2b(s,n||void 0,o)}oh(ch);const uh=Vt("SS58PRE");function dh(e){return ch(zt(uh,e),512)}const fh={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:_d.map((function({prefix:e}){return e})),prefix:42};function lh(e,t,r=-1){if(k(e,"Invalid empty address passed"),Ht(e)||Y(e))return Et(e);try{const n=rh(e);k(fh.allowedEncodedLengths.includes(n.length),"Invalid decoded address length");const[i,o,s,a]=function(e){const t=64&e[0]?2:1,r=1===t?e[0]:(63&e[0])<<2|e[1]>>6|(63&e[1])<<8,n=[34+t,35+t].includes(e.length),i=e.length-(n?2:1),o=dh(e.subarray(0,i));return[0==(128&e[0])&&![46,47].includes(e[0])&&(n?e[e.length-2]===o[0]&&e[e.length-1]===o[1]:e[e.length-1]===o[0]),i,t,r]}(n);return k(t||i,"Invalid decoded address checksum"),k([-1,a].includes(r),(()=>`Expected ss58Format ${r}, received ${a}`)),n.slice(s,o)}catch(t){throw new Error(`Decoding ${e}: ${t.message}`)}}function hh(e,t=fh.prefix){const r=lh(e);k(t>=0&&t<=16383&&![46,47].includes(t),"Out of range ss58Format specified"),k(fh.allowedDecodedLengths.includes(r.length),(()=>`Expected a valid key to convert, with length ${fh.allowedDecodedLengths.join(", ")}`));const n=zt(t<64?[t]:[(252&t)>>2|64,t>>8|(3&t)<<6],r);return nh(zt(n,dh(n).subarray(0,[32,33].includes(r.length)?2:1)))}var ph={};
/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */function mh(t,r=256,n){const i=256===r,o=Et(t);return ah(n)?i?Hl(o):Il(o):new Uint8Array(i?e(ph).keccak256.update(o).arrayBuffer():e(ph).keccak512.update(o).arrayBuffer())}!function(){var e="input is invalid type",r="object"==typeof window,n=r?window:{};n.JS_SHA3_NO_WINDOW&&(r=!1);var i=!r&&"object"==typeof self;!n.JS_SHA3_NO_NODE_JS&&"object"==typeof ut&&ut.versions&&ut.versions.node?n=t:i&&(n=self);var o=!n.JS_SHA3_NO_COMMON_JS&&ph,s="function"==typeof define&&define.amd,a=!n.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,c="0123456789abcdef".split(""),u=[4,1024,262144,67108864],d=[0,8,16,24],f=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],l=[224,256,384,512],h=[128,256],p=["hex","buffer","arrayBuffer","array","digest"],m={128:168,256:136};!n.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!a||!n.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var y=function(e,t,r){return function(n){return new I(e,t,e).update(n)[r]()}},b=function(e,t,r){return function(n,i){return new I(e,t,i).update(n)[r]()}},g=function(e,t,r){return function(t,n,i,o){return k["cshake"+e].update(t,n,i,o)[r]()}},v=function(e,t,r){return function(t,n,i,o){return k["kmac"+e].update(t,n,i,o)[r]()}},w=function(e,t,r,n){for(var i=0;i<p.length;++i){var o=p[i];e[o]=t(r,n,o)}return e},x=function(e,t){var r=y(e,t,"hex");return r.create=function(){return new I(e,t,e)},r.update=function(e){return r.create().update(e)},w(r,y,e,t)},P=[{name:"keccak",padding:[1,256,65536,16777216],bits:l,createMethod:x},{name:"sha3",padding:[6,1536,393216,100663296],bits:l,createMethod:x},{name:"shake",padding:[31,7936,2031616,520093696],bits:h,createMethod:function(e,t){var r=b(e,t,"hex");return r.create=function(r){return new I(e,t,r)},r.update=function(e,t){return r.create(t).update(e)},w(r,b,e,t)}},{name:"cshake",padding:u,bits:h,createMethod:function(e,t){var r=m[e],n=g(e,0,"hex");return n.create=function(n,i,o){return i||o?new I(e,t,n).bytepad([i,o],r):k["shake"+e].create(n)},n.update=function(e,t,r,i){return n.create(t,r,i).update(e)},w(n,g,e,t)}},{name:"kmac",padding:u,bits:h,createMethod:function(e,t){var r=m[e],n=v(e,0,"hex");return n.create=function(n,i,o){return new V(e,t,i).bytepad(["KMAC",o],r).bytepad([n],r)},n.update=function(e,t,r,i){return n.create(e,r,i).update(t)},w(n,v,e,t)}}],k={},T=[],S=0;S<P.length;++S)for(var M=P[S],A=M.bits,N=0;N<A.length;++N){var O=M.name+"_"+A[N];if(T.push(O),k[O]=M.createMethod(A[N],M.padding),"sha3"!==M.name){var H=M.name+A[N];T.push(H),k[H]=k[O]}}function I(e,t,r){this.blocks=[],this.s=[],this.padding=t,this.outputBits=r,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var n=0;n<50;++n)this.s[n]=0}function V(e,t,r){I.call(this,e,t,r)}I.prototype.update=function(t){if(this.finalized)throw new Error("finalize already called");var r,n=typeof t;if("string"!==n){if("object"!==n)throw new Error(e);if(null===t)throw new Error(e);if(a&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||a&&ArrayBuffer.isView(t)))throw new Error(e);r=!0}for(var i,o,s=this.blocks,c=this.byteCount,u=t.length,f=this.blockCount,l=0,h=this.s;l<u;){if(this.reset)for(this.reset=!1,s[0]=this.block,i=1;i<f+1;++i)s[i]=0;if(r)for(i=this.start;l<u&&i<c;++l)s[i>>2]|=t[l]<<d[3&i++];else for(i=this.start;l<u&&i<c;++l)(o=t.charCodeAt(l))<128?s[i>>2]|=o<<d[3&i++]:o<2048?(s[i>>2]|=(192|o>>6)<<d[3&i++],s[i>>2]|=(128|63&o)<<d[3&i++]):o<55296||o>=57344?(s[i>>2]|=(224|o>>12)<<d[3&i++],s[i>>2]|=(128|o>>6&63)<<d[3&i++],s[i>>2]|=(128|63&o)<<d[3&i++]):(o=65536+((1023&o)<<10|1023&t.charCodeAt(++l)),s[i>>2]|=(240|o>>18)<<d[3&i++],s[i>>2]|=(128|o>>12&63)<<d[3&i++],s[i>>2]|=(128|o>>6&63)<<d[3&i++],s[i>>2]|=(128|63&o)<<d[3&i++]);if(this.lastByteIndex=i,i>=c){for(this.start=i-c,this.block=s[f],i=0;i<f;++i)h[i]^=s[i];E(h),this.reset=!0}else this.start=i}return this},I.prototype.encode=function(e,t){var r=255&e,n=1,i=[r];for(r=255&(e>>=8);r>0;)i.unshift(r),r=255&(e>>=8),++n;return t?i.push(n):i.unshift(n),this.update(i),i.length},I.prototype.encodeString=function(t){var r,n=typeof t;if("string"!==n){if("object"!==n)throw new Error(e);if(null===t)throw new Error(e);if(a&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||a&&ArrayBuffer.isView(t)))throw new Error(e);r=!0}var i=0,o=t.length;if(r)i=o;else for(var s=0;s<t.length;++s){var c=t.charCodeAt(s);c<128?i+=1:c<2048?i+=2:c<55296||c>=57344?i+=3:(c=65536+((1023&c)<<10|1023&t.charCodeAt(++s)),i+=4)}return i+=this.encode(8*i),this.update(t),i},I.prototype.bytepad=function(e,t){for(var r=this.encode(t),n=0;n<e.length;++n)r+=this.encodeString(e[n]);var i=t-r%t,o=[];return o.length=i,this.update(o),this},I.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex,r=this.blockCount,n=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(e[0]=e[r],t=1;t<r+1;++t)e[t]=0;for(e[r-1]|=2147483648,t=0;t<r;++t)n[t]^=e[t];E(n)}},I.prototype.toString=I.prototype.hex=function(){this.finalize();for(var e,t=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a="";s<n;){for(o=0;o<t&&s<n;++o,++s)e=r[o],a+=c[e>>4&15]+c[15&e]+c[e>>12&15]+c[e>>8&15]+c[e>>20&15]+c[e>>16&15]+c[e>>28&15]+c[e>>24&15];s%t==0&&(E(r),o=0)}return i&&(e=r[o],a+=c[e>>4&15]+c[15&e],i>1&&(a+=c[e>>12&15]+c[e>>8&15]),i>2&&(a+=c[e>>20&15]+c[e>>16&15])),a},I.prototype.arrayBuffer=function(){this.finalize();var e,t=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a=this.outputBits>>3;e=i?new ArrayBuffer(n+1<<2):new ArrayBuffer(a);for(var c=new Uint32Array(e);s<n;){for(o=0;o<t&&s<n;++o,++s)c[s]=r[o];s%t==0&&E(r)}return i&&(c[o]=r[o],e=e.slice(0,a)),e},I.prototype.buffer=I.prototype.arrayBuffer,I.prototype.digest=I.prototype.array=function(){this.finalize();for(var e,t,r=this.blockCount,n=this.s,i=this.outputBlocks,o=this.extraBytes,s=0,a=0,c=[];a<i;){for(s=0;s<r&&a<i;++s,++a)e=a<<2,t=n[s],c[e]=255&t,c[e+1]=t>>8&255,c[e+2]=t>>16&255,c[e+3]=t>>24&255;a%r==0&&E(n)}return o&&(e=a<<2,t=n[s],c[e]=255&t,o>1&&(c[e+1]=t>>8&255),o>2&&(c[e+2]=t>>16&255)),c},V.prototype=new I,V.prototype.finalize=function(){return this.encode(this.outputBits,!0),I.prototype.finalize.call(this)};var E=function(e){var t,r,n,i,o,s,a,c,u,d,l,h,p,m,y,b,g,v,w,x,P,k,T,S,M,A,N,O,H,I,V,E,z,C,j,L,R,B,D,X,q,W,F,U,G,Z,Y,J,K,Q,_,$,ee,te,re,ne,ie,oe,se,ae,ce,ue,de;for(n=0;n<48;n+=2)i=e[0]^e[10]^e[20]^e[30]^e[40],o=e[1]^e[11]^e[21]^e[31]^e[41],s=e[2]^e[12]^e[22]^e[32]^e[42],a=e[3]^e[13]^e[23]^e[33]^e[43],c=e[4]^e[14]^e[24]^e[34]^e[44],u=e[5]^e[15]^e[25]^e[35]^e[45],d=e[6]^e[16]^e[26]^e[36]^e[46],l=e[7]^e[17]^e[27]^e[37]^e[47],t=(h=e[8]^e[18]^e[28]^e[38]^e[48])^(s<<1|a>>>31),r=(p=e[9]^e[19]^e[29]^e[39]^e[49])^(a<<1|s>>>31),e[0]^=t,e[1]^=r,e[10]^=t,e[11]^=r,e[20]^=t,e[21]^=r,e[30]^=t,e[31]^=r,e[40]^=t,e[41]^=r,t=i^(c<<1|u>>>31),r=o^(u<<1|c>>>31),e[2]^=t,e[3]^=r,e[12]^=t,e[13]^=r,e[22]^=t,e[23]^=r,e[32]^=t,e[33]^=r,e[42]^=t,e[43]^=r,t=s^(d<<1|l>>>31),r=a^(l<<1|d>>>31),e[4]^=t,e[5]^=r,e[14]^=t,e[15]^=r,e[24]^=t,e[25]^=r,e[34]^=t,e[35]^=r,e[44]^=t,e[45]^=r,t=c^(h<<1|p>>>31),r=u^(p<<1|h>>>31),e[6]^=t,e[7]^=r,e[16]^=t,e[17]^=r,e[26]^=t,e[27]^=r,e[36]^=t,e[37]^=r,e[46]^=t,e[47]^=r,t=d^(i<<1|o>>>31),r=l^(o<<1|i>>>31),e[8]^=t,e[9]^=r,e[18]^=t,e[19]^=r,e[28]^=t,e[29]^=r,e[38]^=t,e[39]^=r,e[48]^=t,e[49]^=r,m=e[0],y=e[1],Z=e[11]<<4|e[10]>>>28,Y=e[10]<<4|e[11]>>>28,O=e[20]<<3|e[21]>>>29,H=e[21]<<3|e[20]>>>29,ae=e[31]<<9|e[30]>>>23,ce=e[30]<<9|e[31]>>>23,W=e[40]<<18|e[41]>>>14,F=e[41]<<18|e[40]>>>14,C=e[2]<<1|e[3]>>>31,j=e[3]<<1|e[2]>>>31,b=e[13]<<12|e[12]>>>20,g=e[12]<<12|e[13]>>>20,J=e[22]<<10|e[23]>>>22,K=e[23]<<10|e[22]>>>22,I=e[33]<<13|e[32]>>>19,V=e[32]<<13|e[33]>>>19,ue=e[42]<<2|e[43]>>>30,de=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,re=e[4]<<30|e[5]>>>2,L=e[14]<<6|e[15]>>>26,R=e[15]<<6|e[14]>>>26,v=e[25]<<11|e[24]>>>21,w=e[24]<<11|e[25]>>>21,Q=e[34]<<15|e[35]>>>17,_=e[35]<<15|e[34]>>>17,E=e[45]<<29|e[44]>>>3,z=e[44]<<29|e[45]>>>3,S=e[6]<<28|e[7]>>>4,M=e[7]<<28|e[6]>>>4,ne=e[17]<<23|e[16]>>>9,ie=e[16]<<23|e[17]>>>9,B=e[26]<<25|e[27]>>>7,D=e[27]<<25|e[26]>>>7,x=e[36]<<21|e[37]>>>11,P=e[37]<<21|e[36]>>>11,$=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,U=e[8]<<27|e[9]>>>5,G=e[9]<<27|e[8]>>>5,A=e[18]<<20|e[19]>>>12,N=e[19]<<20|e[18]>>>12,oe=e[29]<<7|e[28]>>>25,se=e[28]<<7|e[29]>>>25,X=e[38]<<8|e[39]>>>24,q=e[39]<<8|e[38]>>>24,k=e[48]<<14|e[49]>>>18,T=e[49]<<14|e[48]>>>18,e[0]=m^~b&v,e[1]=y^~g&w,e[10]=S^~A&O,e[11]=M^~N&H,e[20]=C^~L&B,e[21]=j^~R&D,e[30]=U^~Z&J,e[31]=G^~Y&K,e[40]=te^~ne&oe,e[41]=re^~ie&se,e[2]=b^~v&x,e[3]=g^~w&P,e[12]=A^~O&I,e[13]=N^~H&V,e[22]=L^~B&X,e[23]=R^~D&q,e[32]=Z^~J&Q,e[33]=Y^~K&_,e[42]=ne^~oe&ae,e[43]=ie^~se&ce,e[4]=v^~x&k,e[5]=w^~P&T,e[14]=O^~I&E,e[15]=H^~V&z,e[24]=B^~X&W,e[25]=D^~q&F,e[34]=J^~Q&$,e[35]=K^~_&ee,e[44]=oe^~ae&ue,e[45]=se^~ce&de,e[6]=x^~k&m,e[7]=P^~T&y,e[16]=I^~E&S,e[17]=V^~z&M,e[26]=X^~W&C,e[27]=q^~F&j,e[36]=Q^~$&U,e[37]=_^~ee&G,e[46]=ae^~ue&te,e[47]=ce^~de&re,e[8]=k^~m&b,e[9]=T^~y&g,e[18]=E^~S&A,e[19]=z^~M&N,e[28]=W^~C&L,e[29]=F^~j&R,e[38]=$^~U&Z,e[39]=ee^~G&Y,e[48]=ue^~te&ne,e[49]=de^~re&ie,e[0]^=f[n],e[1]^=f[n+1]};if(o)ph=k;else{for(S=0;S<T.length;++S)n[T[S]]=k[T[S]];s&&define((function(){return k}))}}();sh(256,mh),sh(512,mh),oh(mh);const yh={bitLength:256,isLe:!1};var bh={},gh=bh;s.register("jXM4c",(function(e,t){e.exports=JSON.parse('{"name":"elliptic","version":"6.5.4","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"lint":"eslint lib test","lint:fix":"npm run lint -- --fix","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^2.0.2","coveralls":"^3.1.0","eslint":"^7.6.0","grunt":"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.5","mocha":"^8.0.1"},"dependencies":{"bn.js":"^4.11.9","brorand":"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1","inherits":"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"}}')})),gh.version=s("jXM4c").version,s.register("fc2cL",(function(e,t){"use strict";var r=e.exports,n=s("ctT9w"),i=s("8AJKQ"),o=s("8qfki");r.assert=i,r.toArray=o.toArray,r.zero2=o.zero2,r.toHex=o.toHex,r.encode=o.encode,r.getNAF=function(e,t,r){var n=new Array(Math.max(e.bitLength(),r)+1);n.fill(0);for(var i=1<<t+1,o=e.clone(),s=0;s<n.length;s++){var a,c=o.andln(i-1);o.isOdd()?(a=c>(i>>1)-1?(i>>1)-c:c,o.isubn(a)):a=0,n[s]=a,o.iushrn(1)}return n},r.getJSF=function(e,t){var r=[[],[]];e=e.clone(),t=t.clone();for(var n,i=0,o=0;e.cmpn(-i)>0||t.cmpn(-o)>0;){var s,a,c=e.andln(3)+i&3,u=t.andln(3)+o&3;3===c&&(c=-1),3===u&&(u=-1),s=0==(1&c)?0:3!==(n=e.andln(7)+i&7)&&5!==n||2!==u?c:-c,r[0].push(s),a=0==(1&u)?0:3!==(n=t.andln(7)+o&7)&&5!==n||2!==c?u:-u,r[1].push(a),2*i===s+1&&(i=1-i),2*o===a+1&&(o=1-o),e.iushrn(1),t.iushrn(1)}return r},r.cachedProperty=function(e,t,r){var n="_"+t;e.prototype[t]=function(){return void 0!==this[n]?this[n]:this[n]=r.call(this)}},r.parseBytes=function(e){return"string"==typeof e?r.toArray(e,"hex"):e},r.intFromLE=function(e){return new n(e,"hex","le")}})),s.register("8AJKQ",(function(e,t){function r(e,t){if(!e)throw new Error(t||"Assertion failed")}e.exports=r,r.equal=function(e,t,r){if(e!=t)throw new Error(r||"Assertion failed: "+e+" != "+t)}})),s.register("8qfki",(function(e,t){"use strict";var r=e.exports;function n(e){return 1===e.length?"0"+e:e}function i(e){for(var t="",r=0;r<e.length;r++)t+=n(e[r].toString(16));return t}r.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if("string"!=typeof e){for(var n=0;n<e.length;n++)r[n]=0|e[n];return r}if("hex"===t){(e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e);for(n=0;n<e.length;n+=2)r.push(parseInt(e[n]+e[n+1],16))}else for(n=0;n<e.length;n++){var i=e.charCodeAt(n),o=i>>8,s=255&i;o?r.push(o,s):r.push(s)}return r},r.zero2=n,r.toHex=i,r.encode=function(e,t){return"hex"===t?i(e):e}})),gh.utils=s("fc2cL"),s.register("jblZ4",(function(e,t){var r;function n(e){this.rand=e}if(e.exports=function(e){return r||(r=new n(null)),r.generate(e)},e.exports.Rand=n,n.prototype.generate=function(e){return this._rand(e)},n.prototype._rand=function(e){if(this.rand.getBytes)return this.rand.getBytes(e);for(var t=new Uint8Array(e),r=0;r<t.length;r++)t[r]=this.rand.getByte();return t},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?n.prototype._rand=function(e){var t=new Uint8Array(e);return self.crypto.getRandomValues(t),t}:self.msCrypto&&self.msCrypto.getRandomValues?n.prototype._rand=function(e){var t=new Uint8Array(e);return self.msCrypto.getRandomValues(t),t}:"object"==typeof window&&(n.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var i=s("h9a5C");if("function"!=typeof i.randomBytes)throw new Error("Not supported");n.prototype._rand=function(e){return i.randomBytes(e)}}catch(e){}})),gh.rand=s("jblZ4"),s.register("6PJfm",(function(e,t){"use strict";var r=e.exports;r.base=s("1v1P8"),r.short=s("1oXXd"),r.mont=s("93JTv"),r.edwards=s("cgwup")})),s.register("1v1P8",(function(e,t){"use strict";var r=s("ctT9w"),n=s("fc2cL"),i=n.getNAF,o=n.getJSF,a=n.assert;function c(e,t){this.type=e,this.p=new r(t.p,16),this.red=t.prime?r.red(t.prime):r.mont(this.p),this.zero=new r(0).toRed(this.red),this.one=new r(1).toRed(this.red),this.two=new r(2).toRed(this.red),this.n=t.n&&new r(t.n,16),this.g=t.g&&this.pointFromJSON(t.g,t.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var n=this.n&&this.p.div(this.n);!n||n.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function u(e,t){this.curve=e,this.type=t,this.precomputed=null}e.exports=c,c.prototype.point=function(){throw new Error("Not implemented")},c.prototype.validate=function(){throw new Error("Not implemented")},c.prototype._fixedNafMul=function(e,t){a(e.precomputed);var r=e._getDoubles(),n=i(t,1,this._bitLength),o=(1<<r.step+1)-(r.step%2==0?2:1);o/=3;var s,c,u=[];for(s=0;s<n.length;s+=r.step){c=0;for(var d=s+r.step-1;d>=s;d--)c=(c<<1)+n[d];u.push(c)}for(var f=this.jpoint(null,null,null),l=this.jpoint(null,null,null),h=o;h>0;h--){for(s=0;s<u.length;s++)(c=u[s])===h?l=l.mixedAdd(r.points[s]):c===-h&&(l=l.mixedAdd(r.points[s].neg()));f=f.add(l)}return f.toP()},c.prototype._wnafMul=function(e,t){var r=4,n=e._getNAFPoints(r);r=n.wnd;for(var o=n.points,s=i(t,r,this._bitLength),c=this.jpoint(null,null,null),u=s.length-1;u>=0;u--){for(var d=0;u>=0&&0===s[u];u--)d++;if(u>=0&&d++,c=c.dblp(d),u<0)break;var f=s[u];a(0!==f),c="affine"===e.type?f>0?c.mixedAdd(o[f-1>>1]):c.mixedAdd(o[-f-1>>1].neg()):f>0?c.add(o[f-1>>1]):c.add(o[-f-1>>1].neg())}return"affine"===e.type?c.toP():c},c.prototype._wnafMulAdd=function(e,t,r,n,s){var a,c,u,d=this._wnafT1,f=this._wnafT2,l=this._wnafT3,h=0;for(a=0;a<n;a++){var p=(u=t[a])._getNAFPoints(e);d[a]=p.wnd,f[a]=p.points}for(a=n-1;a>=1;a-=2){var m=a-1,y=a;if(1===d[m]&&1===d[y]){var b=[t[m],null,null,t[y]];0===t[m].y.cmp(t[y].y)?(b[1]=t[m].add(t[y]),b[2]=t[m].toJ().mixedAdd(t[y].neg())):0===t[m].y.cmp(t[y].y.redNeg())?(b[1]=t[m].toJ().mixedAdd(t[y]),b[2]=t[m].add(t[y].neg())):(b[1]=t[m].toJ().mixedAdd(t[y]),b[2]=t[m].toJ().mixedAdd(t[y].neg()));var g=[-3,-1,-5,-7,0,7,5,1,3],v=o(r[m],r[y]);for(h=Math.max(v[0].length,h),l[m]=new Array(h),l[y]=new Array(h),c=0;c<h;c++){var w=0|v[0][c],x=0|v[1][c];l[m][c]=g[3*(w+1)+(x+1)],l[y][c]=0,f[m]=b}}else l[m]=i(r[m],d[m],this._bitLength),l[y]=i(r[y],d[y],this._bitLength),h=Math.max(l[m].length,h),h=Math.max(l[y].length,h)}var P=this.jpoint(null,null,null),k=this._wnafT4;for(a=h;a>=0;a--){for(var T=0;a>=0;){var S=!0;for(c=0;c<n;c++)k[c]=0|l[c][a],0!==k[c]&&(S=!1);if(!S)break;T++,a--}if(a>=0&&T++,P=P.dblp(T),a<0)break;for(c=0;c<n;c++){var M=k[c];0!==M&&(M>0?u=f[c][M-1>>1]:M<0&&(u=f[c][-M-1>>1].neg()),P="affine"===u.type?P.mixedAdd(u):P.add(u))}}for(a=0;a<n;a++)f[a]=null;return s?P:P.toP()},c.BasePoint=u,u.prototype.eq=function(){throw new Error("Not implemented")},u.prototype.validate=function(){return this.curve.validate(this)},c.prototype.decodePoint=function(e,t){e=n.toArray(e,t);var r=this.p.byteLength();if((4===e[0]||6===e[0]||7===e[0])&&e.length-1==2*r)return 6===e[0]?a(e[e.length-1]%2==0):7===e[0]&&a(e[e.length-1]%2==1),this.point(e.slice(1,1+r),e.slice(1+r,1+2*r));if((2===e[0]||3===e[0])&&e.length-1===r)return this.pointFromX(e.slice(1,1+r),3===e[0]);throw new Error("Unknown point format")},u.prototype.encodeCompressed=function(e){return this.encode(e,!0)},u.prototype._encode=function(e){var t=this.curve.p.byteLength(),r=this.getX().toArray("be",t);return e?[this.getY().isEven()?2:3].concat(r):[4].concat(r,this.getY().toArray("be",t))},u.prototype.encode=function(e,t){return n.encode(this._encode(t),e)},u.prototype.precompute=function(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,e),t.beta=this._getBeta(),this.precomputed=t,this},u.prototype._hasDoubles=function(e){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return!!t&&t.points.length>=Math.ceil((e.bitLength()+1)/t.step)},u.prototype._getDoubles=function(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var r=[this],n=this,i=0;i<t;i+=e){for(var o=0;o<e;o++)n=n.dbl();r.push(n)}return{step:e,points:r}},u.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],r=(1<<e)-1,n=1===r?null:this.dbl(),i=1;i<r;i++)t[i]=t[i-1].add(n);return{wnd:e,points:t}},u.prototype._getBeta=function(){return null},u.prototype.dblp=function(e){for(var t=this,r=0;r<e;r++)t=t.dbl();return t}})),s.register("1oXXd",(function(e,t){"use strict";var r=s("fc2cL"),n=s("ctT9w"),i=s("baZwd"),o=s("1v1P8"),a=r.assert;function c(e){o.call(this,"short",e),this.a=new n(e.a,16).toRed(this.red),this.b=new n(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function u(e,t,r,i){o.BasePoint.call(this,e,"affine"),null===t&&null===r?(this.x=null,this.y=null,this.inf=!0):(this.x=new n(t,16),this.y=new n(r,16),i&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function d(e,t,r,i){o.BasePoint.call(this,e,"jacobian"),null===t&&null===r&&null===i?(this.x=this.curve.one,this.y=this.curve.one,this.z=new n(0)):(this.x=new n(t,16),this.y=new n(r,16),this.z=new n(i,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}i(c,o),e.exports=c,c.prototype._getEndomorphism=function(e){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var t,r;if(e.beta)t=new n(e.beta,16).toRed(this.red);else{var i=this._getEndoRoots(this.p);t=(t=i[0].cmp(i[1])<0?i[0]:i[1]).toRed(this.red)}if(e.lambda)r=new n(e.lambda,16);else{var o=this._getEndoRoots(this.n);0===this.g.mul(o[0]).x.cmp(this.g.x.redMul(t))?r=o[0]:(r=o[1],a(0===this.g.mul(r).x.cmp(this.g.x.redMul(t))))}return{beta:t,lambda:r,basis:e.basis?e.basis.map((function(e){return{a:new n(e.a,16),b:new n(e.b,16)}})):this._getEndoBasis(r)}}},c.prototype._getEndoRoots=function(e){var t=e===this.p?this.red:n.mont(e),r=new n(2).toRed(t).redInvm(),i=r.redNeg(),o=new n(3).toRed(t).redNeg().redSqrt().redMul(r);return[i.redAdd(o).fromRed(),i.redSub(o).fromRed()]},c.prototype._getEndoBasis=function(e){for(var t,r,i,o,s,a,c,u,d,f=this.n.ushrn(Math.floor(this.n.bitLength()/2)),l=e,h=this.n.clone(),p=new n(1),m=new n(0),y=new n(0),b=new n(1),g=0;0!==l.cmpn(0);){var v=h.div(l);u=h.sub(v.mul(l)),d=y.sub(v.mul(p));var w=b.sub(v.mul(m));if(!i&&u.cmp(f)<0)t=c.neg(),r=p,i=u.neg(),o=d;else if(i&&2==++g)break;c=u,h=l,l=u,y=p,p=d,b=m,m=w}s=u.neg(),a=d;var x=i.sqr().add(o.sqr());return s.sqr().add(a.sqr()).cmp(x)>=0&&(s=t,a=r),i.negative&&(i=i.neg(),o=o.neg()),s.negative&&(s=s.neg(),a=a.neg()),[{a:i,b:o},{a:s,b:a}]},c.prototype._endoSplit=function(e){var t=this.endo.basis,r=t[0],n=t[1],i=n.b.mul(e).divRound(this.n),o=r.b.neg().mul(e).divRound(this.n),s=i.mul(r.a),a=o.mul(n.a),c=i.mul(r.b),u=o.mul(n.b);return{k1:e.sub(s).sub(a),k2:c.add(u).neg()}},c.prototype.pointFromX=function(e,t){(e=new n(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),i=r.redSqrt();if(0!==i.redSqr().redSub(r).cmp(this.zero))throw new Error("invalid point");var o=i.fromRed().isOdd();return(t&&!o||!t&&o)&&(i=i.redNeg()),this.point(e,i)},c.prototype.validate=function(e){if(e.inf)return!0;var t=e.x,r=e.y,n=this.a.redMul(t),i=t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);return 0===r.redSqr().redISub(i).cmpn(0)},c.prototype._endoWnafMulAdd=function(e,t,r){for(var n=this._endoWnafT1,i=this._endoWnafT2,o=0;o<e.length;o++){var s=this._endoSplit(t[o]),a=e[o],c=a._getBeta();s.k1.negative&&(s.k1.ineg(),a=a.neg(!0)),s.k2.negative&&(s.k2.ineg(),c=c.neg(!0)),n[2*o]=a,n[2*o+1]=c,i[2*o]=s.k1,i[2*o+1]=s.k2}for(var u=this._wnafMulAdd(1,n,i,2*o,r),d=0;d<2*o;d++)n[d]=null,i[d]=null;return u},i(u,o.BasePoint),c.prototype.point=function(e,t,r){return new u(this,e,t,r)},c.prototype.pointFromJSON=function(e,t){return u.fromJSON(this,e,t)},u.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var r=this.curve,n=function(e){return r.point(e.x.redMul(r.endo.beta),e.y)};e.beta=t,t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(n)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(n)}}}return t}},u.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},u.fromJSON=function(e,t,r){"string"==typeof t&&(t=JSON.parse(t));var n=e.point(t[0],t[1],r);if(!t[2])return n;function i(t){return e.point(t[0],t[1],r)}var o=t[2];return n.precomputed={beta:null,doubles:o.doubles&&{step:o.doubles.step,points:[n].concat(o.doubles.points.map(i))},naf:o.naf&&{wnd:o.naf.wnd,points:[n].concat(o.naf.points.map(i))}},n},u.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},u.prototype.isInfinity=function(){return this.inf},u.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(0===this.x.cmp(e.x))return this.curve.point(null,null);var t=this.y.redSub(e.y);0!==t.cmpn(0)&&(t=t.redMul(this.x.redSub(e.x).redInvm()));var r=t.redSqr().redISub(this.x).redISub(e.x),n=t.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,n)},u.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(0===e.cmpn(0))return this.curve.point(null,null);var t=this.curve.a,r=this.x.redSqr(),n=e.redInvm(),i=r.redAdd(r).redIAdd(r).redIAdd(t).redMul(n),o=i.redSqr().redISub(this.x.redAdd(this.x)),s=i.redMul(this.x.redSub(o)).redISub(this.y);return this.curve.point(o,s)},u.prototype.getX=function(){return this.x.fromRed()},u.prototype.getY=function(){return this.y.fromRed()},u.prototype.mul=function(e){return e=new n(e,16),this.isInfinity()?this:this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)},u.prototype.mulAdd=function(e,t,r){var n=[this,t],i=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i):this.curve._wnafMulAdd(1,n,i,2)},u.prototype.jmulAdd=function(e,t,r){var n=[this,t],i=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i,!0):this.curve._wnafMulAdd(1,n,i,2,!0)},u.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||0===this.x.cmp(e.x)&&0===this.y.cmp(e.y))},u.prototype.neg=function(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var r=this.precomputed,n=function(e){return e.neg()};t.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(n)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(n)}}}return t},u.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},i(d,o.BasePoint),c.prototype.jpoint=function(e,t,r){return new d(this,e,t,r)},d.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),t=e.redSqr(),r=this.x.redMul(t),n=this.y.redMul(t).redMul(e);return this.curve.point(r,n)},d.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},d.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr(),r=this.z.redSqr(),n=this.x.redMul(t),i=e.x.redMul(r),o=this.y.redMul(t.redMul(e.z)),s=e.y.redMul(r.redMul(this.z)),a=n.redSub(i),c=o.redSub(s);if(0===a.cmpn(0))return 0!==c.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var u=a.redSqr(),d=u.redMul(a),f=n.redMul(u),l=c.redSqr().redIAdd(d).redISub(f).redISub(f),h=c.redMul(f.redISub(l)).redISub(o.redMul(d)),p=this.z.redMul(e.z).redMul(a);return this.curve.jpoint(l,h,p)},d.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr(),r=this.x,n=e.x.redMul(t),i=this.y,o=e.y.redMul(t).redMul(this.z),s=r.redSub(n),a=i.redSub(o);if(0===s.cmpn(0))return 0!==a.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var c=s.redSqr(),u=c.redMul(s),d=r.redMul(c),f=a.redSqr().redIAdd(u).redISub(d).redISub(d),l=a.redMul(d.redISub(f)).redISub(i.redMul(u)),h=this.z.redMul(s);return this.curve.jpoint(f,l,h)},d.prototype.dblp=function(e){if(0===e)return this;if(this.isInfinity())return this;if(!e)return this.dbl();var t;if(this.curve.zeroA||this.curve.threeA){var r=this;for(t=0;t<e;t++)r=r.dbl();return r}var n=this.curve.a,i=this.curve.tinv,o=this.x,s=this.y,a=this.z,c=a.redSqr().redSqr(),u=s.redAdd(s);for(t=0;t<e;t++){var d=o.redSqr(),f=u.redSqr(),l=f.redSqr(),h=d.redAdd(d).redIAdd(d).redIAdd(n.redMul(c)),p=o.redMul(f),m=h.redSqr().redISub(p.redAdd(p)),y=p.redISub(m),b=h.redMul(y);b=b.redIAdd(b).redISub(l);var g=u.redMul(a);t+1<e&&(c=c.redMul(l)),o=m,a=g,u=b}return this.curve.jpoint(o,u.redMul(i),a)},d.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},d.prototype._zeroDbl=function(){var e,t,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),s=this.x.redAdd(i).redSqr().redISub(n).redISub(o);s=s.redIAdd(s);var a=n.redAdd(n).redIAdd(n),c=a.redSqr().redISub(s).redISub(s),u=o.redIAdd(o);u=(u=u.redIAdd(u)).redIAdd(u),e=c,t=a.redMul(s.redISub(c)).redISub(u),r=this.y.redAdd(this.y)}else{var d=this.x.redSqr(),f=this.y.redSqr(),l=f.redSqr(),h=this.x.redAdd(f).redSqr().redISub(d).redISub(l);h=h.redIAdd(h);var p=d.redAdd(d).redIAdd(d),m=p.redSqr(),y=l.redIAdd(l);y=(y=y.redIAdd(y)).redIAdd(y),e=m.redISub(h).redISub(h),t=p.redMul(h.redISub(e)).redISub(y),r=(r=this.y.redMul(this.z)).redIAdd(r)}return this.curve.jpoint(e,t,r)},d.prototype._threeDbl=function(){var e,t,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),s=this.x.redAdd(i).redSqr().redISub(n).redISub(o);s=s.redIAdd(s);var a=n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),c=a.redSqr().redISub(s).redISub(s);e=c;var u=o.redIAdd(o);u=(u=u.redIAdd(u)).redIAdd(u),t=a.redMul(s.redISub(c)).redISub(u),r=this.y.redAdd(this.y)}else{var d=this.z.redSqr(),f=this.y.redSqr(),l=this.x.redMul(f),h=this.x.redSub(d).redMul(this.x.redAdd(d));h=h.redAdd(h).redIAdd(h);var p=l.redIAdd(l),m=(p=p.redIAdd(p)).redAdd(p);e=h.redSqr().redISub(m),r=this.y.redAdd(this.z).redSqr().redISub(f).redISub(d);var y=f.redSqr();y=(y=(y=y.redIAdd(y)).redIAdd(y)).redIAdd(y),t=h.redMul(p.redISub(e)).redISub(y)}return this.curve.jpoint(e,t,r)},d.prototype._dbl=function(){var e=this.curve.a,t=this.x,r=this.y,n=this.z,i=n.redSqr().redSqr(),o=t.redSqr(),s=r.redSqr(),a=o.redAdd(o).redIAdd(o).redIAdd(e.redMul(i)),c=t.redAdd(t),u=(c=c.redIAdd(c)).redMul(s),d=a.redSqr().redISub(u.redAdd(u)),f=u.redISub(d),l=s.redSqr();l=(l=(l=l.redIAdd(l)).redIAdd(l)).redIAdd(l);var h=a.redMul(f).redISub(l),p=r.redAdd(r).redMul(n);return this.curve.jpoint(d,h,p)},d.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),t=this.y.redSqr(),r=this.z.redSqr(),n=t.redSqr(),i=e.redAdd(e).redIAdd(e),o=i.redSqr(),s=this.x.redAdd(t).redSqr().redISub(e).redISub(n),a=(s=(s=(s=s.redIAdd(s)).redAdd(s).redIAdd(s)).redISub(o)).redSqr(),c=n.redIAdd(n);c=(c=(c=c.redIAdd(c)).redIAdd(c)).redIAdd(c);var u=i.redIAdd(s).redSqr().redISub(o).redISub(a).redISub(c),d=t.redMul(u);d=(d=d.redIAdd(d)).redIAdd(d);var f=this.x.redMul(a).redISub(d);f=(f=f.redIAdd(f)).redIAdd(f);var l=this.y.redMul(u.redMul(c.redISub(u)).redISub(s.redMul(a)));l=(l=(l=l.redIAdd(l)).redIAdd(l)).redIAdd(l);var h=this.z.redAdd(s).redSqr().redISub(r).redISub(a);return this.curve.jpoint(f,l,h)},d.prototype.mul=function(e,t){return e=new n(e,t),this.curve._wnafMul(this,e)},d.prototype.eq=function(e){if("affine"===e.type)return this.eq(e.toJ());if(this===e)return!0;var t=this.z.redSqr(),r=e.z.redSqr();if(0!==this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0))return!1;var n=t.redMul(this.z),i=r.redMul(e.z);return 0===this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0)},d.prototype.eqXToP=function(e){var t=this.z.redSqr(),r=e.toRed(this.curve.red).redMul(t);if(0===this.x.cmp(r))return!0;for(var n=e.clone(),i=this.curve.redN.redMul(t);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return!1;if(r.redIAdd(i),0===this.x.cmp(r))return!0}},d.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},d.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}})),s.register("baZwd",(function(e,t){"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}}})),s.register("93JTv",(function(e,t){"use strict";var r=s("ctT9w"),n=s("baZwd"),i=s("1v1P8"),o=s("fc2cL");function a(e){i.call(this,"mont",e),this.a=new r(e.a,16).toRed(this.red),this.b=new r(e.b,16).toRed(this.red),this.i4=new r(4).toRed(this.red).redInvm(),this.two=new r(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function c(e,t,n){i.BasePoint.call(this,e,"projective"),null===t&&null===n?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new r(t,16),this.z=new r(n,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}n(a,i),e.exports=a,a.prototype.validate=function(e){var t=e.normalize().x,r=t.redSqr(),n=r.redMul(t).redAdd(r.redMul(this.a)).redAdd(t);return 0===n.redSqrt().redSqr().cmp(n)},n(c,i.BasePoint),a.prototype.decodePoint=function(e,t){return this.point(o.toArray(e,t),1)},a.prototype.point=function(e,t){return new c(this,e,t)},a.prototype.pointFromJSON=function(e){return c.fromJSON(this,e)},c.prototype.precompute=function(){},c.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},c.fromJSON=function(e,t){return new c(e,t[0],t[1]||e.one)},c.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},c.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},c.prototype.dbl=function(){var e=this.x.redAdd(this.z).redSqr(),t=this.x.redSub(this.z).redSqr(),r=e.redSub(t),n=e.redMul(t),i=r.redMul(t.redAdd(this.curve.a24.redMul(r)));return this.curve.point(n,i)},c.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.diffAdd=function(e,t){var r=this.x.redAdd(this.z),n=this.x.redSub(this.z),i=e.x.redAdd(e.z),o=e.x.redSub(e.z).redMul(r),s=i.redMul(n),a=t.z.redMul(o.redAdd(s).redSqr()),c=t.x.redMul(o.redISub(s).redSqr());return this.curve.point(a,c)},c.prototype.mul=function(e){for(var t=e.clone(),r=this,n=this.curve.point(null,null),i=[];0!==t.cmpn(0);t.iushrn(1))i.push(t.andln(1));for(var o=i.length-1;o>=0;o--)0===i[o]?(r=r.diffAdd(n,this),n=n.dbl()):(n=r.diffAdd(n,this),r=r.dbl());return n},c.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.eq=function(e){return 0===this.getX().cmp(e.getX())},c.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},c.prototype.getX=function(){return this.normalize(),this.x.fromRed()}})),s.register("cgwup",(function(e,t){"use strict";var r=s("fc2cL"),n=s("ctT9w"),i=s("baZwd"),o=s("1v1P8"),a=r.assert;function c(e){this.twisted=1!=(0|e.a),this.mOneA=this.twisted&&-1==(0|e.a),this.extended=this.mOneA,o.call(this,"edwards",e),this.a=new n(e.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new n(e.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new n(e.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),a(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|e.c)}function u(e,t,r,i,s){o.BasePoint.call(this,e,"projective"),null===t&&null===r&&null===i?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new n(t,16),this.y=new n(r,16),this.z=i?new n(i,16):this.curve.one,this.t=s&&new n(s,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}i(c,o),e.exports=c,c.prototype._mulA=function(e){return this.mOneA?e.redNeg():this.a.redMul(e)},c.prototype._mulC=function(e){return this.oneC?e:this.c.redMul(e)},c.prototype.jpoint=function(e,t,r,n){return this.point(e,t,r,n)},c.prototype.pointFromX=function(e,t){(e=new n(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr(),i=this.c2.redSub(this.a.redMul(r)),o=this.one.redSub(this.c2.redMul(this.d).redMul(r)),s=i.redMul(o.redInvm()),a=s.redSqrt();if(0!==a.redSqr().redSub(s).cmp(this.zero))throw new Error("invalid point");var c=a.fromRed().isOdd();return(t&&!c||!t&&c)&&(a=a.redNeg()),this.point(e,a)},c.prototype.pointFromY=function(e,t){(e=new n(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr(),i=r.redSub(this.c2),o=r.redMul(this.d).redMul(this.c2).redSub(this.a),s=i.redMul(o.redInvm());if(0===s.cmp(this.zero)){if(t)throw new Error("invalid point");return this.point(this.zero,e)}var a=s.redSqrt();if(0!==a.redSqr().redSub(s).cmp(this.zero))throw new Error("invalid point");return a.fromRed().isOdd()!==t&&(a=a.redNeg()),this.point(a,e)},c.prototype.validate=function(e){if(e.isInfinity())return!0;e.normalize();var t=e.x.redSqr(),r=e.y.redSqr(),n=t.redMul(this.a).redAdd(r),i=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(r)));return 0===n.cmp(i)},i(u,o.BasePoint),c.prototype.pointFromJSON=function(e){return u.fromJSON(this,e)},c.prototype.point=function(e,t,r,n){return new u(this,e,t,r,n)},u.fromJSON=function(e,t){return new u(e,t[0],t[1],t[2])},u.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},u.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},u.prototype._extDbl=function(){var e=this.x.redSqr(),t=this.y.redSqr(),r=this.z.redSqr();r=r.redIAdd(r);var n=this.curve._mulA(e),i=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t),o=n.redAdd(t),s=o.redSub(r),a=n.redSub(t),c=i.redMul(s),u=o.redMul(a),d=i.redMul(a),f=s.redMul(o);return this.curve.point(c,u,f,d)},u.prototype._projDbl=function(){var e,t,r,n,i,o,s=this.x.redAdd(this.y).redSqr(),a=this.x.redSqr(),c=this.y.redSqr();if(this.curve.twisted){var u=(n=this.curve._mulA(a)).redAdd(c);this.zOne?(e=s.redSub(a).redSub(c).redMul(u.redSub(this.curve.two)),t=u.redMul(n.redSub(c)),r=u.redSqr().redSub(u).redSub(u)):(i=this.z.redSqr(),o=u.redSub(i).redISub(i),e=s.redSub(a).redISub(c).redMul(o),t=u.redMul(n.redSub(c)),r=u.redMul(o))}else n=a.redAdd(c),i=this.curve._mulC(this.z).redSqr(),o=n.redSub(i).redSub(i),e=this.curve._mulC(s.redISub(n)).redMul(o),t=this.curve._mulC(n).redMul(a.redISub(c)),r=n.redMul(o);return this.curve.point(e,t,r)},u.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},u.prototype._extAdd=function(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x)),r=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),n=this.t.redMul(this.curve.dd).redMul(e.t),i=this.z.redMul(e.z.redAdd(e.z)),o=r.redSub(t),s=i.redSub(n),a=i.redAdd(n),c=r.redAdd(t),u=o.redMul(s),d=a.redMul(c),f=o.redMul(c),l=s.redMul(a);return this.curve.point(u,d,l,f)},u.prototype._projAdd=function(e){var t,r,n=this.z.redMul(e.z),i=n.redSqr(),o=this.x.redMul(e.x),s=this.y.redMul(e.y),a=this.curve.d.redMul(o).redMul(s),c=i.redSub(a),u=i.redAdd(a),d=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(o).redISub(s),f=n.redMul(c).redMul(d);return this.curve.twisted?(t=n.redMul(u).redMul(s.redSub(this.curve._mulA(o))),r=c.redMul(u)):(t=n.redMul(u).redMul(s.redSub(o)),r=this.curve._mulC(c).redMul(u)),this.curve.point(f,t,r)},u.prototype.add=function(e){return this.isInfinity()?e:e.isInfinity()?this:this.curve.extended?this._extAdd(e):this._projAdd(e)},u.prototype.mul=function(e){return this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve._wnafMul(this,e)},u.prototype.mulAdd=function(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,!1)},u.prototype.jmulAdd=function(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,!0)},u.prototype.normalize=function(){if(this.zOne)return this;var e=this.z.redInvm();return this.x=this.x.redMul(e),this.y=this.y.redMul(e),this.t&&(this.t=this.t.redMul(e)),this.z=this.curve.one,this.zOne=!0,this},u.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},u.prototype.getX=function(){return this.normalize(),this.x.fromRed()},u.prototype.getY=function(){return this.normalize(),this.y.fromRed()},u.prototype.eq=function(e){return this===e||0===this.getX().cmp(e.getX())&&0===this.getY().cmp(e.getY())},u.prototype.eqXToP=function(e){var t=e.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(t))return!0;for(var r=e.clone(),n=this.curve.redN.redMul(this.z);;){if(r.iadd(this.curve.n),r.cmp(this.curve.p)>=0)return!1;if(t.redIAdd(n),0===this.x.cmp(t))return!0}},u.prototype.toP=u.prototype.normalize,u.prototype.mixedAdd=u.prototype.add})),gh.curve=s("6PJfm"),s.register("fQBtr",(function(e,t){"use strict";var r,n=e.exports,i=s("an3oG"),o=s("6PJfm"),a=s("fc2cL").assert;function c(e){"short"===e.type?this.curve=new o.short(e):"edwards"===e.type?this.curve=new o.edwards(e):this.curve=new o.mont(e),this.g=this.curve.g,this.n=this.curve.n,this.hash=e.hash,a(this.g.validate(),"Invalid curve"),a(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function u(e,t){Object.defineProperty(n,e,{configurable:!0,enumerable:!0,get:function(){var r=new c(t);return Object.defineProperty(n,e,{configurable:!0,enumerable:!0,value:r}),r}})}n.PresetCurve=c,u("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:i.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),u("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:i.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),u("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:i.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),u("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:i.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),u("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:i.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),u("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:i.sha256,gRed:!1,g:["9"]}),u("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:i.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{r=s("igLRx")}catch(e){r=void 0}u("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:i.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",r]})})),s.register("an3oG",(function(e,t){var r=e.exports;r.utils=s("8XJ1q"),r.common=s("2iOll"),r.sha=s("kW4Vw"),r.ripemd=s("8lcL1"),r.hmac=s("aR8zr"),r.sha1=r.sha.sha1,r.sha256=r.sha.sha256,r.sha224=r.sha.sha224,r.sha384=r.sha.sha384,r.sha512=r.sha.sha512,r.ripemd160=r.ripemd.ripemd160})),s.register("8XJ1q",(function(e,t){var n,i,o,a,c,u,d,f,l,h,p,m,y,b,g,v,w,x,P,k,T,S,M,A,N,O;r(e.exports,"sum64",(function(){return o}),(function(e){return o=e})),r(e.exports,"sum32_3",(function(){return g}),(function(e){return g=e})),r(e.exports,"sum64_hi",(function(){return A}),(function(e){return A=e})),r(e.exports,"shr64_lo",(function(){return a}),(function(e){return a=e})),r(e.exports,"sum64_4_lo",(function(){return l}),(function(e){return l=e})),r(e.exports,"sum32_5",(function(){return f}),(function(e){return f=e})),r(e.exports,"split32",(function(){return p}),(function(e){return p=e})),r(e.exports,"zero2",(function(){return m}),(function(e){return m=e})),r(e.exports,"rotr32",(function(){return k}),(function(e){return k=e})),r(e.exports,"rotl32",(function(){return x}),(function(e){return x=e})),r(e.exports,"toHex32",(function(){return h}),(function(e){return h=e})),r(e.exports,"rotr64_lo",(function(){return b}),(function(e){return b=e})),r(e.exports,"htonl",(function(){return P}),(function(e){return P=e})),r(e.exports,"sum64_lo",(function(){return M}),(function(e){return M=e})),r(e.exports,"sum64_5_hi",(function(){return n}),(function(e){return n=e})),r(e.exports,"toArray",(function(){return c}),(function(e){return c=e})),r(e.exports,"sum32_4",(function(){return S}),(function(e){return S=e})),r(e.exports,"sum64_5_lo",(function(){return y}),(function(e){return y=e})),r(e.exports,"join32",(function(){return w}),(function(e){return w=e})),r(e.exports,"zero8",(function(){return O}),(function(e){return O=e})),r(e.exports,"sum32",(function(){return T}),(function(e){return T=e})),r(e.exports,"inherits",(function(){return v}),(function(e){return v=e})),r(e.exports,"toHex",(function(){return d}),(function(e){return d=e})),r(e.exports,"shr64_hi",(function(){return i}),(function(e){return i=e})),r(e.exports,"rotr64_hi",(function(){return u}),(function(e){return u=e})),r(e.exports,"sum64_4_hi",(function(){return N}),(function(e){return N=e}));var H=s("8AJKQ"),I=s("baZwd");function V(e,t){return 55296==(64512&e.charCodeAt(t))&&(!(t<0||t+1>=e.length)&&56320==(64512&e.charCodeAt(t+1)))}function E(e){return(e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function z(e){return 1===e.length?"0"+e:e}function C(e){return 7===e.length?"0"+e:6===e.length?"00"+e:5===e.length?"000"+e:4===e.length?"0000"+e:3===e.length?"00000"+e:2===e.length?"000000"+e:1===e.length?"0000000"+e:e}v=I,c=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if("string"==typeof e)if(t){if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e),i=0;i<e.length;i+=2)r.push(parseInt(e[i]+e[i+1],16))}else for(var n=0,i=0;i<e.length;i++){var o=e.charCodeAt(i);o<128?r[n++]=o:o<2048?(r[n++]=o>>6|192,r[n++]=63&o|128):V(e,i)?(o=65536+((1023&o)<<10)+(1023&e.charCodeAt(++i)),r[n++]=o>>18|240,r[n++]=o>>12&63|128,r[n++]=o>>6&63|128,r[n++]=63&o|128):(r[n++]=o>>12|224,r[n++]=o>>6&63|128,r[n++]=63&o|128)}else for(i=0;i<e.length;i++)r[i]=0|e[i];return r},d=function(e){for(var t="",r=0;r<e.length;r++)t+=z(e[r].toString(16));return t},P=E,h=function(e,t){for(var r="",n=0;n<e.length;n++){var i=e[n];"little"===t&&(i=E(i)),r+=C(i.toString(16))}return r},m=z,O=C,w=function(e,t,r,n){var i=r-t;H(i%4==0);for(var o=new Array(i/4),s=0,a=t;s<o.length;s++,a+=4){var c;c="big"===n?e[a]<<24|e[a+1]<<16|e[a+2]<<8|e[a+3]:e[a+3]<<24|e[a+2]<<16|e[a+1]<<8|e[a],o[s]=c>>>0}return o},p=function(e,t){for(var r=new Array(4*e.length),n=0,i=0;n<e.length;n++,i+=4){var o=e[n];"big"===t?(r[i]=o>>>24,r[i+1]=o>>>16&255,r[i+2]=o>>>8&255,r[i+3]=255&o):(r[i+3]=o>>>24,r[i+2]=o>>>16&255,r[i+1]=o>>>8&255,r[i]=255&o)}return r},k=function(e,t){return e>>>t|e<<32-t},x=function(e,t){return e<<t|e>>>32-t},T=function(e,t){return e+t>>>0},g=function(e,t,r){return e+t+r>>>0},S=function(e,t,r,n){return e+t+r+n>>>0},f=function(e,t,r,n,i){return e+t+r+n+i>>>0},o=function(e,t,r,n){var i=e[t],o=n+e[t+1]>>>0,s=(o<n?1:0)+r+i;e[t]=s>>>0,e[t+1]=o},A=function(e,t,r,n){return(t+n>>>0<t?1:0)+e+r>>>0},M=function(e,t,r,n){return t+n>>>0},N=function(e,t,r,n,i,o,s,a){var c=0,u=t;return c+=(u=u+n>>>0)<t?1:0,c+=(u=u+o>>>0)<o?1:0,e+r+i+s+(c+=(u=u+a>>>0)<a?1:0)>>>0},l=function(e,t,r,n,i,o,s,a){return t+n+o+a>>>0},n=function(e,t,r,n,i,o,s,a,c,u){var d=0,f=t;return d+=(f=f+n>>>0)<t?1:0,d+=(f=f+o>>>0)<o?1:0,d+=(f=f+a>>>0)<a?1:0,e+r+i+s+c+(d+=(f=f+u>>>0)<u?1:0)>>>0},y=function(e,t,r,n,i,o,s,a,c,u){return t+n+o+a+u>>>0},u=function(e,t,r){return(t<<32-r|e>>>r)>>>0},b=function(e,t,r){return(e<<32-r|t>>>r)>>>0},i=function(e,t,r){return e>>>r},a=function(e,t,r){return(e<<32-r|t>>>r)>>>0}})),s.register("2iOll",(function(e,t){var n;r(e.exports,"BlockHash",(function(){return n}),(function(e){return n=e}));var i=s("8XJ1q"),o=s("8AJKQ");function a(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}n=a,a.prototype.update=function(e,t){if(e=i.toArray(e,t),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){var r=(e=this.pending).length%this._delta8;this.pending=e.slice(e.length-r,e.length),0===this.pending.length&&(this.pending=null),e=i.join32(e,0,e.length-r,this.endian);for(var n=0;n<e.length;n+=this._delta32)this._update(e,n,n+this._delta32)}return this},a.prototype.digest=function(e){return this.update(this._pad()),o(null===this.pending),this._digest(e)},a.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,r=t-(e+this.padLength)%t,n=new Array(r+this.padLength);n[0]=128;for(var i=1;i<r;i++)n[i]=0;if(e<<=3,"big"===this.endian){for(var o=8;o<this.padLength;o++)n[i++]=0;n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=e>>>24&255,n[i++]=e>>>16&255,n[i++]=e>>>8&255,n[i++]=255&e}else for(n[i++]=255&e,n[i++]=e>>>8&255,n[i++]=e>>>16&255,n[i++]=e>>>24&255,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,o=8;o<this.padLength;o++)n[i++]=0;return n}})),s.register("kW4Vw",(function(e,t){var n,i,o,a,c;r(e.exports,"sha512",(function(){return i}),(function(e){return i=e})),r(e.exports,"sha1",(function(){return c}),(function(e){return c=e})),r(e.exports,"sha224",(function(){return a}),(function(e){return a=e})),r(e.exports,"sha256",(function(){return o}),(function(e){return o=e})),r(e.exports,"sha384",(function(){return n}),(function(e){return n=e})),c=s("2PL0y"),a=s("gcis2"),o=s("16i5m"),n=s("9jgZ8"),i=s("8M7BE")})),s.register("2PL0y",(function(e,t){"use strict";var r=s("8XJ1q"),n=s("2iOll"),i=s("27WyY"),o=r.rotl32,a=r.sum32,c=r.sum32_5,u=i.ft_1,d=n.BlockHash,f=[1518500249,1859775393,2400959708,3395469782];function l(){if(!(this instanceof l))return new l;d.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}r.inherits(l,d),e.exports=l,l.blockSize=512,l.outSize=160,l.hmacStrength=80,l.padLength=64,l.prototype._update=function(e,t){for(var r=this.W,n=0;n<16;n++)r[n]=e[t+n];for(;n<r.length;n++)r[n]=o(r[n-3]^r[n-8]^r[n-14]^r[n-16],1);var i=this.h[0],s=this.h[1],d=this.h[2],l=this.h[3],h=this.h[4];for(n=0;n<r.length;n++){var p=~~(n/20),m=c(o(i,5),u(p,s,d,l),h,r[n],f[p]);h=l,l=d,d=o(s,30),s=i,i=m}this.h[0]=a(this.h[0],i),this.h[1]=a(this.h[1],s),this.h[2]=a(this.h[2],d),this.h[3]=a(this.h[3],l),this.h[4]=a(this.h[4],h)},l.prototype._digest=function(e){return"hex"===e?r.toHex32(this.h,"big"):r.split32(this.h,"big")}})),s.register("27WyY",(function(e,t){var n,i,o,a,c,u,d;r(e.exports,"s0_256",(function(){return d}),(function(e){return d=e})),r(e.exports,"g0_256",(function(){return a}),(function(e){return a=e})),r(e.exports,"s1_256",(function(){return i}),(function(e){return i=e})),r(e.exports,"ft_1",(function(){return c}),(function(e){return c=e})),r(e.exports,"ch32",(function(){return u}),(function(e){return u=e})),r(e.exports,"maj32",(function(){return n}),(function(e){return n=e})),r(e.exports,"g1_256",(function(){return o}),(function(e){return o=e}));var f=s("8XJ1q").rotr32;function l(e,t,r){return e&t^~e&r}function h(e,t,r){return e&t^e&r^t&r}function p(e,t,r){return e^t^r}c=function(e,t,r,n){return 0===e?l(t,r,n):1===e||3===e?p(t,r,n):2===e?h(t,r,n):void 0},u=l,n=h,d=function(e){return f(e,2)^f(e,13)^f(e,22)},i=function(e){return f(e,6)^f(e,11)^f(e,25)},a=function(e){return f(e,7)^f(e,18)^e>>>3},o=function(e){return f(e,17)^f(e,19)^e>>>10}})),s.register("gcis2",(function(e,t){"use strict";var r=s("8XJ1q"),n=s("16i5m");function i(){if(!(this instanceof i))return new i;n.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}r.inherits(i,n),e.exports=i,i.blockSize=512,i.outSize=224,i.hmacStrength=192,i.padLength=64,i.prototype._digest=function(e){return"hex"===e?r.toHex32(this.h.slice(0,7),"big"):r.split32(this.h.slice(0,7),"big")}})),s.register("16i5m",(function(e,t){"use strict";var r=s("8XJ1q"),n=s("2iOll"),i=s("27WyY"),o=s("8AJKQ"),a=r.sum32,c=r.sum32_4,u=r.sum32_5,d=i.ch32,f=i.maj32,l=i.s0_256,h=i.s1_256,p=i.g0_256,m=i.g1_256,y=n.BlockHash,b=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function g(){if(!(this instanceof g))return new g;y.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=b,this.W=new Array(64)}r.inherits(g,y),e.exports=g,g.blockSize=512,g.outSize=256,g.hmacStrength=192,g.padLength=64,g.prototype._update=function(e,t){for(var r=this.W,n=0;n<16;n++)r[n]=e[t+n];for(;n<r.length;n++)r[n]=c(m(r[n-2]),r[n-7],p(r[n-15]),r[n-16]);var i=this.h[0],s=this.h[1],y=this.h[2],b=this.h[3],g=this.h[4],v=this.h[5],w=this.h[6],x=this.h[7];for(o(this.k.length===r.length),n=0;n<r.length;n++){var P=u(x,h(g),d(g,v,w),this.k[n],r[n]),k=a(l(i),f(i,s,y));x=w,w=v,v=g,g=a(b,P),b=y,y=s,s=i,i=a(P,k)}this.h[0]=a(this.h[0],i),this.h[1]=a(this.h[1],s),this.h[2]=a(this.h[2],y),this.h[3]=a(this.h[3],b),this.h[4]=a(this.h[4],g),this.h[5]=a(this.h[5],v),this.h[6]=a(this.h[6],w),this.h[7]=a(this.h[7],x)},g.prototype._digest=function(e){return"hex"===e?r.toHex32(this.h,"big"):r.split32(this.h,"big")}})),s.register("9jgZ8",(function(e,t){"use strict";var r=s("8XJ1q"),n=s("8M7BE");function i(){if(!(this instanceof i))return new i;n.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}r.inherits(i,n),e.exports=i,i.blockSize=1024,i.outSize=384,i.hmacStrength=192,i.padLength=128,i.prototype._digest=function(e){return"hex"===e?r.toHex32(this.h.slice(0,12),"big"):r.split32(this.h.slice(0,12),"big")}})),s.register("8M7BE",(function(e,t){"use strict";var r=s("8XJ1q"),n=s("2iOll"),i=s("8AJKQ"),o=r.rotr64_hi,a=r.rotr64_lo,c=r.shr64_hi,u=r.shr64_lo,d=r.sum64,f=r.sum64_hi,l=r.sum64_lo,h=r.sum64_4_hi,p=r.sum64_4_lo,m=r.sum64_5_hi,y=r.sum64_5_lo,b=n.BlockHash,g=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function v(){if(!(this instanceof v))return new v;b.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=g,this.W=new Array(160)}function w(e,t,r,n,i){var o=e&r^~e&i;return o<0&&(o+=4294967296),o}function x(e,t,r,n,i,o){var s=t&n^~t&o;return s<0&&(s+=4294967296),s}function P(e,t,r,n,i){var o=e&r^e&i^r&i;return o<0&&(o+=4294967296),o}function k(e,t,r,n,i,o){var s=t&n^t&o^n&o;return s<0&&(s+=4294967296),s}function T(e,t){var r=o(e,t,28)^o(t,e,2)^o(t,e,7);return r<0&&(r+=4294967296),r}function S(e,t){var r=a(e,t,28)^a(t,e,2)^a(t,e,7);return r<0&&(r+=4294967296),r}function M(e,t){var r=o(e,t,14)^o(e,t,18)^o(t,e,9);return r<0&&(r+=4294967296),r}function A(e,t){var r=a(e,t,14)^a(e,t,18)^a(t,e,9);return r<0&&(r+=4294967296),r}function N(e,t){var r=o(e,t,1)^o(e,t,8)^c(e,t,7);return r<0&&(r+=4294967296),r}function O(e,t){var r=a(e,t,1)^a(e,t,8)^u(e,t,7);return r<0&&(r+=4294967296),r}function H(e,t){var r=o(e,t,19)^o(t,e,29)^c(e,t,6);return r<0&&(r+=4294967296),r}function I(e,t){var r=a(e,t,19)^a(t,e,29)^u(e,t,6);return r<0&&(r+=4294967296),r}r.inherits(v,b),e.exports=v,v.blockSize=1024,v.outSize=512,v.hmacStrength=192,v.padLength=128,v.prototype._prepareBlock=function(e,t){for(var r=this.W,n=0;n<32;n++)r[n]=e[t+n];for(;n<r.length;n+=2){var i=H(r[n-4],r[n-3]),o=I(r[n-4],r[n-3]),s=r[n-14],a=r[n-13],c=N(r[n-30],r[n-29]),u=O(r[n-30],r[n-29]),d=r[n-32],f=r[n-31];r[n]=h(i,o,s,a,c,u,d,f),r[n+1]=p(i,o,s,a,c,u,d,f)}},v.prototype._update=function(e,t){this._prepareBlock(e,t);var r=this.W,n=this.h[0],o=this.h[1],s=this.h[2],a=this.h[3],c=this.h[4],u=this.h[5],h=this.h[6],p=this.h[7],b=this.h[8],g=this.h[9],v=this.h[10],N=this.h[11],O=this.h[12],H=this.h[13],I=this.h[14],V=this.h[15];i(this.k.length===r.length);for(var E=0;E<r.length;E+=2){var z=I,C=V,j=M(b,g),L=A(b,g),R=w(b,g,v,N,O),B=x(b,g,v,N,O,H),D=this.k[E],X=this.k[E+1],q=r[E],W=r[E+1],F=m(z,C,j,L,R,B,D,X,q,W),U=y(z,C,j,L,R,B,D,X,q,W);z=T(n,o),C=S(n,o),j=P(n,o,s,a,c),L=k(n,o,s,a,c,u);var G=f(z,C,j,L),Z=l(z,C,j,L);I=O,V=H,O=v,H=N,v=b,N=g,b=f(h,p,F,U),g=l(p,p,F,U),h=c,p=u,c=s,u=a,s=n,a=o,n=f(F,U,G,Z),o=l(F,U,G,Z)}d(this.h,0,n,o),d(this.h,2,s,a),d(this.h,4,c,u),d(this.h,6,h,p),d(this.h,8,b,g),d(this.h,10,v,N),d(this.h,12,O,H),d(this.h,14,I,V)},v.prototype._digest=function(e){return"hex"===e?r.toHex32(this.h,"big"):r.split32(this.h,"big")}})),s.register("8lcL1",(function(e,t){var n;r(e.exports,"ripemd160",(function(){return n}),(function(e){return n=e}));var i=s("8XJ1q"),o=s("2iOll"),a=i.rotl32,c=i.sum32,u=i.sum32_3,d=i.sum32_4,f=o.BlockHash;function l(){if(!(this instanceof l))return new l;f.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function h(e,t,r,n){return e<=15?t^r^n:e<=31?t&r|~t&n:e<=47?(t|~r)^n:e<=63?t&n|r&~n:t^(r|~n)}function p(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function m(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}i.inherits(l,f),n=l,l.blockSize=512,l.outSize=160,l.hmacStrength=192,l.padLength=64,l.prototype._update=function(e,t){for(var r=this.h[0],n=this.h[1],i=this.h[2],o=this.h[3],s=this.h[4],f=r,l=n,w=i,x=o,P=s,k=0;k<80;k++){var T=c(a(d(r,h(k,n,i,o),e[y[k]+t],p(k)),g[k]),s);r=s,s=o,o=a(i,10),i=n,n=T,T=c(a(d(f,h(79-k,l,w,x),e[b[k]+t],m(k)),v[k]),P),f=P,P=x,x=a(w,10),w=l,l=T}T=u(this.h[1],i,x),this.h[1]=u(this.h[2],o,P),this.h[2]=u(this.h[3],s,f),this.h[3]=u(this.h[4],r,l),this.h[4]=u(this.h[0],n,w),this.h[0]=T},l.prototype._digest=function(e){return"hex"===e?i.toHex32(this.h,"little"):i.split32(this.h,"little")};var y=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],b=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],g=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],v=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]})),s.register("aR8zr",(function(e,t){"use strict";var r=s("8XJ1q"),n=s("8AJKQ");function i(e,t,n){if(!(this instanceof i))return new i(e,t,n);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(r.toArray(t,n))}e.exports=i,i.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),n(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;for(this.inner=(new this.Hash).update(e),t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e)},i.prototype.update=function(e,t){return this.inner.update(e,t),this},i.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)}})),s.register("igLRx",(function(e,t){e.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}})),gh.curves=s("fQBtr"),s.register("2DnIK",(function(e,t){"use strict";var r=s("ctT9w"),n=s("3dESM"),i=s("fc2cL"),o=s("fQBtr"),a=s("jblZ4"),c=i.assert,u=s("2i07O"),d=s("fXHad");function f(e){if(!(this instanceof f))return new f(e);"string"==typeof e&&(c(Object.prototype.hasOwnProperty.call(o,e),"Unknown curve "+e),e=o[e]),e instanceof o.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}e.exports=f,f.prototype.keyPair=function(e){return new u(this,e)},f.prototype.keyFromPrivate=function(e,t){return u.fromPrivate(this,e,t)},f.prototype.keyFromPublic=function(e,t){return u.fromPublic(this,e,t)},f.prototype.genKeyPair=function(e){e||(e={});for(var t=new n({hash:this.hash,pers:e.pers,persEnc:e.persEnc||"utf8",entropy:e.entropy||a(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||"utf8",nonce:this.n.toArray()}),i=this.n.byteLength(),o=this.n.sub(new r(2));;){var s=new r(t.generate(i));if(!(s.cmp(o)>0))return s.iaddn(1),this.keyFromPrivate(s)}},f.prototype._truncateToN=function(e,t){var r=8*e.byteLength()-this.n.bitLength();return r>0&&(e=e.ushrn(r)),!t&&e.cmp(this.n)>=0?e.sub(this.n):e},f.prototype.sign=function(e,t,i,o){"object"==typeof i&&(o=i,i=null),o||(o={}),t=this.keyFromPrivate(t,i),e=this._truncateToN(new r(e,16));for(var s=this.n.byteLength(),a=t.getPrivate().toArray("be",s),c=e.toArray("be",s),u=new n({hash:this.hash,entropy:a,nonce:c,pers:o.pers,persEnc:o.persEnc||"utf8"}),f=this.n.sub(new r(1)),l=0;;l++){var h=o.k?o.k(l):new r(u.generate(this.n.byteLength()));if(!((h=this._truncateToN(h,!0)).cmpn(1)<=0||h.cmp(f)>=0)){var p=this.g.mul(h);if(!p.isInfinity()){var m=p.getX(),y=m.umod(this.n);if(0!==y.cmpn(0)){var b=h.invm(this.n).mul(y.mul(t.getPrivate()).iadd(e));if(0!==(b=b.umod(this.n)).cmpn(0)){var g=(p.getY().isOdd()?1:0)|(0!==m.cmp(y)?2:0);return o.canonical&&b.cmp(this.nh)>0&&(b=this.n.sub(b),g^=1),new d({r:y,s:b,recoveryParam:g})}}}}}},f.prototype.verify=function(e,t,n,i){e=this._truncateToN(new r(e,16)),n=this.keyFromPublic(n,i);var o=(t=new d(t,"hex")).r,s=t.s;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return!1;var a,c=s.invm(this.n),u=c.mul(e).umod(this.n),f=c.mul(o).umod(this.n);return this.curve._maxwellTrick?!(a=this.g.jmulAdd(u,n.getPublic(),f)).isInfinity()&&a.eqXToP(o):!(a=this.g.mulAdd(u,n.getPublic(),f)).isInfinity()&&0===a.getX().umod(this.n).cmp(o)},f.prototype.recoverPubKey=function(e,t,n,i){c((3&n)===n,"The recovery param is more than two bits"),t=new d(t,i);var o=this.n,s=new r(e),a=t.r,u=t.s,f=1&n,l=n>>1;if(a.cmp(this.curve.p.umod(this.curve.n))>=0&&l)throw new Error("Unable to find sencond key candinate");a=l?this.curve.pointFromX(a.add(this.curve.n),f):this.curve.pointFromX(a,f);var h=t.r.invm(o),p=o.sub(s).mul(h).umod(o),m=u.mul(h).umod(o);return this.g.mulAdd(p,a,m)},f.prototype.getKeyRecoveryParam=function(e,t,r,n){if(null!==(t=new d(t,n)).recoveryParam)return t.recoveryParam;for(var i=0;i<4;i++){var o;try{o=this.recoverPubKey(e,t,i)}catch(e){continue}if(o.eq(r))return i}throw new Error("Unable to find valid recovery factor")}})),s.register("3dESM",(function(e,t){"use strict";var r=s("an3oG"),n=s("8qfki"),i=s("8AJKQ");function o(e){if(!(this instanceof o))return new o(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var t=n.toArray(e.entropy,e.entropyEnc||"hex"),r=n.toArray(e.nonce,e.nonceEnc||"hex"),s=n.toArray(e.pers,e.persEnc||"hex");i(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(t,r,s)}e.exports=o,o.prototype._init=function(e,t,r){var n=e.concat(t).concat(r);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++)this.K[i]=0,this.V[i]=1;this._update(n),this._reseed=1,this.reseedInterval=281474976710656},o.prototype._hmac=function(){return new r.hmac(this.hash,this.K)},o.prototype._update=function(e){var t=this._hmac().update(this.V).update([0]);e&&(t=t.update(e)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest())},o.prototype.reseed=function(e,t,r,o){"string"!=typeof t&&(o=r,r=t,t=null),e=n.toArray(e,t),r=n.toArray(r,o),i(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(r||[])),this._reseed=1},o.prototype.generate=function(e,t,r,i){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof t&&(i=r,r=t,t=null),r&&(r=n.toArray(r,i||"hex"),this._update(r));for(var o=[];o.length<e;)this.V=this._hmac().update(this.V).digest(),o=o.concat(this.V);var s=o.slice(0,e);return this._update(r),this._reseed++,n.encode(s,t)}})),s.register("2i07O",(function(e,t){"use strict";var r=s("ctT9w"),n=s("fc2cL").assert;function i(e,t){this.ec=e,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc)}e.exports=i,i.fromPublic=function(e,t,r){return t instanceof i?t:new i(e,{pub:t,pubEnc:r})},i.fromPrivate=function(e,t,r){return t instanceof i?t:new i(e,{priv:t,privEnc:r})},i.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:"Invalid public key"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},i.prototype.getPublic=function(e,t){return"string"==typeof e&&(t=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,e):this.pub},i.prototype.getPrivate=function(e){return"hex"===e?this.priv.toString(16,2):this.priv},i.prototype._importPrivate=function(e,t){this.priv=new r(e,t||16),this.priv=this.priv.umod(this.ec.curve.n)},i.prototype._importPublic=function(e,t){if(e.x||e.y)return"mont"===this.ec.curve.type?n(e.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||n(e.x&&e.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(e.x,e.y));this.pub=this.ec.curve.decodePoint(e,t)},i.prototype.derive=function(e){return e.validate()||n(e.validate(),"public point not validated"),e.mul(this.priv).getX()},i.prototype.sign=function(e,t,r){return this.ec.sign(e,this,t,r)},i.prototype.verify=function(e,t){return this.ec.verify(e,t,this)},i.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}})),s.register("fXHad",(function(e,t){"use strict";var r=s("ctT9w"),n=s("fc2cL"),i=n.assert;function o(e,t){if(e instanceof o)return e;this._importDER(e,t)||(i(e.r&&e.s,"Signature without r or s"),this.r=new r(e.r,16),this.s=new r(e.s,16),void 0===e.recoveryParam?this.recoveryParam=null:this.recoveryParam=e.recoveryParam)}function a(){this.place=0}function c(e,t){var r=e[t.place++];if(!(128&r))return r;var n=15&r;if(0===n||n>4)return!1;for(var i=0,o=0,s=t.place;o<n;o++,s++)i<<=8,i|=e[s],i>>>=0;return!(i<=127)&&(t.place=s,i)}function u(e){for(var t=0,r=e.length-1;!e[t]&&!(128&e[t+1])&&t<r;)t++;return 0===t?e:e.slice(t)}function d(e,t){if(t<128)e.push(t);else{var r=1+(Math.log(t)/Math.LN2>>>3);for(e.push(128|r);--r;)e.push(t>>>(r<<3)&255);e.push(t)}}e.exports=o,o.prototype._importDER=function(e,t){e=n.toArray(e,t);var i=new a;if(48!==e[i.place++])return!1;var o=c(e,i);if(!1===o)return!1;if(o+i.place!==e.length)return!1;if(2!==e[i.place++])return!1;var s=c(e,i);if(!1===s)return!1;var u=e.slice(i.place,s+i.place);if(i.place+=s,2!==e[i.place++])return!1;var d=c(e,i);if(!1===d)return!1;if(e.length!==d+i.place)return!1;var f=e.slice(i.place,d+i.place);if(0===u[0]){if(!(128&u[1]))return!1;u=u.slice(1)}if(0===f[0]){if(!(128&f[1]))return!1;f=f.slice(1)}return this.r=new r(u),this.s=new r(f),this.recoveryParam=null,!0},o.prototype.toDER=function(e){var t=this.r.toArray(),r=this.s.toArray();for(128&t[0]&&(t=[0].concat(t)),128&r[0]&&(r=[0].concat(r)),t=u(t),r=u(r);!(r[0]||128&r[1]);)r=r.slice(1);var i=[2];d(i,t.length),(i=i.concat(t)).push(2),d(i,r.length);var o=i.concat(r),s=[48];return d(s,o.length),s=s.concat(o),n.encode(s,e)}})),gh.ec=s("2DnIK"),s.register("2uSTg",(function(e,t){"use strict";var r=s("an3oG"),n=s("fQBtr"),i=s("fc2cL"),o=i.assert,a=i.parseBytes,c=s("42ZR8"),u=s("YPoEO");function d(e){if(o("ed25519"===e,"only tested with ed25519 so far"),!(this instanceof d))return new d(e);e=n[e].curve,this.curve=e,this.g=e.g,this.g.precompute(e.n.bitLength()+1),this.pointClass=e.point().constructor,this.encodingLength=Math.ceil(e.n.bitLength()/8),this.hash=r.sha512}e.exports=d,d.prototype.sign=function(e,t){e=a(e);var r=this.keyFromSecret(t),n=this.hashInt(r.messagePrefix(),e),i=this.g.mul(n),o=this.encodePoint(i),s=this.hashInt(o,r.pubBytes(),e).mul(r.priv()),c=n.add(s).umod(this.curve.n);return this.makeSignature({R:i,S:c,Rencoded:o})},d.prototype.verify=function(e,t,r){e=a(e),t=this.makeSignature(t);var n=this.keyFromPublic(r),i=this.hashInt(t.Rencoded(),n.pubBytes(),e),o=this.g.mul(t.S());return t.R().add(n.pub().mul(i)).eq(o)},d.prototype.hashInt=function(){for(var e=this.hash(),t=0;t<arguments.length;t++)e.update(arguments[t]);return i.intFromLE(e.digest()).umod(this.curve.n)},d.prototype.keyFromPublic=function(e){return c.fromPublic(this,e)},d.prototype.keyFromSecret=function(e){return c.fromSecret(this,e)},d.prototype.makeSignature=function(e){return e instanceof u?e:new u(this,e)},d.prototype.encodePoint=function(e){var t=e.getY().toArray("le",this.encodingLength);return t[this.encodingLength-1]|=e.getX().isOdd()?128:0,t},d.prototype.decodePoint=function(e){var t=(e=i.parseBytes(e)).length-1,r=e.slice(0,t).concat(-129&e[t]),n=0!=(128&e[t]),o=i.intFromLE(r);return this.curve.pointFromY(o,n)},d.prototype.encodeInt=function(e){return e.toArray("le",this.encodingLength)},d.prototype.decodeInt=function(e){return i.intFromLE(e)},d.prototype.isPoint=function(e){return e instanceof this.pointClass}})),s.register("42ZR8",(function(e,t){"use strict";var r=s("fc2cL"),n=r.assert,i=r.parseBytes,o=r.cachedProperty;function a(e,t){this.eddsa=e,this._secret=i(t.secret),e.isPoint(t.pub)?this._pub=t.pub:this._pubBytes=i(t.pub)}a.fromPublic=function(e,t){return t instanceof a?t:new a(e,{pub:t})},a.fromSecret=function(e,t){return t instanceof a?t:new a(e,{secret:t})},a.prototype.secret=function(){return this._secret},o(a,"pubBytes",(function(){return this.eddsa.encodePoint(this.pub())})),o(a,"pub",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),o(a,"privBytes",(function(){var e=this.eddsa,t=this.hash(),r=e.encodingLength-1,n=t.slice(0,e.encodingLength);return n[0]&=248,n[r]&=127,n[r]|=64,n})),o(a,"priv",(function(){return this.eddsa.decodeInt(this.privBytes())})),o(a,"hash",(function(){return this.eddsa.hash().update(this.secret()).digest()})),o(a,"messagePrefix",(function(){return this.hash().slice(this.eddsa.encodingLength)})),a.prototype.sign=function(e){return n(this._secret,"KeyPair can only verify"),this.eddsa.sign(e,this)},a.prototype.verify=function(e,t){return this.eddsa.verify(e,t,this)},a.prototype.getSecret=function(e){return n(this._secret,"KeyPair is public only"),r.encode(this.secret(),e)},a.prototype.getPublic=function(e){return r.encode(this.pubBytes(),e)},e.exports=a})),s.register("YPoEO",(function(e,t){"use strict";var r=s("ctT9w"),n=s("fc2cL"),i=n.assert,o=n.cachedProperty,a=n.parseBytes;function c(e,t){this.eddsa=e,"object"!=typeof t&&(t=a(t)),Array.isArray(t)&&(t={R:t.slice(0,e.encodingLength),S:t.slice(e.encodingLength)}),i(t.R&&t.S,"Signature without R or S"),e.isPoint(t.R)&&(this._R=t.R),t.S instanceof r&&(this._S=t.S),this._Rencoded=Array.isArray(t.R)?t.R:t.Rencoded,this._Sencoded=Array.isArray(t.S)?t.S:t.Sencoded}o(c,"S",(function(){return this.eddsa.decodeInt(this.Sencoded())})),o(c,"R",(function(){return this.eddsa.decodePoint(this.Rencoded())})),o(c,"Rencoded",(function(){return this.eddsa.encodePoint(this.R())})),o(c,"Sencoded",(function(){return this.eddsa.encodeInt(this.S())})),c.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},c.prototype.toHex=function(){return n.encode(this.toBytes(),"hex").toUpperCase()},e.exports=c})),gh.eddsa=s("2uSTg");const vh=new(e(bh).ec)("secp256k1");function wh(e){return[33,65].includes(e.length)&&(e=mh(function(e){k([33,65].includes(e.length),"Invalid publicKey provided");const t=vh.keyFromPublic(e).getPublic();return zt(Wt(t.getX(),yh),Wt(t.getY(),yh))}(e))),e.slice(-20)}function xh(e){return!(!e||42!==e.length||!Y(e))&&(!(!/^(0x)?[0-9a-f]{40}$/.test(e)&&!/^(0x)?[0-9A-F]{40}$/.test(e))||function(e){const t=e.replace("0x",""),r=Lt(mh(t.toLowerCase()),-1,!1);for(let e=0;e<40;e++)if(n=t[e],i=parseInt(r[e],16),n!==(i>7?n.toUpperCase():n.toLowerCase()))return!1;var n,i;return!0}(e))}var Ph;X=s("ctT9w");function kh(t,r){return function(t,r){return e(Ph).h64(Et(t).buffer,r)}(t,r).toString(16)}function Th(t,r){return new(e(X))(kh(t,r),16)}function Sh(e,t=64,r){const n=Math.ceil(t/64),i=Et(e);if(ah(r))return Vl(i,n);const o=new Uint8Array(Math.ceil(t/8));for(let e=0;e<n;e++)o.set(Th(i,e).toArray("le",8),8*e);return o}s.register("8B2rJ",(function(e,t){var r=de,n=s("9eBgQ").UINT32;n.prototype.xxh_update=function(e,t){var r,n,s=o._low,a=o._high;r=(n=e*s)>>>16,r+=t*s,r&=65535,r+=e*a;var c=this._low+(65535&n),u=c>>>16,d=(u+=this._high+(65535&r))<<16|65535&c;u=(d=d<<13|d>>>19)>>>16,r=(n=(c=65535&d)*(s=i._low))>>>16,r+=u*s,r&=65535,r+=c*(a=i._high),this._low=65535&n,this._high=65535&r};var i=n("2654435761"),o=n("2246822519"),a=n("3266489917"),c=n("668265263"),u=n("374761393");function d(){return 2==arguments.length?new d(arguments[1]).update(arguments[0]).digest():this instanceof d?void f.call(this,arguments[0]):new d(arguments[0])}function f(e){return this.seed=e instanceof n?e.clone():n(e),this.v1=this.seed.clone().add(i).add(o),this.v2=this.seed.clone().add(o),this.v3=this.seed.clone(),this.v4=this.seed.clone().subtract(i),this.total_len=0,this.memsize=0,this.memory=null,this}d.prototype.init=f,d.prototype.update=function(e){var t,n="string"==typeof e;n&&(e=function(e){for(var t=[],r=0,n=e.length;r<n;r++){var i=e.charCodeAt(r);i<128?t.push(i):i<2048?t.push(192|i>>6,128|63&i):i<55296||i>=57344?t.push(224|i>>12,128|i>>6&63,128|63&i):(r++,i=65536+((1023&i)<<10|1023&e.charCodeAt(r)),t.push(240|i>>18,128|i>>12&63,128|i>>6&63,128|63&i))}return new Uint8Array(t)}(e),n=!1,t=!0),"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer&&(t=!0,e=new Uint8Array(e));var i=0,o=e.length,s=i+o;if(0==o)return this;if(this.total_len+=o,0==this.memsize&&(this.memory=n?"":t?new Uint8Array(16):new r(16)),this.memsize+o<16)return n?this.memory+=e:t?this.memory.set(e.subarray(0,o),this.memsize):e.copy(this.memory,this.memsize,0,o),this.memsize+=o,this;if(this.memsize>0){n?this.memory+=e.slice(0,16-this.memsize):t?this.memory.set(e.subarray(0,16-this.memsize),this.memsize):e.copy(this.memory,this.memsize,0,16-this.memsize);var a=0;n?(this.v1.xxh_update(this.memory.charCodeAt(a+1)<<8|this.memory.charCodeAt(a),this.memory.charCodeAt(a+3)<<8|this.memory.charCodeAt(a+2)),a+=4,this.v2.xxh_update(this.memory.charCodeAt(a+1)<<8|this.memory.charCodeAt(a),this.memory.charCodeAt(a+3)<<8|this.memory.charCodeAt(a+2)),a+=4,this.v3.xxh_update(this.memory.charCodeAt(a+1)<<8|this.memory.charCodeAt(a),this.memory.charCodeAt(a+3)<<8|this.memory.charCodeAt(a+2)),a+=4,this.v4.xxh_update(this.memory.charCodeAt(a+1)<<8|this.memory.charCodeAt(a),this.memory.charCodeAt(a+3)<<8|this.memory.charCodeAt(a+2))):(this.v1.xxh_update(this.memory[a+1]<<8|this.memory[a],this.memory[a+3]<<8|this.memory[a+2]),a+=4,this.v2.xxh_update(this.memory[a+1]<<8|this.memory[a],this.memory[a+3]<<8|this.memory[a+2]),a+=4,this.v3.xxh_update(this.memory[a+1]<<8|this.memory[a],this.memory[a+3]<<8|this.memory[a+2]),a+=4,this.v4.xxh_update(this.memory[a+1]<<8|this.memory[a],this.memory[a+3]<<8|this.memory[a+2])),i+=16-this.memsize,this.memsize=0,n&&(this.memory="")}if(i<=s-16){var c=s-16;do{n?(this.v1.xxh_update(e.charCodeAt(i+1)<<8|e.charCodeAt(i),e.charCodeAt(i+3)<<8|e.charCodeAt(i+2)),i+=4,this.v2.xxh_update(e.charCodeAt(i+1)<<8|e.charCodeAt(i),e.charCodeAt(i+3)<<8|e.charCodeAt(i+2)),i+=4,this.v3.xxh_update(e.charCodeAt(i+1)<<8|e.charCodeAt(i),e.charCodeAt(i+3)<<8|e.charCodeAt(i+2)),i+=4,this.v4.xxh_update(e.charCodeAt(i+1)<<8|e.charCodeAt(i),e.charCodeAt(i+3)<<8|e.charCodeAt(i+2))):(this.v1.xxh_update(e[i+1]<<8|e[i],e[i+3]<<8|e[i+2]),i+=4,this.v2.xxh_update(e[i+1]<<8|e[i],e[i+3]<<8|e[i+2]),i+=4,this.v3.xxh_update(e[i+1]<<8|e[i],e[i+3]<<8|e[i+2]),i+=4,this.v4.xxh_update(e[i+1]<<8|e[i],e[i+3]<<8|e[i+2])),i+=4}while(i<=c)}return i<s&&(n?this.memory+=e.slice(i):t?this.memory.set(e.subarray(i,s),this.memsize):e.copy(this.memory,this.memsize,i,s),this.memsize=s-i),this},d.prototype.digest=function(){var e,t,r=this.memory,s="string"==typeof r,d=0,f=this.memsize,l=new n;for((e=this.total_len>=16?this.v1.rotl(1).add(this.v2.rotl(7).add(this.v3.rotl(12).add(this.v4.rotl(18)))):this.seed.clone().add(u)).add(l.fromNumber(this.total_len));d<=f-4;)s?l.fromBits(r.charCodeAt(d+1)<<8|r.charCodeAt(d),r.charCodeAt(d+3)<<8|r.charCodeAt(d+2)):l.fromBits(r[d+1]<<8|r[d],r[d+3]<<8|r[d+2]),e.add(l.multiply(a)).rotl(17).multiply(c),d+=4;for(;d<f;)l.fromBits(s?r.charCodeAt(d++):r[d++],0),e.add(l.multiply(u)).rotl(11).multiply(i);return t=e.clone().shiftRight(15),e.xor(t).multiply(o),t=e.clone().shiftRight(13),e.xor(t).multiply(a),t=e.clone().shiftRight(16),e.xor(t),this.init(this.seed),e},e.exports=d})),s.register("9eBgQ",(function(e,t){var n,i;r(e.exports,"UINT32",(function(){return n}),(function(e){return n=e})),r(e.exports,"UINT64",(function(){return i}),(function(e){return i=e})),n=s("booHq"),i=s("5GRKr")})),s.register("booHq",(function(e,t){!function(t){r(Math.pow(36,5)),r(Math.pow(16,7)),r(Math.pow(10,9)),r(Math.pow(2,30)),r(36),r(16),r(10),r(2);function r(e,t){return this instanceof r?(this._low=0,this._high=0,this.remainder=null,void 0===t?i.call(this,e):"string"==typeof e?o.call(this,e,t):void n.call(this,e,t)):new r(e,t)}function n(e,t){return this._low=0|e,this._high=0|t,this}function i(e){return this._low=65535&e,this._high=e>>>16,this}function o(e,t){var r=parseInt(e,t||10);return this._low=65535&r,this._high=r>>>16,this}r.prototype.fromBits=n,r.prototype.fromNumber=i,r.prototype.fromString=o,r.prototype.toNumber=function(){return 65536*this._high+this._low},r.prototype.toString=function(e){return this.toNumber().toString(e||10)},r.prototype.add=function(e){var t=this._low+e._low,r=t>>>16;return r+=this._high+e._high,this._low=65535&t,this._high=65535&r,this},r.prototype.subtract=function(e){return this.add(e.clone().negate())},r.prototype.multiply=function(e){var t,r,n=this._high,i=this._low,o=e._high,s=e._low;return t=(r=i*s)>>>16,t+=n*s,t&=65535,t+=i*o,this._low=65535&r,this._high=65535&t,this},r.prototype.div=function(e){if(0==e._low&&0==e._high)throw Error("division by zero");if(0==e._high&&1==e._low)return this.remainder=new r(0),this;if(e.gt(this))return this.remainder=this.clone(),this._low=0,this._high=0,this;if(this.eq(e))return this.remainder=new r(0),this._low=1,this._high=0,this;for(var t=e.clone(),n=-1;!this.lt(t);)t.shiftLeft(1,!0),n++;for(this.remainder=this.clone(),this._low=0,this._high=0;n>=0;n--)t.shiftRight(1),this.remainder.lt(t)||(this.remainder.subtract(t),n>=16?this._high|=1<<n-16:this._low|=1<<n);return this},r.prototype.negate=function(){var e=1+(65535&~this._low);return this._low=65535&e,this._high=~this._high+(e>>>16)&65535,this},r.prototype.equals=r.prototype.eq=function(e){return this._low==e._low&&this._high==e._high},r.prototype.greaterThan=r.prototype.gt=function(e){return this._high>e._high||!(this._high<e._high)&&this._low>e._low},r.prototype.lessThan=r.prototype.lt=function(e){return this._high<e._high||!(this._high>e._high)&&this._low<e._low},r.prototype.or=function(e){return this._low|=e._low,this._high|=e._high,this},r.prototype.and=function(e){return this._low&=e._low,this._high&=e._high,this},r.prototype.not=function(){return this._low=65535&~this._low,this._high=65535&~this._high,this},r.prototype.xor=function(e){return this._low^=e._low,this._high^=e._high,this},r.prototype.shiftRight=r.prototype.shiftr=function(e){return e>16?(this._low=this._high>>e-16,this._high=0):16==e?(this._low=this._high,this._high=0):(this._low=this._low>>e|this._high<<16-e&65535,this._high>>=e),this},r.prototype.shiftLeft=r.prototype.shiftl=function(e,t){return e>16?(this._high=this._low<<e-16,this._low=0,t||(this._high&=65535)):16==e?(this._high=this._low,this._low=0):(this._high=this._high<<e|this._low>>16-e,this._low=this._low<<e&65535,t||(this._high&=65535)),this},r.prototype.rotateLeft=r.prototype.rotl=function(e){var t=this._high<<16|this._low;return t=t<<e|t>>>32-e,this._low=65535&t,this._high=t>>>16,this},r.prototype.rotateRight=r.prototype.rotr=function(e){var t=this._high<<16|this._low;return t=t>>>e|t<<32-e,this._low=65535&t,this._high=t>>>16,this},r.prototype.clone=function(){return new r(this._low,this._high)},"undefined"!=typeof define&&define.amd?define([],(function(){return r})):e.exports?e.exports=r:t.UINT32=r}(e.exports)})),s.register("5GRKr",(function(e,t){!function(t){var r={16:i(Math.pow(16,5)),10:i(Math.pow(10,5)),2:i(Math.pow(2,5))},n={16:i(16),10:i(10),2:i(2)};function i(e,t,r,n){return this instanceof i?(this.remainder=null,"string"==typeof e?a.call(this,e,t):void 0===t?s.call(this,e):void o.apply(this,arguments)):new i(e,t,r,n)}function o(e,t,r,n){return void 0===r?(this._a00=65535&e,this._a16=e>>>16,this._a32=65535&t,this._a48=t>>>16,this):(this._a00=0|e,this._a16=0|t,this._a32=0|r,this._a48=0|n,this)}function s(e){return this._a00=65535&e,this._a16=e>>>16,this._a32=0,this._a48=0,this}function a(e,t){t=t||10,this._a00=0,this._a16=0,this._a32=0,this._a48=0;for(var n=r[t]||new i(Math.pow(t,5)),o=0,s=e.length;o<s;o+=5){var a=Math.min(5,s-o),c=parseInt(e.slice(o,o+a),t);this.multiply(a<5?new i(Math.pow(t,a)):n).add(new i(c))}return this}i.prototype.fromBits=o,i.prototype.fromNumber=s,i.prototype.fromString=a,i.prototype.toNumber=function(){return 65536*this._a16+this._a00},i.prototype.toString=function(e){var t=n[e=e||10]||new i(e);if(!this.gt(t))return this.toNumber().toString(e);for(var r=this.clone(),o=new Array(64),s=63;s>=0&&(r.div(t),o[s]=r.remainder.toNumber().toString(e),r.gt(t));s--);return o[s-1]=r.toNumber().toString(e),o.join("")},i.prototype.add=function(e){var t=this._a00+e._a00,r=t>>>16,n=(r+=this._a16+e._a16)>>>16,i=(n+=this._a32+e._a32)>>>16;return i+=this._a48+e._a48,this._a00=65535&t,this._a16=65535&r,this._a32=65535&n,this._a48=65535&i,this},i.prototype.subtract=function(e){return this.add(e.clone().negate())},i.prototype.multiply=function(e){var t=this._a00,r=this._a16,n=this._a32,i=this._a48,o=e._a00,s=e._a16,a=e._a32,c=t*o,u=c>>>16,d=(u+=t*s)>>>16;u&=65535,d+=(u+=r*o)>>>16;var f=(d+=t*a)>>>16;return d&=65535,f+=(d+=r*s)>>>16,d&=65535,f+=(d+=n*o)>>>16,f+=t*e._a48,f&=65535,f+=r*a,f&=65535,f+=n*s,f&=65535,f+=i*o,this._a00=65535&c,this._a16=65535&u,this._a32=65535&d,this._a48=65535&f,this},i.prototype.div=function(e){if(0==e._a16&&0==e._a32&&0==e._a48){if(0==e._a00)throw Error("division by zero");if(1==e._a00)return this.remainder=new i(0),this}if(e.gt(this))return this.remainder=this.clone(),this._a00=0,this._a16=0,this._a32=0,this._a48=0,this;if(this.eq(e))return this.remainder=new i(0),this._a00=1,this._a16=0,this._a32=0,this._a48=0,this;for(var t=e.clone(),r=-1;!this.lt(t);)t.shiftLeft(1,!0),r++;for(this.remainder=this.clone(),this._a00=0,this._a16=0,this._a32=0,this._a48=0;r>=0;r--)t.shiftRight(1),this.remainder.lt(t)||(this.remainder.subtract(t),r>=48?this._a48|=1<<r-48:r>=32?this._a32|=1<<r-32:r>=16?this._a16|=1<<r-16:this._a00|=1<<r);return this},i.prototype.negate=function(){var e=1+(65535&~this._a00);return this._a00=65535&e,e=(65535&~this._a16)+(e>>>16),this._a16=65535&e,e=(65535&~this._a32)+(e>>>16),this._a32=65535&e,this._a48=~this._a48+(e>>>16)&65535,this},i.prototype.equals=i.prototype.eq=function(e){return this._a48==e._a48&&this._a00==e._a00&&this._a32==e._a32&&this._a16==e._a16},i.prototype.greaterThan=i.prototype.gt=function(e){return this._a48>e._a48||!(this._a48<e._a48)&&(this._a32>e._a32||!(this._a32<e._a32)&&(this._a16>e._a16||!(this._a16<e._a16)&&this._a00>e._a00))},i.prototype.lessThan=i.prototype.lt=function(e){return this._a48<e._a48||!(this._a48>e._a48)&&(this._a32<e._a32||!(this._a32>e._a32)&&(this._a16<e._a16||!(this._a16>e._a16)&&this._a00<e._a00))},i.prototype.or=function(e){return this._a00|=e._a00,this._a16|=e._a16,this._a32|=e._a32,this._a48|=e._a48,this},i.prototype.and=function(e){return this._a00&=e._a00,this._a16&=e._a16,this._a32&=e._a32,this._a48&=e._a48,this},i.prototype.xor=function(e){return this._a00^=e._a00,this._a16^=e._a16,this._a32^=e._a32,this._a48^=e._a48,this},i.prototype.not=function(){return this._a00=65535&~this._a00,this._a16=65535&~this._a16,this._a32=65535&~this._a32,this._a48=65535&~this._a48,this},i.prototype.shiftRight=i.prototype.shiftr=function(e){return(e%=64)>=48?(this._a00=this._a48>>e-48,this._a16=0,this._a32=0,this._a48=0):e>=32?(e-=32,this._a00=65535&(this._a32>>e|this._a48<<16-e),this._a16=this._a48>>e&65535,this._a32=0,this._a48=0):e>=16?(e-=16,this._a00=65535&(this._a16>>e|this._a32<<16-e),this._a16=65535&(this._a32>>e|this._a48<<16-e),this._a32=this._a48>>e&65535,this._a48=0):(this._a00=65535&(this._a00>>e|this._a16<<16-e),this._a16=65535&(this._a16>>e|this._a32<<16-e),this._a32=65535&(this._a32>>e|this._a48<<16-e),this._a48=this._a48>>e&65535),this},i.prototype.shiftLeft=i.prototype.shiftl=function(e,t){return(e%=64)>=48?(this._a48=this._a00<<e-48,this._a32=0,this._a16=0,this._a00=0):e>=32?(e-=32,this._a48=this._a16<<e|this._a00>>16-e,this._a32=this._a00<<e&65535,this._a16=0,this._a00=0):e>=16?(e-=16,this._a48=this._a32<<e|this._a16>>16-e,this._a32=65535&(this._a16<<e|this._a00>>16-e),this._a16=this._a00<<e&65535,this._a00=0):(this._a48=this._a48<<e|this._a32>>16-e,this._a32=65535&(this._a32<<e|this._a16>>16-e),this._a16=65535&(this._a16<<e|this._a00>>16-e),this._a00=this._a00<<e&65535),t||(this._a48&=65535),this},i.prototype.rotateLeft=i.prototype.rotl=function(e){if(0==(e%=64))return this;if(e>=32){var t=this._a00;if(this._a00=this._a32,this._a32=t,t=this._a48,this._a48=this._a16,this._a16=t,32==e)return this;e-=32}var r=this._a48<<16|this._a32,n=this._a16<<16|this._a00,i=r<<e|n>>>32-e,o=n<<e|r>>>32-e;return this._a00=65535&o,this._a16=o>>>16,this._a32=65535&i,this._a48=i>>>16,this},i.prototype.rotateRight=i.prototype.rotr=function(e){if(0==(e%=64))return this;if(e>=32){var t=this._a00;if(this._a00=this._a32,this._a32=t,t=this._a48,this._a48=this._a16,this._a16=t,32==e)return this;e-=32}var r=this._a48<<16|this._a32,n=this._a16<<16|this._a00,i=r>>>e|n<<32-e,o=n>>>e|r<<32-e;return this._a00=65535&o,this._a16=o>>>16,this._a32=65535&i,this._a48=i>>>16,this},i.prototype.clone=function(){return new i(this._a00,this._a16,this._a32,this._a48)},"undefined"!=typeof define&&define.amd?define([],(function(){return i})):e.exports?e.exports=i:t.UINT64=i}(e.exports)})),s.register("2FDEb",(function(e,t){var r=de,n=s("9eBgQ").UINT64,i=n("11400714785074694791"),o=n("14029467366897019727"),a=n("1609587929392839161"),c=n("9650029242287828579"),u=n("2870177450012600261");function d(){return 2==arguments.length?new d(arguments[1]).update(arguments[0]).digest():this instanceof d?void f.call(this,arguments[0]):new d(arguments[0])}function f(e){return this.seed=e instanceof n?e.clone():n(e),this.v1=this.seed.clone().add(i).add(o),this.v2=this.seed.clone().add(o),this.v3=this.seed.clone(),this.v4=this.seed.clone().subtract(i),this.total_len=0,this.memsize=0,this.memory=null,this}d.prototype.init=f,d.prototype.update=function(e){var t,s="string"==typeof e;s&&(e=function(e){for(var t=[],r=0,n=e.length;r<n;r++){var i=e.charCodeAt(r);i<128?t.push(i):i<2048?t.push(192|i>>6,128|63&i):i<55296||i>=57344?t.push(224|i>>12,128|i>>6&63,128|63&i):(r++,i=65536+((1023&i)<<10|1023&e.charCodeAt(r)),t.push(240|i>>18,128|i>>12&63,128|i>>6&63,128|63&i))}return new Uint8Array(t)}(e),s=!1,t=!0),"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer&&(t=!0,e=new Uint8Array(e));var a=0,c=e.length,u=a+c;if(0==c)return this;if(this.total_len+=c,0==this.memsize&&(this.memory=s?"":t?new Uint8Array(32):new r(32)),this.memsize+c<32)return s?this.memory+=e:t?this.memory.set(e.subarray(0,c),this.memsize):e.copy(this.memory,this.memsize,0,c),this.memsize+=c,this;if(this.memsize>0){s?this.memory+=e.slice(0,32-this.memsize):t?this.memory.set(e.subarray(0,32-this.memsize),this.memsize):e.copy(this.memory,this.memsize,0,32-this.memsize);var d=0;if(s)l=n(this.memory.charCodeAt(d+1)<<8|this.memory.charCodeAt(d),this.memory.charCodeAt(d+3)<<8|this.memory.charCodeAt(d+2),this.memory.charCodeAt(d+5)<<8|this.memory.charCodeAt(d+4),this.memory.charCodeAt(d+7)<<8|this.memory.charCodeAt(d+6)),this.v1.add(l.multiply(o)).rotl(31).multiply(i),d+=8,l=n(this.memory.charCodeAt(d+1)<<8|this.memory.charCodeAt(d),this.memory.charCodeAt(d+3)<<8|this.memory.charCodeAt(d+2),this.memory.charCodeAt(d+5)<<8|this.memory.charCodeAt(d+4),this.memory.charCodeAt(d+7)<<8|this.memory.charCodeAt(d+6)),this.v2.add(l.multiply(o)).rotl(31).multiply(i),d+=8,l=n(this.memory.charCodeAt(d+1)<<8|this.memory.charCodeAt(d),this.memory.charCodeAt(d+3)<<8|this.memory.charCodeAt(d+2),this.memory.charCodeAt(d+5)<<8|this.memory.charCodeAt(d+4),this.memory.charCodeAt(d+7)<<8|this.memory.charCodeAt(d+6)),this.v3.add(l.multiply(o)).rotl(31).multiply(i),d+=8,l=n(this.memory.charCodeAt(d+1)<<8|this.memory.charCodeAt(d),this.memory.charCodeAt(d+3)<<8|this.memory.charCodeAt(d+2),this.memory.charCodeAt(d+5)<<8|this.memory.charCodeAt(d+4),this.memory.charCodeAt(d+7)<<8|this.memory.charCodeAt(d+6)),this.v4.add(l.multiply(o)).rotl(31).multiply(i);else l=n(this.memory[d+1]<<8|this.memory[d],this.memory[d+3]<<8|this.memory[d+2],this.memory[d+5]<<8|this.memory[d+4],this.memory[d+7]<<8|this.memory[d+6]),this.v1.add(l.multiply(o)).rotl(31).multiply(i),d+=8,l=n(this.memory[d+1]<<8|this.memory[d],this.memory[d+3]<<8|this.memory[d+2],this.memory[d+5]<<8|this.memory[d+4],this.memory[d+7]<<8|this.memory[d+6]),this.v2.add(l.multiply(o)).rotl(31).multiply(i),d+=8,l=n(this.memory[d+1]<<8|this.memory[d],this.memory[d+3]<<8|this.memory[d+2],this.memory[d+5]<<8|this.memory[d+4],this.memory[d+7]<<8|this.memory[d+6]),this.v3.add(l.multiply(o)).rotl(31).multiply(i),d+=8,l=n(this.memory[d+1]<<8|this.memory[d],this.memory[d+3]<<8|this.memory[d+2],this.memory[d+5]<<8|this.memory[d+4],this.memory[d+7]<<8|this.memory[d+6]),this.v4.add(l.multiply(o)).rotl(31).multiply(i);a+=32-this.memsize,this.memsize=0,s&&(this.memory="")}if(a<=u-32){var f=u-32;do{var l;if(s)l=n(e.charCodeAt(a+1)<<8|e.charCodeAt(a),e.charCodeAt(a+3)<<8|e.charCodeAt(a+2),e.charCodeAt(a+5)<<8|e.charCodeAt(a+4),e.charCodeAt(a+7)<<8|e.charCodeAt(a+6)),this.v1.add(l.multiply(o)).rotl(31).multiply(i),a+=8,l=n(e.charCodeAt(a+1)<<8|e.charCodeAt(a),e.charCodeAt(a+3)<<8|e.charCodeAt(a+2),e.charCodeAt(a+5)<<8|e.charCodeAt(a+4),e.charCodeAt(a+7)<<8|e.charCodeAt(a+6)),this.v2.add(l.multiply(o)).rotl(31).multiply(i),a+=8,l=n(e.charCodeAt(a+1)<<8|e.charCodeAt(a),e.charCodeAt(a+3)<<8|e.charCodeAt(a+2),e.charCodeAt(a+5)<<8|e.charCodeAt(a+4),e.charCodeAt(a+7)<<8|e.charCodeAt(a+6)),this.v3.add(l.multiply(o)).rotl(31).multiply(i),a+=8,l=n(e.charCodeAt(a+1)<<8|e.charCodeAt(a),e.charCodeAt(a+3)<<8|e.charCodeAt(a+2),e.charCodeAt(a+5)<<8|e.charCodeAt(a+4),e.charCodeAt(a+7)<<8|e.charCodeAt(a+6)),this.v4.add(l.multiply(o)).rotl(31).multiply(i);else l=n(e[a+1]<<8|e[a],e[a+3]<<8|e[a+2],e[a+5]<<8|e[a+4],e[a+7]<<8|e[a+6]),this.v1.add(l.multiply(o)).rotl(31).multiply(i),l=n(e[(a+=8)+1]<<8|e[a],e[a+3]<<8|e[a+2],e[a+5]<<8|e[a+4],e[a+7]<<8|e[a+6]),this.v2.add(l.multiply(o)).rotl(31).multiply(i),l=n(e[(a+=8)+1]<<8|e[a],e[a+3]<<8|e[a+2],e[a+5]<<8|e[a+4],e[a+7]<<8|e[a+6]),this.v3.add(l.multiply(o)).rotl(31).multiply(i),l=n(e[(a+=8)+1]<<8|e[a],e[a+3]<<8|e[a+2],e[a+5]<<8|e[a+4],e[a+7]<<8|e[a+6]),this.v4.add(l.multiply(o)).rotl(31).multiply(i);a+=8}while(a<=f)}return a<u&&(s?this.memory+=e.slice(a):t?this.memory.set(e.subarray(a,u),this.memsize):e.copy(this.memory,this.memsize,a,u),this.memsize=u-a),this},d.prototype.digest=function(){var e,t,r=this.memory,s="string"==typeof r,d=0,f=this.memsize,l=new n;for(this.total_len>=32?((e=this.v1.clone().rotl(1)).add(this.v2.clone().rotl(7)),e.add(this.v3.clone().rotl(12)),e.add(this.v4.clone().rotl(18)),e.xor(this.v1.multiply(o).rotl(31).multiply(i)),e.multiply(i).add(c),e.xor(this.v2.multiply(o).rotl(31).multiply(i)),e.multiply(i).add(c),e.xor(this.v3.multiply(o).rotl(31).multiply(i)),e.multiply(i).add(c),e.xor(this.v4.multiply(o).rotl(31).multiply(i)),e.multiply(i).add(c)):e=this.seed.clone().add(u),e.add(l.fromNumber(this.total_len));d<=f-8;)s?l.fromBits(r.charCodeAt(d+1)<<8|r.charCodeAt(d),r.charCodeAt(d+3)<<8|r.charCodeAt(d+2),r.charCodeAt(d+5)<<8|r.charCodeAt(d+4),r.charCodeAt(d+7)<<8|r.charCodeAt(d+6)):l.fromBits(r[d+1]<<8|r[d],r[d+3]<<8|r[d+2],r[d+5]<<8|r[d+4],r[d+7]<<8|r[d+6]),l.multiply(o).rotl(31).multiply(i),e.xor(l).rotl(27).multiply(i).add(c),d+=8;for(d+4<=f&&(s?l.fromBits(r.charCodeAt(d+1)<<8|r.charCodeAt(d),r.charCodeAt(d+3)<<8|r.charCodeAt(d+2),0,0):l.fromBits(r[d+1]<<8|r[d],r[d+3]<<8|r[d+2],0,0),e.xor(l.multiply(i)).rotl(23).multiply(o).add(a),d+=4);d<f;)l.fromBits(s?r.charCodeAt(d++):r[d++],0,0,0),e.xor(l.multiply(u)).rotl(11).multiply(i);return t=e.clone().shiftRight(33),e.xor(t).multiply(o),t=e.clone().shiftRight(29),e.xor(t).multiply(a),t=e.clone().shiftRight(32),e.xor(t),this.init(this.seed),e},e.exports=d})),Ph={h32:s("8B2rJ"),h64:s("2FDEb")};oh(Sh);var Mh=Sf("neverError");class Ah{constructor(e,t="DoNotConstruct"){throw this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,Mh,{writable:!0,value:void 0}),this.registry=e,kf(this,Mh)[Mh]=new Error(`DoNotConstruct: Cannot construct unknown type ${t}`),kf(this,Mh)[Mh]}static with(e){return class extends Ah{constructor(t){super(t,e)}}}get encodedLength(){throw kf(this,Mh)[Mh]}get hash(){throw kf(this,Mh)[Mh]}get isEmpty(){throw kf(this,Mh)[Mh]}eq(){throw kf(this,Mh)[Mh]}toHex(){throw kf(this,Mh)[Mh]}toHuman(){throw kf(this,Mh)[Mh]}toJSON(){throw kf(this,Mh)[Mh]}toRawType(){throw kf(this,Mh)[Mh]}toString(){throw kf(this,Mh)[Mh]}toU8a(){throw kf(this,Mh)[Mh]}}function Nh(e){return v(e.eq)}function Oh(e,t){return!!Array.isArray(t)&&(e.length===t.length&&P(e.find(((e,r)=>Nh(e)?!e.eq(t[r]):e!==t[r]))))}function Hh(e,t){return e.size===t.length&&!t.some((t=>{return r=t,!Array.isArray(r)||2!==r.length||function(e,t){return P(e)||(Nh(e)?!e.eq(t):e!==t)}(e.get(t[0]),t[1]);var r}))}function Ih(e,t){return Array.isArray(t)?Hh(e,t):t instanceof Map?Hh(e,[...t.entries()]):!!hr(t)&&Hh(e,Object.entries(t))}function Vh(e,t){return e.size===t.length&&!t.some((t=>!e.has(t)))}function Eh(e,t,r,n){return`decodeU8a: failed at ${Lt(r)}…${n?` on ${n}`:""}${t?`: ${t}`:""}:: ${e.message}`}function zh(e,t){try{return new t(e).toRawType()}catch{return null}}function Ch(e,t,r,n){const[i,o]=Array.isArray(r)?[r,[]]:[Object.values(r),Object.keys(r)],s=new Array(i.length);let a=0;for(let r=0;r<i.length;r++)try{const c=new i[r](e,t.subarray(a));a+=c.initialU8aLength||c.encodedLength,s[r]=n?[o[r],c]:c}catch(n){throw new Error(Eh(n,zh(e,i[r]),t.subarray(a,a+16),o[r]))}return[s,a]}function jh(e,t,r,n,i){const o=new Array(i);let s=r;for(let r=0;r<i;r++)try{const i=new n(e,t.subarray(s));s+=i.initialU8aLength||i.encodedLength,o[r]=i}catch(r){throw new Error(Eh(r,zh(e,n),t.subarray(s,s+16)))}return[o,s,s-r]}function Lh(e,t){return w(t)?e.createClass(t):t}function Rh(e,t){const r=Object.entries(t),n={};for(let t=0;t<r.length;t++)n[r[t][0]]=Lh(e,r[t][1]);return n}function Bh(e){return e instanceof Uint8Array||Array.isArray(e)}function Dh(e){return v(e&&e.toU8a)}function Xh(e){return Dh(e)&&re(e.index)&&Dh(e.value)}function qh(e){return re(e)||lr(e)||_(e)}function Wh(e,t){if(qh(e)&&qh(t))return $(e).cmp($(t));if(e instanceof Map&&t instanceof Map)return Wh(Array.from(e.values()),Array.from(t.values()));if(Xh(e)&&Xh(t))return Wh(e.index,t.index)||Wh(e.value,t.value);if(Bh(e)&&Bh(t))return function(e,t){let r=0;const n=Math.min(e.length,t.length);for(let i=0;i<n;++i)if(r=Wh(e[i],t[i]),0!==r)return r;return e.length-t.length}(e,t);if(Dh(e)&&Dh(t))return Wh(e.toU8a(!0),t.toU8a(!0));throw new Error(`Attempting to sort unrecognized values: ${Mr(e)} (typeof ${typeof e}) <-> ${Mr(t)} (typeof ${typeof t})`)}function Fh(e,t){const r=Object.entries(t),n={};for(let t=0;t<r.length;t++){const[i,o]=r[t];n[i]=e.getClassName(o)||new o(e).toRawType()}return n}class Uh extends Map{constructor(e,t){const r=function(e){return Object.entries(e||{})}(t);super(r),this.registry=void 0,this.createdAtHash=void 0,this.registry=e,Hr(this,r.map((([e])=>e)),(e=>this.get(e)))}get encodedLength(){return 0}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===[...this.keys()].length}eq(e){return Ih(this,e)}toHex(){throw new Error("Unimplemented")}toHuman(){return[...this.entries()].reduce(((e,[t,r])=>(e[t]=v(r.toHuman)?r.toHuman():r,e)),{})}toJSON(){return[...this.entries()].reduce(((e,[t,r])=>(e[t]=r,e)),{})}toRawType(){return"Json"}toString(){return Mr(this.toJSON())}toU8a(e){throw new Error("Unimplemented")}}class Gh extends Uint8Array{constructor(e,t,r){super(Et(t)),this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0,this.registry=e,this.initialU8aLength=r}get encodedLength(){return this.length}get hash(){return this.registry.hash(this.toU8a())}get isAscii(){return fr(this)}get isEmpty(){return!this.length||P(this.find((e=>!!e)))}get isUtf8(){return function(e){if(!e)return w(e);const t=Et(e),r=t.length;let n=0;for(;n<r;)if(t[n]<=127)n+=1;else if(t[n]>=194&&t[n]<=223){if(!(n+1<r))return!1;if(t[n+1]<128||t[n+1]>191)return!1;n+=2}else if(224===t[n]){if(!(n+2<r))return!1;if(t[n+1]<160||t[n+1]>191)return!1;if(t[n+2]<128||t[n+2]>191)return!1;n+=3}else if(t[n]>=225&&t[n]<=236){if(!(n+2<r))return!1;if(t[n+1]<128||t[n+1]>191)return!1;if(t[n+2]<128||t[n+2]>191)return!1;n+=3}else if(237===t[n]){if(!(n+2<r))return!1;if(t[n+1]<128||t[n+1]>159)return!1;if(t[n+2]<128||t[n+2]>191)return!1;n+=3}else if(t[n]>=238&&t[n]<=239){if(!(n+2<r))return!1;if(t[n+1]<128||t[n+1]>191)return!1;if(t[n+2]<128||t[n+2]>191)return!1;n+=3}else if(240===t[n]){if(!(n+3<r))return!1;if(t[n+1]<144||t[n+1]>191)return!1;if(t[n+2]<128||t[n+2]>191)return!1;if(t[n+3]<128||t[n+3]>191)return!1;n+=4}else if(t[n]>=241&&t[n]<=243){if(!(n+3<r))return!1;if(t[n+1]<128||t[n+1]>191)return!1;if(t[n+2]<128||t[n+2]>191)return!1;if(t[n+3]<128||t[n+3]>191)return!1;n+=4}else{if(244!==t[n])return!1;if(!(n+3<r))return!1;if(t[n+1]<128||t[n+1]>143)return!1;if(t[n+2]<128||t[n+2]>191)return!1;if(t[n+3]<128||t[n+3]>191)return!1;n+=4}return!0}(this)}get length(){return super.length}bitLength(){return 8*this.length}eq(e){return e instanceof Uint8Array?this.length===e.length&&!this.some(((t,r)=>t!==e[r])):this.eq(Et(e))}slice(e,t){return Uint8Array.from(this).slice(e,t)}subarray(e,t){return Uint8Array.from(this).subarray(e,t)}toHex(){return Lt(this)}toHuman(){if(this.isAscii){const e=this.toUtf8();if(fr(e))return e}return this.toJSON()}toJSON(){return this.toHex()}toRawType(){return"Raw"}toString(){return this.toHex()}toU8a(e){return Uint8Array.from(this)}toUtf8(){return k(this.isUtf8,"The character sequence is not a valid Utf8 string"),Xt(this)}}const Zh={extrinsic:{},payload:{}},Yh={extrinsic:{era:"ExtrinsicEra"},payload:{blockHash:"Hash"}},Jh=U({},{ChargeTransactionPayment:{extrinsic:{tip:"Compact<Balance>"},payload:{}},CheckBlockGasLimit:Zh,CheckEra:Yh,CheckGenesis:{extrinsic:{},payload:{genesisHash:"Hash"}},CheckMortality:Yh,CheckNonce:{extrinsic:{nonce:"Compact<Index>"},payload:{}},CheckSpecVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckTxVersion:{extrinsic:{},payload:{transactionVersion:"u32"}},CheckVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckWeight:Zh,LockStakingStatus:Zh,ValidateEquivocationReport:Zh},{LimitParathreadCommits:Zh,OnlyStakingAndClaims:Zh,PrevalidateAttests:Zh,RestrictFunctionality:Zh,TransactionCallFilter:Zh,ValidateDoubleVoteReports:Zh},{DisallowSigned:Zh},{ChargeAssetTxPayment:{extrinsic:{tip:"Compact<Balance>",assetId:"Option<AssetId>"},payload:{}}}),Kh=["CheckVersion","CheckGenesis","CheckEra","CheckNonce","CheckWeight","ChargeTransactionPayment","CheckBlockGasLimit"];function Qh(e,t,r={}){return e.map((e=>r[e]||Jh[e])).filter((e=>!!e)).reduce(((e,r)=>U(e,r[t])),{})}var _h=Sf("jsonMap"),$h=Sf("Types");class ep extends Map{constructor(e,t,r,n=new Map){const i=Rh(e,t),[o,s]=Ht(r)?Ch(e,r,i,!0):Y(r)?Ch(e,Et(r),i,!0):r instanceof ep?[r,0]:function(e,t,r,n){let i;const o=Object.keys(t),s=Array.isArray(r),a=r instanceof Map;k(s||a||hr(r),(()=>`Struct: Cannot decode value ${Mr(r)} (typeof ${typeof r}), expected an input object, map or array`)),k(!s||r.length===o.length,(()=>`Struct: Unable to map ${Mr(r)} array to object with known keys ${o.join(", ")}`));const c=new Array(o.length);for(let u=0;u<o.length;u++){const d=o[u],f=n.get(d)||d,l=t[d];let h;try{if(s)h=r[u];else if(a)h=f&&r.get(f);else if(h=f&&r[f],P(h)){if(P(i)){const e=Object.entries(r);i={};for(let t=0;t<e.length;t++)i[Xr(e[t][0])]=e[t][1]}h=f&&i[f]}c[u]=[d,h instanceof l?h:new l(e,h)]}catch(t){let r=l.name;try{r=new l(e).toRawType()}catch(e){}throw new Error(`Struct: failed on ${f}: ${r}:: ${t.message}`)}}return[c,0]}(e,i,r||{},n);super(o),this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0,Object.defineProperty(this,_h,{writable:!0,value:void 0}),Object.defineProperty(this,$h,{writable:!0,value:void 0}),this.registry=e,this.initialU8aLength=s,kf(this,_h)[_h]=n,kf(this,$h)[$h]=i}static with(e,t){const r=Object.keys(e);return class extends ep{constructor(n,i){super(n,e,i,t),Hr(this,r,(e=>this.get(e)))}}}get defKeys(){return Object.keys(kf(this,$h)[$h])}get isEmpty(){for(const e of this.values())if(!e.isEmpty)return!1;return!0}get Type(){const e={},t=Object.entries(kf(this,$h)[$h]);for(let r=0;r<t.length;r++){const[n,i]=t[r];e[n]=new i(this.registry).toRawType()}return e}get encodedLength(){let e=0;for(const t of this.values())e+=t.encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}eq(e){return Ih(this,e)}get(e){return super.get(e)}getAtIndex(e){return this.toArray()[e]}toArray(){return[...this.values()]}toHex(){return Lt(this.toU8a())}toHuman(e){const t={};for(const[r,n]of this.entries())t[r]=n&&n.toHuman(e);return t}toJSON(){const e={};for(const[t,r]of this.entries()){e[kf(this,_h)[_h].get(t)||t]=r&&r.toJSON()}return e}toRawType(){return Mr(Fh(this.registry,kf(this,$h)[$h]))}toString(){return Mr(this.toJSON())}toU8a(e){const t=[];for(const[r,n]of this.entries())n&&v(n.toU8a)&&t.push(n.toU8a(!e||F(e)?e:e[r]));return zt(...t)}}class tp extends Array{constructor(e,t,r){super(t.length),this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0;for(let e=0;e<t.length;e++)this[e]=t[e];this.registry=e,this.initialU8aLength=r}get encodedLength(){let e=Yt(this.length).length;for(let t=0;t<this.length;t++)e+=this[t].encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.length}get length(){return super.length}eq(e){return Oh(this,e)}toArray(){return Array.from(this)}toHex(){return Lt(this.toU8a())}toHuman(e){const t=new Array(this.length);for(let r=0;r<this.length;r++)t[r]=this[r].toHuman(e);return t}toJSON(){const e=new Array(this.length);for(let t=0;t<this.length;t++)e[t]=this[t].toJSON();return e}toString(){const e=new Array(this.length);for(let t=0;t<this.length;t++)e[t]=this[t].toString();return`[${e.join(", ")}]`}toU8a(e){const t=new Array(this.length);for(let r=0;r<this.length;r++)t[r]=this[r].toU8a(e);return e?zt(...t):zt(Yt(this.length),...t)}concat(e){return this.toArray().concat(e instanceof tp?e.toArray():e)}filter(e,t){return this.toArray().filter(e,t)}map(e,t){return this.toArray().map(e,t)}includes(e){return this.some((t=>t.eq(e)))}slice(e,t){return this.toArray().slice(e,t)}}var rp=Sf("Types");class np extends tp{constructor(e,t,r){const n=Array.isArray(t)?t.map((t=>Lh(e,t))):v(t)||w(t)?[Lh(e,t)]:Rh(e,t),[i,o]=Ht(r)?Ch(e,r,n):function(e,t,r){return Ht(r)||Y(r)?Ch(e,Et(r),t):[(Array.isArray(t)?t:Object.values(t)).map(((t,n)=>{try{const i=null==r?void 0:r[n];return i instanceof t?i:new t(e,i)}catch(e){throw new Error(`Tuple: failed on ${n}:: ${e.message}`)}})),0]}(e,n,r);super(e,i,o),Object.defineProperty(this,rp,{writable:!0,value:void 0}),kf(this,rp)[rp]=n}static with(e){return class extends np{constructor(t,r){super(t,e,r)}}}get encodedLength(){let e=0;for(let t=0;t<this.length;t++)e+=this[t].encodedLength;return e}get Types(){return Array.isArray(kf(this,rp)[rp])?kf(this,rp)[rp].map((e=>new e(this.registry).toRawType())):Object.keys(kf(this,rp)[rp])}toRawType(){return`(${(Array.isArray(kf(this,rp)[rp])?kf(this,rp)[rp]:Object.values(kf(this,rp)[rp])).map((e=>this.registry.getClassName(e)||new e(this.registry).toRawType())).join(",")})`}toString(){return Mr(this.toJSON())}toU8a(e){const t=new Array(this.length);for(let r=0;r<this.length;r++)t[r]=this[r].toU8a(e);return zt(...t)}}class ip{constructor(e){this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=0,this.registry=e}get encodedLength(){return 0}get hash(){throw new Error(".hash is not implemented on Null")}get isEmpty(){return!0}eq(e){return e instanceof ip||x(e)}toHex(){return"0x"}toHuman(){return this.toJSON()}toJSON(){return null}toRawType(){return"Null"}toString(){return""}toU8a(e){return new Uint8Array}}var op=Sf("meta"),sp=Sf("method"),ap=Sf("section"),cp=Sf("typeDef");class up extends np{constructor(e,t,r,n="<unknown>",i="<unknown>"){const o=(null==r?void 0:r.fields)||[];super(e,o.map((({type:t})=>e.createLookupType(t))),t),Object.defineProperty(this,op,{writable:!0,value:void 0}),Object.defineProperty(this,sp,{writable:!0,value:void 0}),Object.defineProperty(this,ap,{writable:!0,value:void 0}),Object.defineProperty(this,cp,{writable:!0,value:void 0}),kf(this,op)[op]=r,kf(this,sp)[sp]=i,kf(this,ap)[ap]=n,kf(this,cp)[cp]=o.map((({type:t})=>e.lookup.getTypeDef(t)))}get meta(){return kf(this,op)[op]}get method(){return kf(this,sp)[sp]}get section(){return kf(this,ap)[ap]}get typeDef(){return kf(this,cp)[cp]}}class dp extends ep{constructor(e,t){const{DataType:r,value:n}=function(e,t){if(!t||!t.length)return{DataType:ip};const r=t.subarray(0,2);return{DataType:e.findMetaEvent(r),value:{data:t.subarray(2),index:r}}}(e,t);super(e,{index:"EventId",data:r},n)}get data(){return this.get("data")}get index(){return this.get("index")}get meta(){return this.data.meta}get method(){return this.data.method}get section(){return this.data.section}get typeDef(){return this.data.typeDef}toHuman(e){return U({method:this.method,section:this.section},e?{docs:this.meta.docs.map((e=>e.toString()))}:null,super.toHuman(e))}}var fp={},lp={};r(lp,"GenericExtrinsic",(function(){return vp})),r(lp,"GenericExtrinsicEra",(function(){return Bp})),r(lp,"GenericMortalEra",(function(){return Rp})),r(lp,"GenericImmortalEra",(function(){return Lp})),r(lp,"GenericExtrinsicPayload",(function(){return Xp})),r(lp,"GenericExtrinsicPayloadUnknown",(function(){return qp})),r(lp,"GenericExtrinsicUnknown",(function(){return Wp})),r(lp,"GenericSignerPayload",(function(){return Jp}));class hp{constructor(e,t,r){this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0,this._raw=void 0,this.registry=e,this._raw=t,this.initialU8aLength=r}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this._raw.isEmpty}eq(e){return this._raw.eq(e)}toHex(e){return this._raw.toHex(e)}toHuman(e){return this._raw.toHuman(e)}toJSON(){return this._raw.toJSON()}toString(){return this._raw.toString()}toU8a(e){return this._raw.toU8a(e)}toRawType(){return"Base"}}const pp=new Uint8Array,mp=new Uint8Array([0]),yp=["ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicV4"];class bp extends hp{constructor(e,t,r){super(e,t,r);const n=Object.keys(e.getSignedExtensionTypes()),i=e=>this._raw.signature[e];for(let e=0;e<n.length;e++)Or(this,n[e],i)}get args(){return this.method.args}get argsDef(){return this.method.argsDef}get callIndex(){return this.method.callIndex}get data(){return this.method.data}get era(){return this._raw.signature.era}get encodedLength(){return this.toU8a().length}get isSigned(){return this._raw.signature.isSigned}get length(){return this.toU8a(!0).length}get meta(){return this.method.meta}get method(){return this._raw.method}get nonce(){return this._raw.signature.nonce}get signature(){return this._raw.signature.signature}get signer(){return this._raw.signature.signer}get tip(){return this._raw.signature.tip}get type(){return this._raw.version}get version(){return this.type|(this.isSigned?128:0)}is(e){return this.method.is(e)}}var gp=Sf("hashCache");class vp extends bp{constructor(e,t,{version:r}={}){super(e,vp._decodeExtrinsic(e,t,r)),Object.defineProperty(this,gp,{writable:!0,value:void 0})}static _newFromValue(e,t,r){if(t instanceof vp)return t._raw;const n=128==(128&r),i=yp[127&r]||yp[0];return e.createType(i,t,{isSigned:n,version:r})}static _decodeExtrinsic(e,t,r=4){return Ht(t)||Array.isArray(t)||Y(t)?vp._decodeU8a(e,Et(t),r):t instanceof e.createClass("Call")?vp._newFromValue(e,{method:t},r):vp._newFromValue(e,t,r)}static _decodeU8a(e,t,r){if(!t.length)return vp._newFromValue(e,new Uint8Array,r);const[n,i]=Kt(t),o=n+i.toNumber();k(o<=t.length,(()=>`Extrinsic: length less than remainder, expected at least ${o}, found ${t.length}`));const s=t.subarray(n,o);return vp._newFromValue(e,s.subarray(1),s[0])}get hash(){return kf(this,gp)[gp]||(kf(this,gp)[gp]=super.hash),kf(this,gp)[gp]}addSignature(e,t,r){return this._raw.addSignature(e,t,r),kf(this,gp)[gp]=void 0,this}sign(e,t){return this._raw.sign(e,t),kf(this,gp)[gp]=void 0,this}signFake(e,t){return this._raw.signFake(e,t),kf(this,gp)[gp]=void 0,this}toHex(e){return Lt(this.toU8a(e))}toHuman(e){return U({},{isSigned:this.isSigned,method:this.method.toHuman(e)},this.isSigned?{era:this.era.toHuman(e),nonce:this.nonce.toHuman(e),signature:this.signature.toHex(),signer:this.signer.toHuman(e),tip:this.tip.toHuman(e)}:null)}toJSON(){return this.toHex()}toRawType(){return"Extrinsic"}toU8a(e){const t=zt(new Uint8Array([this.version]),this._raw.toU8a());return e?t:Jt(t)}}function wp(e,t){const r={};let n,i;if(Array.isArray(t)){for(let e=0;e<t.length;e++)r[t[e]]={Type:ip,index:e};n=!0,i=!1}else if(function(e){const t=Object.values(e);return!t.some((e=>re(e)))||(k(t.every((e=>re(e)&&e>=0&&e<=255)),"Invalid number-indexed enum definition"),!1)}(t)){const o=Object.entries(Rh(e,t));for(let e=0;e<o.length;e++){const[t,n]=o[e];r[t]={Type:n,index:e}}n=!Object.values(r).some((({Type:e})=>e!==ip)),i=!1}else{const e=Object.entries(t);for(let t=0;t<e.length;t++){const[n,i]=e[t];r[n]={Type:ip,index:i}}n=!0,i=!0}return{def:r,isBasic:n,isIndexed:i}}function xp(e,t,r=0,n){const i=Object.values(t).find((e=>e.index===r));return k(!P(i),(()=>`Unable to create Enum via index ${r}, in ${Object.keys(t).join(", ")}`)),{index:r,value:n instanceof i.Type?n:new i.Type(e,n)}}function Pp(e,t,r,n){const i=Object.keys(t).map((e=>e.toLowerCase())),o=r.toLowerCase(),s=i.indexOf(o);k(-1!==s,(()=>`Cannot map Enum JSON, unable to find '${r}' in ${i.join(", ")}`));try{return xp(e,t,Object.values(t)[s].index,n)}catch(e){throw new Error(`Enum(${r}):: ${e.message}`)}}var kp=Sf("def"),Tp=Sf("entryIndex"),Sp=Sf("indexes"),Mp=Sf("isBasic"),Ap=Sf("isIndexed"),Np=Sf("raw");class Op{constructor(e,t,r,n){this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,kp,{writable:!0,value:void 0}),Object.defineProperty(this,Tp,{writable:!0,value:void 0}),this.initialU8aLength=void 0,Object.defineProperty(this,Sp,{writable:!0,value:void 0}),Object.defineProperty(this,Mp,{writable:!0,value:void 0}),Object.defineProperty(this,Ap,{writable:!0,value:void 0}),Object.defineProperty(this,Np,{writable:!0,value:void 0});const{def:i,isBasic:o,isIndexed:s}=wp(e,t),a=Ht(r)&&r.length&&!re(n)?xp(e,i,r[0],r.subarray(1)):function(e,t,r,n){if(re(n))return xp(e,t,n,r);if(Ht(r)||Y(r)){const n=Et(r);if(n.length)return xp(e,t,n[0],n.subarray(1))}else{if(r instanceof Op)return xp(e,t,r.index,r.value);if(re(r))return xp(e,t,r);if(w(r))return Pp(e,t,r.toString());if(hr(r)){const n=Object.keys(r)[0];return Pp(e,t,n,r[n])}}return xp(e,t,Object.values(t)[0].index)}(e,i,r,n);this.registry=e,kf(this,kp)[kp]=i,kf(this,Mp)[Mp]=o,kf(this,Ap)[Ap]=s,kf(this,Sp)[Sp]=Object.values(i).map((({index:e})=>e)),kf(this,Tp)[Tp]=kf(this,Sp)[Sp].indexOf(a.index)||0,kf(this,Np)[Np]=a.value,kf(this,Np)[Np].initialU8aLength&&(this.initialU8aLength=1+kf(this,Np)[Np].initialU8aLength)}static with(e){const t=Array.isArray(e)?e:Object.keys(e),r=new Array(t.length),n=new Array(t.length);for(let e=0;e<t.length;e++){const i=Fr(t[e].replace(" ","_"));r[e]=`as${i}`,n[e]=`is${i}`}return class extends Op{constructor(i,o,s){super(i,e,o,s),Hr(this,n,((e,r)=>this.type===t[r])),Hr(this,r,((e,t)=>(k(this[n[t]],(()=>`Cannot convert '${this.type}' via ${e}`)),this.value)))}}}get encodedLength(){return 1+kf(this,Np)[Np].encodedLength}get hash(){return this.registry.hash(this.toU8a())}get index(){return kf(this,Sp)[Sp][kf(this,Tp)[Tp]]}get isBasic(){return kf(this,Mp)[Mp]}get isEmpty(){return kf(this,Np)[Np].isEmpty}get isNone(){return kf(this,Np)[Np]instanceof ip}get isNull(){return kf(this,Np)[Np]instanceof ip}get defIndexes(){return kf(this,Sp)[Sp]}get defKeys(){return Object.keys(kf(this,kp)[kp])}get type(){return this.defKeys[kf(this,Tp)[Tp]]}get value(){return kf(this,Np)[Np]}eq(e){return Ht(e)?!this.toU8a().some(((t,r)=>t!==e[r])):re(e)?this.toNumber()===e:kf(this,Mp)[Mp]&&w(e)?this.type===e:Y(e)?this.toHex()===e:e instanceof Op?this.index===e.index&&this.value.eq(e.value):hr(e)?this.value.eq(e[this.type]):this.value.eq(e)}toHex(){return Lt(this.toU8a())}toHuman(e){return kf(this,Mp)[Mp]||this.isNone?this.type:{[this.type]:kf(this,Np)[Np].toHuman(e)}}toJSON(){return kf(this,Mp)[Mp]?this.type:{[Xr(this.type)]:kf(this,Np)[Np].toJSON()}}toNumber(){return this.index}_toRawStruct(){if(kf(this,Mp)[Mp])return kf(this,Ap)[Ap]?this.defKeys.reduce(((e,t,r)=>(e[t]=kf(this,Sp)[Sp][r],e)),{}):this.defKeys;const e=Object.entries(kf(this,kp)[kp]).reduce(((e,[t,{Type:r}])=>(e[t]=r,e)),{});return Fh(this.registry,e)}toRawType(){return Mr({_enum:this._toRawStruct()})}toString(){return this.isNull?this.type:Mr(this.toJSON())}toU8a(e){return zt(new Uint8Array(e?[]:[this.index]),kf(this,Np)[Np].toU8a(e))}}X=s("ctT9w");const Hp=new(e(X))(1e4),Ip=[["Perquintill",B],["Perbill",R],["Permill",L],["Percent",j]];var Vp=Sf("bitLength"),Ep=Sf("isSigned");class zp extends(e(X)){constructor(e,t=0,r=64,n=!1){super(Ht(t)?Bt(t.subarray(0,r/8),{isLe:!0,isNegative:n}).toString():function(e,t,r){return Ht(e)?Bt(e.subarray(0,t/8),{isLe:!0,isNegative:r}).toString():lr(e)?e.toString():Y(e,-1,!0)?Q(e,{isLe:!1,isNegative:r}).toString():$(e).toString()}(t,r,n)),this.registry=void 0,this.createdAtHash=void 0,this.encodedLength=void 0,Object.defineProperty(this,Vp,{writable:!0,value:void 0}),Object.defineProperty(this,Ep,{writable:!0,value:void 0}),this.registry=e,kf(this,Vp)[Vp]=r,this.encodedLength=kf(this,Vp)[Vp]/8,kf(this,Ep)[Ep]=n;const i=this.gte(V),o=r-(n&&i?1:0);k(n||i,(()=>`${this.toRawType()}: Negative number passed to unsigned type`)),k(super.bitLength()<=o,(()=>`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${o}`))}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isZero()}get isUnsigned(){return!kf(this,Ep)[Ep]}bitLength(){return kf(this,Vp)[Vp]}eq(e){return super.eq(Y(e)?Q(e.toString(),{isLe:!1,isNegative:kf(this,Ep)[Ep]}):$(e))}isMax(){return this.toU8a().filter((e=>255===e)).length===kf(this,Vp)[Vp]/8}toBigInt(){return BigInt(this.toString())}toBn(){return this}toHex(e=!1){return function(e,t=Ft,r){return e?Lt(Wt(e,U({isLe:!1,isNegative:!1},re(t)?{bitLength:t,isLe:r}:t))):"0x00"}(this,{bitLength:this.bitLength(),isLe:e,isNegative:!this.isUnsigned})}toHuman(e){const t=this.toRawType();if("Balance"===t)return this.isMax()?"everything":sr(this,{decimals:this.registry.chainDecimals[0],withSi:!0,withUnit:this.registry.chainTokens[0]});const[,r]=Ip.find((([e])=>e===t))||[];return r?function(e,t){return`${(e.mul(Hp).div(t).toNumber()/100).toFixed(2)}%`}(this,r):ar(this)}toJSON(e=!1){return e||super.bitLength()>52?this.toHex():this.toNumber()}toRawType(){return this instanceof this.registry.createClass("Balance")?"Balance":`${this.isUnsigned?"u":"i"}${this.bitLength()}`}toString(e){return super.toString(e)}toU8a(e){return Wt(this,{bitLength:this.bitLength(),isLe:!0,isNegative:!this.isUnsigned})}}class Cp extends zp{static with(e,t){return class extends Cp{constructor(t,r){super(t,r,e)}toRawType(){return t||super.toRawType()}}}}class jp extends(Cp.with(64)){constructor(...e){super(...e),this.__UIntType="u64"}}class Lp extends Gh{constructor(e,t){super(e,mp)}}class Rp extends np{constructor(e,t){super(e,{period:jp,phase:jp},Rp._decodeMortalEra(e,t))}static _decodeMortalEra(e,t){if(Ht(t)||Y(t)||Array.isArray(t))return Rp._decodeMortalU8a(e,Et(t));if(!t)return[new jp(e),new jp(e)];if(hr(t))return Rp._decodeMortalObject(e,t);throw new Error("Invalid data passed to Mortal era")}static _decodeMortalObject(e,t){const{current:r,period:n}=t;let i=Math.pow(2,Math.ceil(Math.log2(n)));i=Math.min(Math.max(i,4),65536);const o=r%i,s=Math.max(i>>12,1),a=o/s*s;return[new jp(e,i),new jp(e,a)]}static _decodeMortalU8a(e,t){if(0===t.length)return[new jp(e),new jp(e)];const r=Bt(t.subarray(0,1)).toNumber()+(Bt(t.subarray(1,2)).toNumber()<<8),n=2<<r%16,i=(r>>4)*Math.max(n>>12,1);return k(n>=4&&i<n,"Invalid data passed to Mortal era"),[new jp(e,n),new jp(e,i)]}get encodedLength(){return 2}get period(){return this[0]}get phase(){return this[1]}toHuman(){return{period:ar(this.period),phase:ar(this.phase)}}toJSON(){return this.toHex()}toU8a(e){const t=this.period.toNumber(),r=this.phase.toNumber(),n=Math.max(t>>12,1),i=function(e){const t=e.toString(2);let r=0;for(;"0"===t[t.length-1-r];)r++;return r}(t),o=Math.min(15,Math.max(1,i-1))+(r/n<<4);return new Uint8Array([255&o,o>>8])}birth(e){return Math.floor((Math.max($(e).toNumber(),this.phase.toNumber())-this.phase.toNumber())/this.period.toNumber())*this.period.toNumber()+this.phase.toNumber()}death(e){return this.birth(e)+this.period.toNumber()}}class Bp extends Op{constructor(e,t){super(e,{ImmortalEra:Lp,MortalEra:Rp},Bp._decodeExtrinsicEra(t))}static _decodeExtrinsicEra(e=new Uint8Array){if(Ht(e))return e.length&&0!==e[0]?new Uint8Array([1,e[0],e[1]]):new Uint8Array([0]);if(!e)return new Uint8Array([0]);if(e instanceof Bp)return Bp._decodeExtrinsicEra(e.toU8a());if(Y(e))return Bp._decodeExtrinsicEra(ae(e));if(hr(e)){const t=Object.entries(e).map((([e,t])=>[e.toLowerCase(),t])),r=t.find((([e])=>"mortalera"===e.toLowerCase())),n=t.find((([e])=>"immortalera"===e.toLowerCase()));return r?{MortalEra:r[1]}:n?{ImmortalEra:n[1]}:{MortalEra:e}}throw new Error("Invalid data passed to Era")}get encodedLength(){return this.isImmortalEra?this.asImmortalEra.encodedLength:this.asMortalEra.encodedLength}get asImmortalEra(){return k(this.isImmortalEra,(()=>`Cannot convert '${this.type}' via asImmortalEra`)),this.value}get asMortalEra(){return k(this.isMortalEra,(()=>`Cannot convert '${this.type}' via asMortalEra`)),this.value}get isImmortalEra(){return 0===this.index}get isMortalEra(){return this.index>0}toU8a(e){return this.isMortalEra?this.asMortalEra.toU8a(e):this.asImmortalEra.toU8a(e)}}const Dp=["ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadV4"];class Xp extends hp{constructor(e,t,{version:r}={}){super(e,Xp.decodeExtrinsicPayload(e,t,r))}static decodeExtrinsicPayload(e,t,r=4){return t instanceof Xp?t._raw:e.createType(Dp[r]||Dp[0],t,{version:r})}get blockHash(){return this._raw.blockHash}get era(){return this._raw.era}get genesisHash(){return this._raw.genesisHash||this.registry.createType("Hash")}get method(){return this._raw.method}get nonce(){return this._raw.nonce}get specVersion(){return this._raw.specVersion||this.registry.createType("u32")}get tip(){return this._raw.tip||this.registry.createType("Compact<Balance>")}get transactionVersion(){return this._raw.transactionVersion||this.registry.createType("u32")}eq(e){return this._raw.eq(e)}sign(e){return{signature:Lt(this._raw.sign(e))}}toHuman(e){return this._raw.toHuman(e)}toJSON(){return this.toHex()}toString(){return this.toHex()}toU8a(e){return super.toU8a(!!e&&{method:!0})}}class qp extends ep{constructor(e,t,{version:r=0}={}){throw super(e,{}),new Error(`Unsupported extrinsic payload version ${r}`)}}class Wp extends ep{constructor(e,t,{isSigned:r=!1,version:n=0}={}){throw super(e,{}),new Error(`Unsupported ${r?"":"un"}signed extrinsic version ${127&n}`)}}var Fp=Sf("Type"),Up=Sf("initialU8aLength"),Gp=Sf("raw");class Zp{constructor(e,t,r){this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,Fp,{writable:!0,value:void 0}),Object.defineProperty(this,Up,{writable:!0,value:void 0}),Object.defineProperty(this,Gp,{writable:!0,value:void 0});const n=Lh(e,t),i=Ht(r)&&r.length&&!function(e){return hr(e)&&v(e.toU8a)&&hr(e.registry)&&v(e.registry.get)}(r)?0===r[0]?new ip(e):new n(e,r.subarray(1)):function(e,t,r){return r instanceof Zp&&(r=r.value),x(r)||P(r)||r instanceof ip||"0x"===r?new ip(e):r instanceof t?r:Ht(r)?r.length&&0!==r[0]?new t(e,r.subarray(1)):new ip(e):new t(e,r)}(e,n,r);this.registry=e,kf(this,Fp)[Fp]=n,kf(this,Gp)[Gp]=i,i.initialU8aLength&&(kf(this,Up)[Up]=1+i.initialU8aLength)}static with(e){return class extends Zp{constructor(t,r){super(t,e,r)}}}get encodedLength(){return 1+kf(this,Gp)[Gp].encodedLength}get initialU8aLength(){return kf(this,Up)[Up]}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isNone}get isNone(){return kf(this,Gp)[Gp]instanceof ip}get isSome(){return!this.isNone}get value(){return kf(this,Gp)[Gp]}eq(e){return e instanceof Zp?this.isSome===e.isSome&&this.value.eq(e.value):this.value.eq(e)}toHex(){return this.isNone?"0x":Lt(this.toU8a().subarray(1))}toHuman(e){return kf(this,Gp)[Gp].toHuman(e)}toJSON(){return this.isNone?null:kf(this,Gp)[Gp].toJSON()}toRawType(e){const t=this.registry.getClassName(kf(this,Fp)[Fp])||new(kf(this,Fp)[Fp])(this.registry).toRawType();return e?t:`Option<${t}>`}toString(){return kf(this,Gp)[Gp].toString()}toU8a(e){if(e)return kf(this,Gp)[Gp].toU8a(!0);const t=new Uint8Array(this.encodedLength);return this.isSome&&(t.set([1]),t.set(kf(this,Gp)[Gp].toU8a(),1)),t}unwrap(){return k(this.isSome,"Option: unwrapping a None value"),kf(this,Gp)[Gp]}unwrapOr(e){return this.isSome?this.unwrap():e}unwrapOrDefault(){return this.isSome?this.unwrap():new(kf(this,Fp)[Fp])(this.registry)}}const Yp={address:"Address",blockHash:"Hash",blockNumber:"BlockNumber",era:"ExtrinsicEra",genesisHash:"Hash",method:"Call",nonce:"Compact<Index>",runtimeVersion:"RuntimeVersion",signedExtensions:"Vec<Text>",tip:"Compact<Balance>",version:"u8"};class Jp extends ep{constructor(e,t){const r=U({},e.getSignedExtensionTypes(),e.getSignedExtensionExtra());super(e,U({},r,Yp),t),this._extraTypes=void 0,this._extraTypes={};const n=e=>this.get(e);for(const[e,t]of Object.entries(r))Yp[e]||(this._extraTypes[e]=t),Or(this,e,n)}get address(){return this.get("address")}get blockHash(){return this.get("blockHash")}get blockNumber(){return this.get("blockNumber")}get era(){return this.get("era")}get genesisHash(){return this.get("genesisHash")}get method(){return this.get("method")}get nonce(){return this.get("nonce")}get runtimeVersion(){return this.get("runtimeVersion")}get signedExtensions(){return this.get("signedExtensions")}get tip(){return this.get("tip")}get version(){return this.get("version")}toPayload(){const e={},t=Object.keys(this._extraTypes);for(let r=0;r<t.length;r++){const n=t[r],i=this.get(n);i instanceof Zp&&!i.isSome||(e[n]=i.toHex())}return U(e,{address:this.address.toString(),blockHash:this.blockHash.toHex(),blockNumber:this.blockNumber.toHex(),era:this.era.toHex(),genesisHash:this.genesisHash.toHex(),method:this.method.toHex(),nonce:this.nonce.toHex(),signedExtensions:this.signedExtensions.map((e=>e.toString())),specVersion:this.runtimeVersion.specVersion.toHex(),tip:this.tip.toHex(),transactionVersion:this.runtimeVersion.transactionVersion.toHex(),version:this.version.toNumber()})}toRaw(){const e=this.toPayload(),t=Lt(this.registry.createType("ExtrinsicPayload",e,{version:e.version}).toU8a({method:!0}));return{address:e.address,data:t,type:"payload"}}}var Kp={};r(Kp,"GenericExtrinsicV4",(function(){return Qp})),r(Kp,"GenericExtrinsicPayloadV4",(function(){return $p})),r(Kp,"GenericExtrinsicSignatureV4",(function(){return nm}));class Qp extends ep{constructor(e,t,{isSigned:r}={}){super(e,{signature:"ExtrinsicSignatureV4",method:"Call"},Qp.decodeExtrinsic(e,t,r))}static decodeExtrinsic(e,t,r=!1){if(t instanceof Qp)return t;if(t instanceof e.createClass("Call"))return{method:t};if(Ht(t)){const n=e.createType("ExtrinsicSignatureV4",t,{isSigned:r});return{method:e.createType("Call",t.subarray(n.encodedLength)),signature:n}}return t||{}}get encodedLength(){return this.toU8a().length}get method(){return this.get("method")}get signature(){return this.get("signature")}get version(){return 4}addSignature(e,t,r){return this.signature.addSignature(e,t,r),this}sign(e,t){return this.signature.sign(this.method,e,t),this}signFake(e,t){return this.signature.signFake(this.method,e,t),this}}var _p=Sf("signOptions");class $p extends ep{constructor(e,t){super(e,U({method:"Bytes"},e.getSignedExtensionTypes(),e.getSignedExtensionExtra()),t),Object.defineProperty(this,_p,{writable:!0,value:void 0}),kf(this,_p)[_p]={withType:e.createType("ExtrinsicSignature")instanceof Op}}get blockHash(){return this.get("blockHash")}get era(){return this.get("era")}get genesisHash(){return this.get("genesisHash")}get method(){return this.get("method")}get nonce(){return this.get("nonce")}get specVersion(){return this.get("specVersion")}get tip(){return this.get("tip")}get transactionVersion(){return this.get("transactionVersion")}get assetId(){return this.get("assetId")}sign(e){return function(e,t,r,n){const i=r.length>256?e.hash(r):r;return t.sign(i,n)}(this.registry,e,this.toU8a({method:!0}),kf(this,_p)[_p])}}const em=new Uint8Array(256).fill(1);function tm(e,t){return e.createType("Address",Ht(t)?Lt(t):t)}var rm=Sf("signKeys");class nm extends ep{constructor(e,t,{isSigned:r}={}){const n=e.getSignedExtensionTypes();super(e,U({signer:"Address",signature:"ExtrinsicSignature"},n),nm.decodeExtrinsicSignature(t,r)),Object.defineProperty(this,rm,{writable:!0,value:void 0}),kf(this,rm)[rm]=Object.keys(n),Hr(this,kf(this,rm)[rm],(e=>this.get(e)))}static decodeExtrinsicSignature(e,t=!1){return e&&(e instanceof nm||t)?e:pp}get encodedLength(){return this.isSigned?super.encodedLength:0}get isSigned(){return!this.signature.isEmpty}get era(){return this.get("era")}get nonce(){return this.get("nonce")}get signature(){return this.multiSignature.value||this.multiSignature}get multiSignature(){return this.get("signature")}get signer(){return this.get("signer")}get tip(){return this.get("tip")}_injectSignature(e,t,r){for(let e=0;e<kf(this,rm)[rm].length;e++){const t=kf(this,rm)[rm][e],n=r.get(t);P(n)||this.set(t,n)}return this.set("signer",e),this.set("signature",t),this}addSignature(e,t,r){return this._injectSignature(tm(this.registry,e),this.registry.createType("ExtrinsicSignature",t),new $p(this.registry,r))}createPayload(e,t){const{era:r,runtimeVersion:{specVersion:n,transactionVersion:i}}=t;return new $p(this.registry,U({},t,{era:r||mp,method:e.toHex(),specVersion:n,transactionVersion:i}))}sign(e,t,r){k(t&&t.addressRaw,(()=>`Expected a valid keypair for signing, found ${Mr(t)}`));const n=tm(this.registry,t.addressRaw),i=this.createPayload(e,r),o=this.registry.createType("ExtrinsicSignature",i.sign(t));return this._injectSignature(n,o,i)}signFake(e,t,r){k(t,(()=>`Expected a valid address for signing, found ${Mr(t)}`));const n=tm(this.registry,t),i=this.createPayload(e,r),o=this.registry.createType("ExtrinsicSignature",em);return this._injectSignature(n,o,i)}toU8a(e){return this.isSigned?super.toU8a(e):pp}}n(lp,Kp);var im={};r(im,"GenericAccountId",(function(){return gm})),r(im,"GenericAccountIndex",(function(){return pm})),r(im,"GenericBlock",(function(){return vm})),r(im,"GenericCall",(function(){return km})),r(im,"GenericChainProperties",(function(){return Mm})),r(im,"GenericConsensusEngineId",(function(){return Im})),r(im,"GenericEvent",(function(){return dp})),r(im,"GenericEventData",(function(){return up})),r(im,"GenericLookupSource",(function(){return Em})),r(im,"GenericMultiAddress",(function(){return Cm})),r(im,"GenericAddress",(function(){return Cm})),r(im,"GenericVote",(function(){return Dm}));var om={};r(om,"GenericEthereumAccountId",(function(){return cm})),r(om,"GenericEthereumLookupSource",(function(){return ym}));class sm extends Gh{constructor(e,t=new Uint8Array,r=256){const[n,i]=function(e,t){const r=Et(e),n=t/8;return r.length?(k(r.length>=n,(()=>`Expected at least ${n} bytes (${t} bits), found ${r.length} bytes`)),[r.subarray(0,n),n]):[new Uint8Array(n),0]}(t,r);super(e,n,i)}static with(e,t){return class extends sm{constructor(t,r){super(t,r,e)}toRawType(){return t||super.toRawType()}}}toRawType(){return`[u8;${this.length}]`}}function am(e){return Ht(e)||Array.isArray(e)?Et(e):Y(e)||xh(e)?ae(e):w(e)?Et(e):e}class cm extends sm{constructor(e,t=new Uint8Array){super(e,am(t),160)}static encode(e){return function(e){if(!e)return"0x";const t=Et(e);k([20,32,33,65].includes(t.length),"Invalid address or publicKey passed");const r=Lt(wh(t),-1,!1),n=Lt(mh(r),-1,!1);let i="";for(let e=0;e<40;e++)i=`${i}${parseInt(n[e],16)>7?r[e].toUpperCase():r[e]}`;return`0x${i}`}(e)}eq(e){return super.eq(am(e))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){return cm.encode(this)}toRawType(){return"AccountId"}}X=s("ctT9w");class um extends(Cp.with(32)){constructor(...e){super(...e),this.__UIntType="u32"}}const dm=new(e(X))(239),fm=new(e(X))(1).shln(16),lm=new(e(X))(1).shln(32);function hm(e){return e instanceof pm?e.toBn():lr(e)||re(e)||Y(e)||Ht(e)||_(e)?e:hm(lh(e))}class pm extends um{constructor(t,r=new(e(X))(0)){super(t,hm(r))}static calcLength(e){const t=$(e);return t.lte(dm)?1:t.lt(fm)?2:t.lt(lm)?4:8}static readLength(e){const t=e[0];return 252===t?[1,2]:253===t?[1,4]:254===t?[1,8]:[0,1]}static writeLength(e){switch(e.length){case 2:return new Uint8Array([252]);case 4:return new Uint8Array([253]);case 8:return new Uint8Array([254]);default:return new Uint8Array([])}}eq(e){return lr(e)||re(e)?super.eq(e):super.eq(this.registry.createType("AccountIndex",e))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){const e=pm.calcLength(this);return hh(this.toU8a().subarray(0,e),this.registry.chainSS58)}toRawType(){return"AccountIndex"}}const mm=new Uint8Array([255]);class ym extends hp{constructor(e,t=new Uint8Array){super(e,ym._decodeAddress(e,t))}static _decodeAddress(e,t){return t instanceof ym?t._raw:t instanceof cm||t instanceof pm?t:Ht(t)||Array.isArray(t)||Y(t)?function(e,t){if(20===t.length)return e.createType("EthereumAccountId",t);if(255===t[0])return e.createType("EthereumAccountId",t.subarray(1));const[r,n]=pm.readLength(t);return e.createType("AccountIndex",Bt(t.subarray(r,r+n),!0))}(e,Et(t)):lr(t)||re(t)||_(t)?e.createType("AccountIndex",t):function(e,t){const r=lh(t);return 20===r.length?e.createType("EthereumAccountId",r):e.createType("AccountIndex",Bt(r,!0))}(e,t)}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this._raw instanceof pm?pm.calcLength(this._raw):this._raw.encodedLength}toHex(){return Lt(this.toU8a())}toRawType(){return"Address"}toU8a(e){const t=this._raw.toU8a().subarray(0,this._rawLength);return e?t:zt(this._raw instanceof pm?pm.writeLength(t):mm,t)}}function bm(e){if(Ht(e)||Array.isArray(e))return Et(e);if(!e)return new Uint8Array;if(Y(e))return ae(e);if(w(e))return lh(e);throw new Error("Unknown type passed to AccountId constructor, found typeof "+typeof e)}class gm extends sm{constructor(e,t){const r=bm(t);k(r.length>=32||!r.some((e=>e)),(()=>`Invalid AccountId provided, expected 32 bytes, found ${r.length}`)),super(e,r,256)}eq(e){return super.eq(bm(e))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){return hh(this,this.registry.chainSS58)}toRawType(){return"AccountId"}}class vm extends ep{constructor(e,t){super(e,{header:"Header",extrinsics:"Vec<Extrinsic>"},t)}get contentHash(){return this.registry.hash(this.toU8a())}get extrinsics(){return this.get("extrinsics")}get hash(){return this.header.hash}get header(){return this.get("header")}}function wm(e,t){return t.fields.reduce(((t,{name:r,type:n},i)=>(t[r.unwrapOr(`param${i}`).toString()]=e.createLookupType(n),t)),{})}function xm(e,t=new Uint8Array,r){if(Ht(t)||Y(t))return function(e,t,r){const n=new Uint8Array(2);n.set(t.subarray(0,2),0);const i=r||e.findMetaCall(n).meta;return{args:t.subarray(2),argsDef:wm(e,i),callIndex:n,meta:i}}(e,Et(t),r);if(hr(t)&&t.callIndex&&t.args)return function(e,t,r){const{args:n,callIndex:i}=t,o=i instanceof Pm?i.toU8a():i,s=r||e.findMetaCall(o).meta;return{args:n,argsDef:wm(e,s),callIndex:i,meta:s}}(e,t,r);throw new Error(`Call: Cannot decode value '${t}' of type ${typeof t}`)}class Pm extends sm{constructor(e,t){super(e,t,16)}}class km extends ep{constructor(e,t,r){const n=xm(e,t,r);try{super(e,{callIndex:Pm,args:ep.with(n.argsDef)},n),this._meta=void 0}catch(t){let r="unknown.unknown";try{const t=e.findMetaCall(n.callIndex);r=`${t.section}.${t.method}`}catch(e){}throw new Error(`Call: failed decoding ${r}:: ${t.message}`)}this._meta=n.meta}get args(){return[...this.get("args").values()]}get argsDef(){return wm(this.registry,this.meta)}get argsEntries(){return[...this.get("args").entries()]}get callIndex(){return this.get("callIndex").toU8a()}get data(){return this.get("args").toU8a()}get meta(){return this._meta}get method(){return this.registry.findMetaCall(this.callIndex).method}get section(){return this.registry.findMetaCall(this.callIndex).section}is(e){return e.callIndex[0]===this.callIndex[0]&&e.callIndex[1]===this.callIndex[1]}toHuman(e){var t,r;let n;try{n=this.registry.findMetaCall(this.callIndex)}catch(e){}return U({args:this.argsEntries.reduce(((t,[r,n])=>U(t,{[r]:n.toHuman(e)})),{}),method:null===(t=n)||void 0===t?void 0:t.method,section:null===(r=n)||void 0===r?void 0:r.section},e&&n?{docs:n.meta.docs.map((e=>e.toString()))}:null)}toRawType(){return"Call"}}function Tm(e,t,r,n=!0){return r&&v(r.unwrapOrDefault)?r:e.createType(t,n?x(r)||P(r)?null:Array.isArray(r)?r:[r]:r)}function Sm(e,t){return(t&&v(t.entries)?[...t.entries()]:Object.entries(t||{})).reduce(((t,[r,n])=>(t[r]=function(e,t,r){return"ss58Format"===t?Tm(e,"Option<u32>",r,!1):"tokenDecimals"===t?Tm(e,"Option<Vec<u32>>",r):"tokenSymbol"===t?Tm(e,"Option<Vec<Text>>",r):r}(e,r,n),t)),{ss58Format:e.createType("Option<u32>"),tokenDecimals:e.createType("Option<Vec<u32>>"),tokenSymbol:e.createType("Option<Vec<Text>>")})}class Mm extends Uh{constructor(e,t){super(e,Sm(e,t))}get ss58Format(){return this.get("ss58Format")}get tokenDecimals(){return this.get("tokenDecimals")}get tokenSymbol(){return this.get("tokenSymbol")}}X=s("ctT9w");const Am=Vt("aura"),Nm=Vt("BABE"),Om=Vt("FRNK"),Hm=Vt("pow_");class Im extends sm{constructor(e,t){super(e,re(t)?Wt(t,{isLe:!1}):t,32)}get isAura(){return this.eq(Am)}get isBabe(){return this.eq(Nm)}get isGrandpa(){return this.eq(Om)}get isPow(){return this.eq(Hm)}_getAuraAuthor(t,r){return r[this.registry.createType("RawAuraPreDigest",t.toU8a(!0)).slotNumber.mod(new(e(X))(r.length)).toNumber()]}_getBabeAuthor(e,t){return t[this.registry.createType("RawBabePreDigestCompat",e.toU8a(!0)).value.toNumber()]}_getBytesAsAuthor(e){return this.registry.createType("AccountId",e)}extractAuthor(e,t){if(null!=t&&t.length){if(this.isAura)return this._getAuraAuthor(e,t);if(this.isBabe)return this._getBabeAuthor(e,t)}if(this.isPow||20===e.length)return this._getBytesAsAuthor(e)}toHuman(){return this.toString()}toRawType(){return"ConsensusEngineId"}toString(){return this.isAscii?Xt(this):Lt(this)}}const Vm=new Uint8Array([255]);class Em extends hp{constructor(e,t=new Uint8Array){super(e,Em._decodeAddress(e,t))}static _decodeAddress(e,t){return t instanceof Em?t._raw:t instanceof gm||t instanceof pm?t:lr(t)||re(t)||_(t)?e.createType("AccountIndex",t):Array.isArray(t)||Y(t)||Ht(t)?function(e,t){if(32===t.length)return e.createType("AccountId",t);if(255===t[0])return e.createType("AccountId",t.subarray(1));const[r,n]=pm.readLength(t);return e.createType("AccountIndex",Bt(t.subarray(r,r+n),!0))}(e,Et(t)):function(e,t){const r=lh(t);return 32===r.length?e.createType("AccountId",r):e.createType("AccountIndex",Bt(r,!0))}(e,t)}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this._raw instanceof pm?pm.calcLength(this._raw):this._raw.encodedLength}toHex(){return Lt(this.toU8a())}toRawType(){return"Address"}toU8a(e){const t=this._raw.toU8a().subarray(0,this._rawLength);return e?t:zt(this._raw instanceof pm?pm.writeLength(t):Vm,t)}}function zm(e,t){return[0,32].includes(t.length)?{Id:t}:20===t.length?{Address20:t}:t.length<=8?{Index:e.createType("AccountIndex",t).toNumber()}:t}class Cm extends Op{constructor(e,t){super(e,{Id:"AccountId",Index:"Compact<AccountIndex>",Raw:"Bytes",Address32:"H256",Address20:"H160"},function(e,t){return t instanceof gm?{Id:t}:Ht(t)?zm(e,t):t instanceof Cm?t:t instanceof pm||lr(t)||re(t)?{Index:re(t)?t:t.toNumber()}:w(t)?zm(e,lh(t.toString())):t}(e,t))}toString(){return this.value.toString()}}class jm extends Boolean{constructor(e,t=!1){super(function(e){return Ht(e)?1===e[0]:e instanceof Boolean?e.valueOf():!!e}(t)),this.registry=void 0,this.createdAtHash=void 0,this.registry=e}get encodedLength(){return 1}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isFalse}get isFalse(){return!this.isTrue}get isTrue(){return this.valueOf()}eq(e){return this.valueOf()===(e instanceof Boolean?e.valueOf():e)}toHex(){return Lt(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.valueOf()}toRawType(){return"bool"}toString(){return this.toJSON().toString()}toU8a(e){return new Uint8Array([this.valueOf()?1:0])}}const Lm=128;function Rm(e){return e?new Uint8Array([128]):new Uint8Array([0])}function Bm(e,t){return Ht(t)?function(e){return e.length?e.subarray(0,1):new Uint8Array([0])}(t):P(t)||t instanceof Boolean||F(t)?Rm(new jm(e,t).isTrue):re(t)?Rm(t<0):function(e,t){const r=new jm(e,t.aye).isTrue?Lm:0,n=e.createType("Conviction",t.conviction||0);return new Uint8Array([r|n.index])}(e,t)}class Dm extends sm{constructor(e,t){const r=Bm(e,t);super(e,r,8),this._aye=void 0,this._conviction=void 0,this._aye=(r[0]&Lm)===Lm,this._conviction=this.registry.createType("Conviction",127&r[0])}get conviction(){return this._conviction}get isAye(){return this._aye}get isNay(){return!this.isAye}toHuman(e){return{conviction:this.conviction.toHuman(e),vote:this.isAye?"Aye":"Nay"}}toRawType(){return"Vote"}}n(im,om);var Xm={};function qm(e){if(Array.isArray(e)||w(e)){const t=Et(e);return[t.length/8,t]}return function(e){if(!e||!e.length)return[0,new Uint8Array];const[t,r]=Kt(e),n=t+Math.ceil(r.toNumber()/8);return k(n<=e.length,(()=>`BitVec: required length less than remainder, expected at least ${n}, found ${e.length}`)),[r.toNumber(),e.subarray(t,n)]}(e)}r(Xm,"BitVec",(function(){return Wm})),r(Xm,"bool",(function(){return jm})),r(Xm,"Bool",(function(){return jm})),r(Xm,"Bytes",(function(){return Gm})),r(Xm,"Data",(function(){return Ym})),r(Xm,"i8",(function(){return Km})),r(Xm,"I8",(function(){return Km})),r(Xm,"i16",(function(){return Qm})),r(Xm,"I16",(function(){return Qm})),r(Xm,"i32",(function(){return _m})),r(Xm,"I32",(function(){return _m})),r(Xm,"i64",(function(){return $m})),r(Xm,"I64",(function(){return $m})),r(Xm,"i128",(function(){return ey})),r(Xm,"I128",(function(){return ey})),r(Xm,"i256",(function(){return ty})),r(Xm,"I256",(function(){return ty})),r(Xm,"Null",(function(){return ip})),r(Xm,"StorageKey",(function(){return Ry})),r(Xm,"Text",(function(){return qy})),r(Xm,"Type",(function(){return Wy})),r(Xm,"u8",(function(){return Fy})),r(Xm,"U8",(function(){return Fy})),r(Xm,"u16",(function(){return Uy})),r(Xm,"U16",(function(){return Uy})),r(Xm,"u32",(function(){return um})),r(Xm,"U32",(function(){return um})),r(Xm,"u64",(function(){return jp})),r(Xm,"U64",(function(){return jp})),r(Xm,"u128",(function(){return Gy})),r(Xm,"U128",(function(){return Gy})),r(Xm,"u256",(function(){return Zy})),r(Xm,"U256",(function(){return Zy})),r(Xm,"usize",(function(){return Yy})),r(Xm,"USize",(function(){return Yy}));class Wm extends Gh{constructor(e,t){const[r,n]=qm(t);super(e,n),this._decodedLength=void 0,this._decodedLength=r}get encodedLength(){return this.length+Yt(this._decodedLength).length}toHuman(){return`0b${[...this.toU8a(!0)].map((e=>`00000000${e.toString(2)}`.slice(-8))).join("_")}`}toRawType(){return"BitVec"}toU8a(e){const t=super.toU8a();return e?t:zt(Yt(this._decodedLength),t)}}const Fm=10485760;function Um(e){return Array.isArray(e)||w(e)?[Et(e),0]:e instanceof Gh||!Ht(e)?[e,0]:function(e){if(!e.length)return[new Uint8Array,0];const[t,r]=Kt(e),n=t+r.toNumber();return k(r.lten(Fm),(()=>`Bytes length ${r.toString()} exceeds 10485760`)),k(n<=e.length,(()=>`Bytes: required length less than remainder, expected at least ${n}, found ${e.length}`)),[e.subarray(t,n),n]}(e)}class Gm extends Gh{constructor(e,t){const[r,n]=Um(t);super(e,r,n)}get encodedLength(){return this.length+Yt(this.length).length}toRawType(){return"Bytes"}toU8a(e){return e?super.toU8a(e):Jt(this)}}function Zm(e,t){return Ht(t)||w(t)?function(e,t){const r=t[0];if(!r)return[void 0,void 0];if(r>=1&&r<=33){const n=r-1,i=t.subarray(1,n+1);return[e.createType("Raw",i),1]}if(r>=34&&r<=37)return[t.subarray(1,33),r-32];throw new Error(`Unable to decode Data, invalid indicator byte ${r}`)}(e,Et(t)):t?[t,void 0]:[void 0,void 0]}class Ym extends Op{constructor(e,t){super(e,{None:"Null",Raw:"Bytes",BlakeTwo256:"H256",Sha256:"H256",Keccak256:"H256",ShaThree256:"H256"},...Zm(e,t)),k(!this.isRaw||this.asRaw.length<=32,"Data.Raw values are limited to a maximum length of 32 bytes")}get asBlakeTwo256(){return this.value}get asKeccak256(){return this.value}get asRaw(){return this.value}get asSha256(){return this.value}get asShaThree256(){return this.value}get isBlakeTwo256(){return 2===this.index}get isKeccak256(){return 4===this.index}get isNone(){return 0===this.index}get isRaw(){return 1===this.index}get isSha256(){return 3===this.index}get isShaThree256(){return 5===this.index}get encodedLength(){return this.toU8a().length}toU8a(){if(0===this.index)return new Uint8Array(1);if(1===this.index){const e=this.value.toU8a(!0),t=Math.min(e.length,32),r=new Uint8Array(t+1);return r.set([t+1],0),r.set(e.subarray(0,t),1),r}const e=new Uint8Array(33);return e.set([this.index+32],0),e.set(this.value.toU8a(),1),e}}class Jm extends zp{constructor(e,t=0,r){super(e,t,r,!0)}static with(e,t){return class extends Jm{constructor(t,r){super(t,r,e)}toRawType(){return t||super.toRawType()}}}}class Km extends(Jm.with(8)){constructor(...e){super(...e),this.__IntType="i8"}}class Qm extends(Jm.with(16)){constructor(...e){super(...e),this.__IntType="i16"}}class _m extends(Jm.with(32)){constructor(...e){super(...e),this.__IntType="i32"}}class $m extends(Jm.with(64)){constructor(...e){super(...e),this.__IntType="i64"}}class ey extends(Jm.with(128)){constructor(...e){super(...e),this.__IntType="i128"}}class ty extends(Jm.with(256)){constructor(...e){super(...e),this.__IntType="i256"}}function ry(e,t){const r=e.getTypeDef(t);return r.lookupName||r.type}function ny(e,t=[]){for(let r=0;r<e.length;r++){const n=e[r];Array.isArray(n)?ny(n,t):t.push(n)}return[...new Set(t)]}const iy=["BTreeMap","BTreeSet","HashMap","Vec"],oy=iy.concat(["Compact","DoNotConstruct","Int","Linkage","Range","RangeInclusive","Result","Option","UInt","WrapperOpaque"]),sy=["<","(","[",'"',","," "],ay=[uy("<T::InherentOfflineReport as InherentOfflineReport>::Inherent","InherentOfflineReport",!1),uy("VecDeque<","Vec<",!1),e=>{for(let t=0;t<e.length;t++)if("<"===e[t]){const r=cy(e,t+1)-14;" as HasCompact"===e.substr(r,14)&&(e=`Compact<${e.substr(t+1,r-t-1)}>`)}return e},fy("Bounded",!0),fy("Weak",!1),function(){const e=/\s/g,t=/(T|Self)::/g,r=/<(T|Self)asTrait>::/g,n=/<Tas[a-z]+::Trait>::/g,i=/<LookupasStaticLookup>/g,o=/::Type/g;return s=>(e.lastIndex=0,t.lastIndex=0,r.lastIndex=0,n.lastIndex=0,i.lastIndex=0,o.lastIndex=0,s.replace(e,"").replace(t,"").replace(r,"").replace(n,"").replace(i,"Lookup").replace(o,""))}(),function(){const e=e=>`(${e},${e})`;return t=>dy(t,"PairOf<",e)}(),function(e){const t=e=>e;return r=>dy(r,e,t)}("Box<"),e=>{for(let t=0;t<e.length;t++)if("<"===e[t]&&!oy.find((r=>{const n=t-r.length;return n>=0&&e.substr(n,r.length)===r&&(0===n||sy.includes(e[n-1]))}))){const r=cy(e,t+1);e=`${e.substr(0,t)}${e.substr(r+1)}`}return e},uy("String","Text"),uy("Vec<u8>","Bytes"),uy("&\\[u8\\]","Bytes"),uy("&'static\\[u8\\]","Bytes"),uy("RawAddress","Address"),uy("Lookup::Source","LookupSource"),uy("Lookup::Target","LookupTarget"),uy("exec::StorageKey","ContractStorageKey"),function(){const e=/,\)/g,t=/\(([^,]+)\)/;return r=>(e.lastIndex=0,r.replace(e,")").replace(t,"$1"))}(),(e,{allowNamespaces:t}={})=>{let r=0;for(;-1!==r;)if(r=e.indexOf("::"),0===r)e=e.substr(2);else if(-1!==r){if(t)return e;let n=r;for(;-1!==n&&!sy.includes(e[n]);)n--;e=`${e.substr(0,n+1)}${e.substr(r+2)}`}return e}];function cy(e,t){let r=0;for(let n=t;n<e.length;n++)if(">"===e[n]){if(!r)return n;r--}else"<"===e[n]&&r++;throw new Error(`Unable to find closing matching <> on '${e}' (start ${t})`)}function uy(e,t,r=!0){const n=new RegExp(`(^${e}|${sy.map((t=>`\\${t}${e}`)).join("|")})`,"g"),i=e=>(n.lastIndex=0,r&&sy.includes(e[0])?`${e[0]}${t}`:t);return e=>e.replace(n,i)}function dy(e,t,r){let n=-1;for(;;){if(n=e.indexOf(t,n+1),-1===n)return e;const i=n+t.length,o=cy(e,i);e=`${e.substr(0,n)}${r(e.substr(i,o-i))}${e.substr(o+1)}`}}function fy(e,t){return r=>iy.reduce(((r,n)=>dy(r,`${e}${n}<`,(e=>{const r=e.split(",").map((e=>e.trim())).filter((e=>e));return t&&r.pop(),`${n}<${r.join(",")}>`}))),r)}const ly=new Map;function hy(e,t){let r=e.toString();if(!t){const e=ly.get(r);if(e)return e}for(let e=0;e<ay.length;e++)r=ay[e](r,t);return r=r.trim(),t||ly.set(e.toString(),r),r}let py;var my;function yy(...e){return!e.some((e=>0!==e))}(my=py||(py={}))[my.BTreeMap=0]="BTreeMap",my[my.BTreeSet=1]="BTreeSet",my[my.Compact=2]="Compact",my[my.DoNotConstruct=3]="DoNotConstruct",my[my.Enum=4]="Enum",my[my.HashMap=5]="HashMap",my[my.Int=6]="Int",my[my.Linkage=7]="Linkage",my[my.Null=8]="Null",my[my.Option=9]="Option",my[my.Plain=10]="Plain",my[my.Range=11]="Range",my[my.Result=12]="Result",my[my.Set=13]="Set",my[my.Si=14]="Si",my[my.Struct=15]="Struct",my[my.Tuple=16]="Tuple",my[my.UInt=17]="UInt",my[my.Vec=18]="Vec",my[my.VecFixed=19]="VecFixed",my[my.WrapperOpaque=20]="WrapperOpaque";const by=["_alias","_fallback"];function gy(e){return w(e)?e.toString():JSON.stringify(e)}function vy(e,t,r){return e.info=py.Enum,Array.isArray(t)?e.sub=t.map(((e,t)=>({index:t,info:py.Plain,name:e,type:"Null"}))):!function(e){const t=Object.values(e);return!t.some((e=>re(e)))||(k(t.every((e=>re(e)&&e>=0&&e<=255)),"Invalid number-indexed enum definition"),!1)}(t)?e.sub=Object.entries(t).map((([e,t])=>({index:t,info:py.Plain,name:e,type:"Null"}))):e.sub=Object.entries(t).map((([e,t],n)=>U({},Ay(gy(t||"Null"),{name:e},r),{index:n}))),e}function wy(e,t,r){const n=Ay(r);return e.sub=[n,n],e}function xy(e,t,r,n){return e.sub=0===r.length?[]:function(e){let[t,r,n,i,o]=[0,0,0,0,0];const s=[],a=a=>{yy(t,r,n,i)&&(s.push(e.substr(o,a-o).trim()),o=a+1)};for(let o=0;o<e.length;o++)switch(e[o]){case",":a(o);break;case"<":t++;break;case">":t--;break;case"[":r++;break;case"]":r--;break;case"{":n++;break;case"}":n--;break;case"(":i++;break;case")":i--}return k(yy(t,r,n,i),(()=>`Invalid definition (missing terminators) found in ${e}`)),s.push(e.substr(o,e.length-o).trim()),s}(r).map((e=>Ay(e,{},n))),e}function Py(e,t,r,n){const[i,o]=t.substr(n.length+1,t.length-n.length-1-1).split(","),s=parseInt(i.trim(),10);return k(s<=8192&&s%8==0,(()=>`${t}: Only support for ${n}<bitLength>, where length <= 8192 and a power of 8, found ${s}`)),e.displayName=o,e.length=s,e}function ky(e,[t,r]){return e.substr(0,t.length)===t&&e.substr(-1*r.length)===r}const Ty=[["[","]",py.VecFixed,function(e,t,r,n){const i=t.length-1;let o=-1,s=0;for(let e=1;e<i&&-1===o;e++)";"===t[e]&&0===s?o=e:["[","(","<"].includes(t[e])?s++:["]",")",">"].includes(t[e])&&s--;k(-1!==o,(()=>`${t}: Unable to extract location of ';'`));const a=t.substr(1,o-1),[c,u]=t.substr(o+1,i-o-1).split(";"),d=parseInt(c.trim(),10);return k(d<=256,(()=>`${t}: Only support for [Type; <length>], where length <= 256`)),e.displayName=u,e.length=d,e.sub=Ay(a,{},n),e}],["{","}",py.Struct,function(e,t,r,n){const i=JSON.parse(t),o=Object.keys(i);return 1===o.length&&"_enum"===o[0]?vy(e,i[o[0]],n):1===o.length&&"_set"===o[0]?function(e,t){return e.info=py.Set,e.length=t._bitLength,e.sub=Object.entries(t).filter((([e])=>!e.startsWith("_"))).map((([e,t])=>({index:t,info:py.Plain,name:e,type:"Null"}))),e}(e,i[o[0]]):(e.alias=i._alias?new Map(Object.entries(i._alias)):void 0,e.fallbackType=i._fallback,e.sub=o.filter((e=>!by.includes(e))).map((e=>Ay(gy(i[e]),{name:e},n))),e)}],["(",")",py.Tuple,xy],["BTreeMap<",">",py.BTreeMap,xy],["HashMap<",">",py.HashMap,xy],["Int<",">",py.Int,function(e,t,r){return Py(e,t,0,"Int")}],["Range<",">",py.Tuple,wy],["RangeInclusive<",">",py.Tuple,wy],["Result<",">",py.Result,xy],["UInt<",">",py.UInt,function(e,t,r){return Py(e,t,0,"UInt")}],["DoNotConstruct<",">",py.DoNotConstruct,function(e,t,r){return e.displayName=t.substr(15,t.length-14-1-1),e}]],Sy=[["BTreeSet<",">",py.BTreeSet],["Compact<",">",py.Compact],["Linkage<",">",py.Linkage],["Option<",">",py.Option],["Vec<",">",py.Vec],["WrapperOpaque<",">",py.WrapperOpaque]];function My(e,[t,r]){return e.substr(t.length,e.length-t.length-r.length)}function Ay(e,{displayName:t,name:r}={},n=0){const i=hy(e),o={displayName:t,info:py.Plain,name:r,type:i};k(64!=++n,"getTypeDef: Maximum nested limit reached");const s=Ty.find((e=>ky(i,e)));if(s)return o.info=s[2],s[3](o,i,My(i,s),n);const a=Sy.find((e=>ky(i,e)));return a&&(o.info=a[2],o.sub=Ay(My(i,a),{},n)),o}function Ny(e){return e.map((e=>{const t=Ay(e);switch(t.info){case py.Plain:return t.lookupName||t.type;case py.BTreeSet:case py.Compact:case py.Option:case py.Vec:case py.VecFixed:case py.WrapperOpaque:return function({lookupName:e,type:t}){return Ny([e||t])}(t.sub);case py.BTreeMap:case py.Enum:case py.HashMap:case py.Result:case py.Set:case py.Struct:case py.Tuple:return function(e){return Ny(e.map((({lookupName:e,type:t})=>e||t)))}(t.sub);default:throw new Error(`Unhandled: Unable to create and validate type from ${e} (info=${py[t.info]})`)}}))}const Oy=Tr("metadata");function Hy(e,t){return t.map((({type:t})=>e.getTypeDef(t).type))}function Iy(e,t){return e.getSiType(t).def.asVariant.variants.map((({fields:t})=>Hy(e,t)))}function Vy(e,t,r){return function(e,t,r){const n=ny(Ny(r)).filter((t=>!e.hasType(t))).sort();if(0!==n.length){const e=`Unknown types found, no types for ${n.join(", ")}`;if(t)throw new Error(e);Oy.warn(e)}return r}(e,r,ny(function({lookup:e,pallets:t}){return t.reduce(((t,{calls:r,constants:n,events:i,storage:o})=>(t.push([Hy(e,n)]),r.isSome&&t.push(Iy(e,r.unwrap().type)),i.isSome&&t.push(Iy(e,i.unwrap().type)),o.isSome&&t.push(o.unwrap().items.map((({type:t})=>{if(t.isPlain)return[e.getTypeDef(t.asPlain).type];const{hashers:r,key:n,value:i}=t.asMap;return 1===r.length?[e.getTypeDef(i).type,e.getTypeDef(n).type]:[e.getTypeDef(i).type,...e.getSiType(n).def.asTuple.map((t=>e.getTypeDef(t).type))]}))),t)),[])}(t)))}function Ey(e){const t=e.map((e=>e.toString().trim())),r=t.findIndex((e=>!e.length));return-1===r?t:t.slice(0,r)}function zy(e,{extrinsic:t,lookup:r,pallets:n}){return e.createType("MetadataLatest",{extrinsic:t,lookup:{types:r.types.map((({id:t,type:r})=>e.createType("PortableType",{id:t,type:{...r,docs:Ey(r.docs)}})))},pallets:n.map((({calls:t,index:r,name:n})=>({calls:e.createType("Option<PalletCallMetadataLatest>",t.unwrapOr(null)),index:r,name:n})))}).toJSON()}const Cy={Blake2_128:[16,!1],Blake2_128Concat:[16,!0],Blake2_256:[32,!1],Identity:[0,!0],Twox128:[16,!1],Twox256:[32,!1],Twox64Concat:[8,!0]};function jy(e,t,r){const n=ry(e.lookup,function(e){return e.isPlain?e.asPlain:e.asMap.value}(t));return r?`Option<${n}>`:n}function Ly(e,t,r){if(!r||!r.type.isMap)return[];const{hashers:n,key:i}=r.type.asMap,o=1===n.length?[i]:e.lookup.getSiType(i).def.asTuple;return function(e,t,r){let n=32;const i=new Array(r.length);for(let o=0;o<r.length;o++){const[s,a]=r[o],[c,u]=Cy[s.type],d=u?e.createType(e.createLookupType(a),t.subarray(n+c)):e.createType("Raw",t.subarray(n,n+c));n+=c+(u?d.encodedLength:0),i[o]=d}return i}(e,t,n.map(((e,t)=>[e,o[t]])))}class Ry extends Gm{constructor(e,t,r={}){const{key:n,method:i,section:o}=function(e){if(Ht(e)||!e||w(e))return{key:e};if(e instanceof Ry)return{key:e,method:e.method,section:e.section};if(v(e))return{key:e(),method:e.method,section:e.section};if(Array.isArray(e)){const[t,r=[]]=e;if(k(v(t),"Expected function input for key construction"),t.meta&&t.meta.type.isMap){const e=t.meta.type.asMap;k(Array.isArray(r)&&r.length===e.hashers.length,(()=>`Expected an array of ${e.hashers.length} values as params to a Map query`))}return{key:t(...r),method:t.method,section:t.section}}throw new Error(`Unable to convert input ${e} to StorageKey`)}(t);super(e,n),this._args=void 0,this._meta=void 0,this._outputType=void 0,this._method=void 0,this._section=void 0,this._outputType=function(e,t){if(t instanceof Ry)return t.outputType;if(v(t))return jy(e,t.meta.type);if(Array.isArray(t)){const[r]=t;if(r.meta)return jy(e,r.meta.type)}return"Raw"}(e,t),this.setMeta(function(e){if(e instanceof Ry)return e.meta;if(v(e))return e.meta;if(Array.isArray(e)){const[t]=e;return t.meta}}(t),r.section||o,r.method||i)}get args(){return this._args}get meta(){return this._meta}get method(){return this._method}get outputType(){return this._outputType}get section(){return this._section}is(e){return e.section===this.section&&e.method===this.method}setMeta(e,t,r){this._meta=e,this._method=r||this._method,this._section=t||this._section,e&&(this._outputType=jy(this.registry,e.type));try{this._args=Ly(this.registry,this.toU8a(!0),this.meta)}catch(e){}return this}toHuman(){return this._args.length?this._args.map((e=>e.toHuman())):super.toHuman()}toRawType(){return"StorageKey"}}const By=131072;var Dy=Sf("initialU8aLength"),Xy=Sf("override");class qy extends String{constructor(e,t){const[r,n]=function(e){if(Ht(e)){if(!e.length)return["",0];if(e instanceof Gh)return[Xt(e),0];const[t,r]=Kt(e),n=t+r.toNumber();return k(r.lten(By),(()=>`Text: length ${r.toString()} exceeds 131072`)),k(n<=e.length,(()=>`Text: required length less than remainder, expected at least ${n}, found ${e.length}`)),[Xt(e.subarray(t,n)),n]}return Y(e)?[Xt(ae(e)),0]:[e?e.toString():"",0]}(t);super(r),this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,Dy,{writable:!0,value:void 0}),Object.defineProperty(this,Xy,{writable:!0,value:null}),this.registry=e,kf(this,Dy)[Dy]=n}get encodedLength(){return this.toU8a().length}get initialU8aLength(){return kf(this,Dy)[Dy]}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.length}get length(){return super.length}eq(e){return!!w(e)&&this.toString()===e.toString()}setOverride(e){kf(this,Xy)[Xy]=e}toHex(){return Lt(this.toU8a(!0))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toRawType(){return"Text"}toString(){return kf(this,Xy)[Xy]||super.toString()}toU8a(e){const t=Vt(super.toString());return e?t:Jt(t)}}class Wy extends qy{constructor(e,t=""){super(e,t),this.setOverride(hy(this.toString()))}toRawType(){return"Type"}}class Fy extends(Cp.with(8)){constructor(...e){super(...e),this.__UIntType="u8"}}class Uy extends(Cp.with(16)){constructor(...e){super(...e),this.__UIntType="u16"}}class Gy extends(Cp.with(128)){constructor(...e){super(...e),this.__UIntType="u128"}}class Zy extends(Cp.with(256)){constructor(...e){super(...e),this.__UIntType="u256"}}class Yy extends um{constructor(e,t){throw super(e,t),new Error("The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.")}}n(fp,lp),n(fp,im),n(fp,Xm);const Jy=Tr("Map");function Ky(e,t,r,n){const i=new Map;for(const[o,s]of n.entries()){const n=t.prototype instanceof tp||t.prototype instanceof ep||t.prototype instanceof Op;try{i.set(o instanceof t?o:new t(e,n?JSON.parse(o):o),s instanceof r?s:new r(e,s))}catch(e){throw Jy.error("Failed to decode key or value:",e.message),e}}return[i,0]}function Qy(e,t,r,n){const i=Lh(e,t),o=Lh(e,r);if(!n)return[new Map,0];if(Ht(n)||Y(n))return function(e,t,r,n){const i=new Map,[o,s]=Kt(n),a=s.toNumber(),c=[];for(let e=0;e<a;e++)c.push(t,r);const[u,d]=Ch(e,n.subarray(o),c);for(let e=0;e<u.length;e+=2)i.set(u[e],u[e+1]);return[i,o+d]}(e,i,o,Et(n));if(n instanceof Map)return Ky(e,i,o,n);if(hr(n))return Ky(e,i,o,new Map(Object.entries(n)));throw new Error("Map: cannot decode type")}var _y=Sf("KeyClass"),$y=Sf("ValClass"),eb=Sf("type");class tb extends Map{constructor(e,t,r,n,i="HashMap"){const[o,s]=Qy(e,t,r,n);var a;super("BTreeMap"===i?(a=o,new Map(Array.from(a.entries()).sort((([e],[t])=>Wh(e,t))))):o),this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,_y,{writable:!0,value:void 0}),Object.defineProperty(this,$y,{writable:!0,value:void 0}),this.initialU8aLength=void 0,Object.defineProperty(this,eb,{writable:!0,value:void 0}),this.registry=e,this.initialU8aLength=s,kf(this,_y)[_y]=Lh(e,t),kf(this,$y)[$y]=Lh(e,r),kf(this,eb)[eb]=i}get encodedLength(){let e=Yt(this.size).length;for(const[t,r]of this.entries())e+=r.encodedLength+t.encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.size}eq(e){return Ih(this,e)}toHex(){return Lt(this.toU8a())}toHuman(e){const t={};for(const[r,n]of this.entries())t[r.toString()]=n.toHuman(e);return t}toJSON(){const e={};for(const[t,r]of this.entries())e[t.toString()]=r.toJSON();return e}toRawType(){return`${kf(this,eb)[eb]}<${this.registry.getClassName(kf(this,_y)[_y])||new(kf(this,_y)[_y])(this.registry).toRawType()},${this.registry.getClassName(kf(this,$y)[$y])||new(kf(this,$y)[$y])(this.registry).toRawType()}>`}toString(){return Mr(this.toJSON())}toU8a(e){const t=new Array;e||t.push(Yt(this.size));for(const[r,n]of this.entries())t.push(r.toU8a(e),n.toU8a(e));return zt(...t)}}class rb extends tb{static with(e,t){return class extends rb{constructor(r,n){super(r,e,t,n,"BTreeMap")}}}}const nb=Tr("BTreeSet");function ib(e,t,r){if(!r)return[new Set,0];const n=Lh(e,t);if(Ht(r)||Y(r))return function(e,t,r){const n=new Set,[i,o]=Kt(r),[s,a]=jh(e,r,i,t,o.toNumber());for(let e=0;e<s.length;e++)n.add(s[e]);return[n,a+i]}(e,n,Et(r));if(Array.isArray(r)||r instanceof Set)return function(e,t,r){const n=new Set;return r.forEach((r=>{try{n.add(r instanceof t?r:new t(e,r))}catch(e){throw nb.error("Failed to decode key or value:",e.message),e}})),[n,0]}(e,n,r);throw new Error("BTreeSet: cannot decode type")}var ob=Sf("ValClass");class sb extends Set{constructor(e,t,r){const[n,i]=ib(e,t,r);var o;super((o=n,new Set(Array.from(o).sort(Wh)))),this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0,Object.defineProperty(this,ob,{writable:!0,value:void 0}),this.registry=e,this.initialU8aLength=i,kf(this,ob)[ob]=Lh(e,t)}static with(e){return class extends sb{constructor(t,r){super(t,e,r)}}}get encodedLength(){let e=Yt(this.size).length;for(const t of this.values())e+=t.encodedLength;return e}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.size}get strings(){return[...super.values()].map((e=>e.toString()))}eq(e){return t=this,r=e,Array.isArray(r)?Vh(t,r):r instanceof Set?Vh(t,[...r.values()]):!!hr(r)&&Vh(t,Object.values(r));var t,r}toHex(){return Lt(this.toU8a())}toHuman(e){const t=[];for(const r of this.values())t.push(r.toHuman(e));return t}toJSON(){const e=[];for(const t of this.values())e.push(t.toJSON());return e}toRawType(){return`BTreeSet<${this.registry.getClassName(kf(this,ob)[ob])||new(kf(this,ob)[ob])(this.registry).toRawType()}>`}toString(){return Mr(this.toJSON())}toU8a(e){const t=new Array;e||t.push(Yt(this.size));for(const r of this.values())t.push(r.toU8a(e));return zt(...t)}}var ab=Sf("Type"),cb=Sf("raw");class ub{constructor(e,t,r=0){this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0,Object.defineProperty(this,ab,{writable:!0,value:void 0}),Object.defineProperty(this,cb,{writable:!0,value:void 0}),this.registry=e,kf(this,ab)[ab]=Lh(e,t);const[n,i]=ub.decodeCompact(e,kf(this,ab)[ab],r);this.initialU8aLength=i,kf(this,cb)[cb]=n}static with(e){return class extends ub{constructor(t,r){super(t,e,r)}}}static decodeCompact(e,t,r){if(r instanceof ub)return[new t(e,kf(r,cb)[cb]),0];if(r instanceof t)return[r,0];if(w(r)||re(r)||lr(r)||_(r))return[new t(e,r),0];const[n,i]=Kt(r);return[new t(e,i),n]}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return kf(this,cb)[cb].isEmpty}bitLength(){return kf(this,cb)[cb].bitLength()}eq(e){return kf(this,cb)[cb].eq(e instanceof ub?kf(e,cb)[cb]:e)}toBigInt(){return kf(this,cb)[cb].toBigInt()}toBn(){return kf(this,cb)[cb].toBn()}toHex(e){return kf(this,cb)[cb].toHex(e)}toHuman(e){return kf(this,cb)[cb].toHuman(e)}toJSON(){return kf(this,cb)[cb].toJSON()}toNumber(){return kf(this,cb)[cb].toNumber()}toRawType(){return`Compact<${this.registry.getClassName(kf(this,ab)[ab])||kf(this,cb)[cb].toRawType()}>`}toString(){return kf(this,cb)[cb].toString()}toU8a(e){return Yt(kf(this,cb)[cb].toBn())}unwrap(){return kf(this,cb)[cb]}}class db extends tb{static with(e,t){return class extends db{constructor(r,n){super(r,e,t,n)}}}}var fb=Sf("rangeName");class lb extends np{constructor(e,t,r,n="Range"){super(e,{end:t,start:t},r),Object.defineProperty(this,fb,{writable:!0,value:void 0}),kf(this,fb)[fb]=n}static with(e){return class extends lb{constructor(t,r){super(t,e,r)}}}get start(){return this[0]}get end(){return this[1]}toRawType(){return`${kf(this,fb)[fb]}<${this.start.toRawType()}>`}}class hb extends lb{constructor(e,t,r){super(e,t,r,"RangeInclusive")}static with(e){return class extends hb{constructor(t,r){super(t,e,r)}}}}class pb extends Op{constructor(e,t,r,n){super(e,{Ok:t,Err:r},n)}static with(e){return class extends pb{constructor(t,r){super(t,e.Ok,e.Err,r)}}}get asErr(){return k(this.isErr,"Cannot extract Err value from Ok result, check isErr first"),this.value}get asError(){return this.asErr}get asOk(){return k(this.isOk,"Cannot extract Ok value from Err result, check isOk first"),this.value}get isEmpty(){return this.isOk&&this.value.isEmpty}get isErr(){return!this.isOk}get isError(){return this.isErr}get isOk(){return 0===this.index}toRawType(){const e=this._toRawStruct();return`Result<${e.Ok},${e.Err}>`}}X=s("ctT9w");function mb(t,r){const n=new(e(X))(0);for(let e=0;e<r.length;e++)n.ior($(t[r[e]]||0));return n}function yb(e,t){const r=$(t),n=Object.keys(e),i=[];for(let t=0;t<n.length;t++){const o=n[t];r.and($(e[o])).eq($(e[o]))&&i.push(o)}const o=mb(e,i);return k(r.eq(o),(()=>`Set: Mismatch decoding '${r.toString()}', computed as '${o.toString()}' with ${i.join(", ")}`)),i}function bb(e,t=0,r){k(r%8==0,(()=>`Expected valid bitLength, power of 8, found ${r}`));const n=r/8;if(Ht(t))return 0===t.length?[]:yb(e,Bt(t.subarray(0,n),{isLe:!0}));if(w(t))return bb(e,Et(t),n);if(t instanceof Set||Array.isArray(t)){return function(e,t){const r=new Array(t.length);for(let n=0;n<t.length;n++){const i=t[n];k(!P(e[i]),(()=>`Set: Invalid key '${i}' passed to Set, allowed ${Object.keys(e).join(", ")}`)),r[n]=i}return r}(e,Array.isArray(t)?t:[...t.values()])}return yb(e,t)}var gb=Sf("allowed"),vb=Sf("byteLength");class wb extends Set{constructor(e,t,r,n=8){super(bb(t,r,n)),this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,gb,{writable:!0,value:void 0}),Object.defineProperty(this,vb,{writable:!0,value:void 0}),this.add=e=>(k(P(kf(this,gb)[gb])||!P(kf(this,gb)[gb][e]),(()=>`Set: Invalid key '${e}' on add`)),super.add(e),this),this.registry=e,kf(this,gb)[gb]=t,kf(this,vb)[vb]=n/8}static with(e,t){const r=Object.keys(e),n=new Array(r.length);for(let e=0;e<r.length;e++)n[e]=`is${Fr(r[e])}`;return class extends wb{constructor(i,o){super(i,e,o,t),Hr(this,n,((e,t)=>this.strings.includes(r[t])))}}}get encodedLength(){return kf(this,vb)[vb]}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.size}get strings(){return[...super.values()]}get valueEncoded(){return mb(kf(this,gb)[gb],this.strings)}eq(e){return Array.isArray(e)?Oh(this.strings.sort(),e.sort()):e instanceof Set?this.eq([...e.values()]):!(!re(e)&&!lr(e))&&this.valueEncoded.eq($(e))}toHex(){return Lt(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.strings}toNumber(){return this.valueEncoded.toNumber()}toRawType(){return Mr({_set:kf(this,gb)[gb]})}toString(){return`[${this.strings.join(", ")}]`}toU8a(e){return Wt(this.valueEncoded,{bitLength:8*kf(this,vb)[vb],isLe:!0})}}const xb=Tr("Vec");function Pb(e,t,r,n=-1){if(Array.isArray(r)){const n=new Array(r.length);for(let i=0;i<r.length;i++){const o=r[i];try{n[i]=o instanceof t?o:new t(e,o)}catch(e){throw xb.error(`Unable to decode on index ${i}`,e.message),e}}return[n,0,0]}const i=Et(r);let o=0;if(-1===n){const[e,t]=Kt(i);k(t.lten(65536),(()=>`Vec length ${t.toString()} exceeds 65536`)),n=t.toNumber(),o=e}return jh(e,i,o,t,n)}var kb=Sf("Type");class Tb extends tp{constructor(e,t,r=[]){const n=Lh(e,t),[i,o]=Pb(e,n,r);super(e,i,o),Object.defineProperty(this,kb,{writable:!0,value:void 0}),kf(this,kb)[kb]=n}static with(e){return class extends Tb{constructor(t,r){super(t,e,r)}}}get Type(){return kf(this,kb)[kb].name}indexOf(e){const t=e instanceof kf(this,kb)[kb]?e:new(kf(this,kb)[kb])(this.registry,e);for(let e=0;e<this.length;e++)if(t.eq(this[e]))return e;return-1}toRawType(){return`Vec<${this.registry.getClassName(kf(this,kb)[kb])||new(kf(this,kb)[kb])(this.registry).toRawType()}>`}}var Sb=Sf("Type");class Mb extends tp{constructor(e,t,r,n=[]){const i=Lh(e,t),[o,,s]=Ht(n)?jh(e,n,0,i,r):function(e,t,r,n){const[i,o,s]=Pb(e,r,t,n);for(;i.length<n;)i.push(new r(e));return k(i.length===n,(()=>`Expected a length of exactly ${n} entries`)),[i,o,s]}(e,n,i,r);super(e,o,s),Object.defineProperty(this,Sb,{writable:!0,value:void 0}),kf(this,Sb)[Sb]=i}static with(e,t){return class extends Mb{constructor(r,n){super(r,e,t,n)}}}get Type(){return new(kf(this,Sb)[Sb])(this.registry).toRawType()}get encodedLength(){let e=0;for(let t=0;t<this.length;t++)e+=this[t].encodedLength;return e}toU8a(){const e=new Array(this.length);for(let t=0;t<this.length;t++)e[t]=this[t].toU8a();return e.length?zt(...e):new Uint8Array([])}toRawType(){return`[${this.Type};${this.length}]`}}class Ab extends hp{constructor(e,t,r){super(e,function(e,t,r){const n=Lh(e,t);if(Ht(r)){const[,t]=Qt(r);return new n(e,t)}return new n(e,r)}(e,t,r))}static with(e){return class extends Ab{constructor(t,r){super(t,e,r)}}}toRawType(){return`WrapperOpaque<${this._raw.toRawType()}>`}toU8a(e){const t=super.toU8a(e);return e?t:Jt(t)}unwrap(){return this._raw}}function Nb(e,t){return t.toNumber()>=2?e.createType("StorageHasherV10",t.toNumber()+1):e.createType("StorageHasherV10",t)}function Ob(e,t){return t.isMap?[{...t.asMap,hasher:Nb(e,t.asMap.hasher)},1]:t.isDoubleMap?[{...t.asDoubleMap,hasher:Nb(e,t.asDoubleMap.hasher),key2Hasher:Nb(e,t.asDoubleMap.key2Hasher)},2]:[t.asPlain,0]}function Hb(e,{modules:t}){return e.createType("MetadataV10",{modules:t.map((t=>function(e,t){const r=t.storage.unwrapOr(null);return e.createType("ModuleMetadataV10",{...t,storage:r?{...r,items:r.items.map((t=>({...t,type:e.createType("StorageEntryTypeV10",...Ob(e,t.type))})))}:null})}(e,t)))})}function Ib(e,{modules:t}){return e.createType("MetadataV11",{extrinsic:{signedExtensions:[],version:0},modules:t})}function Vb(e,{extrinsic:t,modules:r}){return e.createType("MetadataV12",{extrinsic:t,modules:r.map((t=>e.createType("ModuleMetadataV12",{...t,index:255})))})}function Eb(e,t){return e.createType("MetadataV13",t)}const zb=[["<",">"],["<",","],[",",">"],["(",")"],["(",","],[",",","],[",",")"]];function Cb(e,t){const r=t.toString(),n=e.findIndex((({def:e})=>e.HistoricMetaCompat===r));return-1!==n?n:e.push({def:{HistoricMetaCompat:r}})-1}function jb(e,t){return e.push({def:{Tuple:t}})-1}function Lb(e,t,r,n){return r.push({def:{Variant:{variants:n}},path:[`pallet_${e.toString()}`,"pallet",t]})-1}function Rb(e,t){t.forEach((t=>{const r=Object.keys(e).find((e=>t.eq(e)));if(r)t.setOverride(e[r]);else{const r=t.toString(),n=Object.entries(e).reduce(((e,[t,r])=>zb.reduce(((e,[n,i])=>e.replace(`${n}${t}${i}`,`${n}${r}${i}`)),e)),r);r!==n&&t.setOverride(n)}}))}function Bb(e,t,r,n,i){const o=n.map((({args:r,docs:n,name:o},s)=>(Rb(i,r.map((({type:e})=>e))),t.createType("SiVariant",{docs:n,fields:r.map((({name:r,type:n})=>t.createType("SiField",{name:r,type:Cb(e,n)}))),index:s,name:o}))));return t.createType("PalletCallMetadataV14",{type:Lb(r,"Call",e,o)})}function Db(e,t,r,n){return r.map((({docs:r,name:i,type:o,value:s})=>(Rb(n,[o]),t.createType("PalletConstantMetadataV14",{docs:r,name:i,type:Cb(e,o),value:s}))))}function Xb(e,t,r,n,i){const o=n.map((({docs:e,name:r},n)=>t.createType("SiVariant",{docs:e,fields:[],index:n,name:r})));return t.createType("PalletErrorMetadataV14",{type:Lb(r,"Error",e,o)})}function qb(e,t,r,n,i){const o=n.map((({args:r,docs:n,name:o},s)=>(Rb(i,r),t.createType("SiVariant",{docs:n,fields:r.map((r=>t.createType("SiField",{type:Cb(e,r)}))),index:s,name:o}))));return t.createType("PalletEventMetadataV14",{type:Lb(r,"Event",e,o)})}function Wb(e,t,r,{hashers:n,keys:i,value:o}){return Rb(r,[o,...Array.isArray(i)?i:[i]]),t.createType("StorageEntryTypeV14",{Map:{hashers:n,key:1===n.length?Cb(e,i[0]):jb(e,i.map((t=>Cb(e,t)))),value:Cb(e,o)}})}function Fb(e,t,{items:r,prefix:n},i){return t.createType("PalletStorageMetadataV14",{items:r.map((({docs:r,fallback:n,modifier:o,name:s,type:a})=>{let c;if(a.isPlain){const r=a.asPlain;Rb(i,[r]),c=t.createType("StorageEntryTypeV14",{Plain:Cb(e,r)})}else if(a.isMap){const r=a.asMap;c=Wb(e,t,i,{hashers:[r.hasher],keys:[r.key],value:r.value})}else if(a.isDoubleMap){const r=a.asDoubleMap;c=Wb(e,t,i,{hashers:[r.hasher,r.key2Hasher],keys:[r.key1,r.key2],value:r.value})}else{const r=a.asNMap;c=Wb(e,t,i,{hashers:r.hashers,keys:r.keyVec,value:r.value})}return t.createType("StorageEntryMetadataV14",{docs:r,fallback:n,modifier:o,name:s,type:c})})),prefix:n})}function Ub(e,t,r,{calls:n,constants:i,errors:o,events:s,storage:a}){const c=function({knownTypes:e},t){var r;return U({},kd[t],null===(r=e.typesAlias)||void 0===r?void 0:r[t])}(t,Xr(r.name));return t.createType("PalletMetadataV14",{calls:n&&Bb(e,t,r.name,n,c),constants:Db(e,t,i,c),errors:o&&Xb(e,t,r.name,o),events:s&&qb(e,t,r.name,s,c),index:r.index,name:r.name,storage:a&&Fb(e,t,a,c)})}function Gb(e,t,r){const n=[];Cb(n,"Null"),function(e,t,r){e.register({OriginCaller:{_enum:t.map(((e,t)=>[e.name.toString(),r>=12?e.index.toNumber():t])).sort(((e,t)=>e[1]-t[1])).reduce(((e,[t,r])=>{for(let t=Object.keys(e).length;t<r;t++)e[`Empty${t}`]="Null";return e[t]=of[t]||"Null",e}),{})}})}(e,t.modules,r);const i=function(e,{signedExtensions:t,version:r}){return e.createType("ExtrinsicMetadataV14",{signedExtensions:t.map((e=>({identifier:e,type:0}))),type:0,version:r})}(e,t.extrinsic),o=t.modules.map((t=>Ub(n,e,t,{calls:t.calls.unwrapOr(null),constants:t.constants,errors:t.errors.length?t.errors:null,events:t.events.unwrapOr(null),storage:t.storage.unwrapOr(null)})));return e.createType("MetadataV14",{extrinsic:i,lookup:{types:n.map(((t,r)=>e.createType("PortableType",{id:r,type:t})))},pallets:o})}function Zb(e,t,r){return t}const Yb=1635018093;class Jb extends um{constructor(e,t){super(e,t),this.isEmpty||k(this.eq(Yb),(()=>`MagicNumber mismatch: expected ${e.createType("u32",Yb).toHex()}, found ${this.toHex()}`))}}var Kb=Sf("converted"),Qb=Sf("assertVersion"),_b=Sf("getVersion"),$b=Sf("metadata");class eg extends ep{constructor(e,t){super(e,{magicNumber:Jb,metadata:"MetadataAll"},t),Object.defineProperty(this,Kb,{writable:!0,value:new Map}),Object.defineProperty(this,Qb,{writable:!0,value:e=>(k(this.version<=e,(()=>`Cannot convert metadata from version ${this.version} to ${e}`)),this.version===e)}),Object.defineProperty(this,_b,{writable:!0,value:(e,t)=>{const r=`asV${e}`,n="latest"===e?"asV14":"asV"+(e-1);return"latest"!==e&&kf(this,Qb)[Qb](e)?kf(this,$b)[$b]()[r]:(kf(this,Kb)[Kb].has(e)||kf(this,Kb)[Kb].set(e,t(this.registry,this[n],this.version)),kf(this,Kb)[Kb].get(e))}}),Object.defineProperty(this,$b,{writable:!0,value:()=>this.get("metadata")})}get asCallsOnly(){return new eg(this.registry,{magicNumber:this.magicNumber,metadata:this.registry.createType("MetadataAll",zy(this.registry,this.asLatest),14)})}get asV9(){return kf(this,Qb)[Qb](9),kf(this,$b)[$b]().asV9}get asV10(){return kf(this,_b)[_b](10,Hb)}get asV11(){return kf(this,_b)[_b](11,Ib)}get asV12(){return kf(this,_b)[_b](12,Vb)}get asV13(){return kf(this,_b)[_b](13,Eb)}get asV14(){return kf(this,_b)[_b](14,Gb)}get asLatest(){return kf(this,_b)[_b]("latest",Zb)}get magicNumber(){return this.get("magicNumber")}get version(){return kf(this,$b)[$b]().index}getUniqTypes(e){return Vy(this.registry,this.asLatest,e)}toJSON(){return this.asLatest,super.toJSON()}}const tg=new Uint8Array([109,101,116,97,9]),rg=new Uint8Array;function ng(e=rg){if(Y(e))return ng(Et(e));if(Ht(e))return 0===e.length?tg:e;throw new Error("Invalid type passed to Metadata constructor")}function ig(e,t){if(Ht(t)||!t||Y(t)){const r=ng(t),n=r[4];try{return new eg(e,r)}catch(t){if(9===n)return r[4]=10,ig(e,r);throw t}}return new eg(e,t)}class og extends eg{constructor(e,t){super(e,ig(e,t))}}function sg({name:e}){return qr(e)}function ag({name:e}){return Xr(e)}function cg({name:e}){return e.toString()}function ug(e,{pallets:t},r){const n={};for(let r=0;r<t.length;r++){const{constants:i,name:o}=t[r];i.isEmpty||pr(n,Xr(o),(()=>mr({},i,(t=>{const r=e.createTypeUnsafe(e.createLookupType(t.type),[ae(t.value.toHex())]);return r.meta=t,r}),ag)))}return n}function dg(e,{type:t},r,n){const i={},o=e.getSiType(t).def.asVariant.variants;for(let e=0;e<o.length;e++)pr(i,o[e],n,r);return i}function fg(e,t){return U({args:t.fields.map((({type:t})=>e.getTypeDef(t).type))},t)}function lg(e,{lookup:t,pallets:r},n){const i={};for(let o=0;o<r.length;o++){const{errors:s,index:a,name:c}=r[o];if(s.isSome){const r=n>=12?a.toNumber():o;pr(i,Xr(c),(()=>dg(t,s.unwrap(),cg,(n=>({is:({error:e,index:t})=>t.eq(r)&&e.eq(n.index),meta:e.createType("ErrorMetadataLatest",fg(t,n))})))))}}return i}function hg({events:e}){return e.isSome}function pg(e,{lookup:t,pallets:r},n){const i={},o=r.filter(hg);for(let r=0;r<o.length;r++){const{events:s,index:a,name:c}=o[r],u=n>=12?a.toNumber():r;pr(i,Xr(c),(()=>dg(t,s.unwrap(),cg,(r=>({is:e=>u===e.index[0]&&r.index.eq(e.index[1]),meta:e.createType("EventMetadataLatest",fg(t,r))})))))}return i}function mg({calls:e}){return e.isSome}function yg(e,t,r,n,i){const{fields:o,index:s}=r,a=new Array(o.length);for(let e=0;e<o.length;e++){const{name:r,type:n,typeName:i}=o[e];a[e]=U({name:Xr(r.unwrapOr(`param${e}`)),type:ry(t,n)},i.isSome?{typeName:i.unwrap()}:null)}return function(e,t,r,n){const i=n.fields,o=Xr(n.name),s=(...s)=>(k(i.length===s.length,(()=>`Extrinsic ${t}.${o} expects ${i.length} arguments, got ${s.length}.`)),e.createType("Call",{args:s,callIndex:r},n));return s.is=e=>function(e,t){return e.callIndex[0]===t[0]&&e.callIndex[1]===t[1]}(e,r),s.callIndex=r,s.meta=n,s.method=o,s.section=t,s.toJSON=()=>n.toJSON(),s}(e,n,new Uint8Array([i,s.toNumber()]),e.createType("FunctionMetadataLatest",U({args:a},r)))}function bg(e,{lookup:t,pallets:r},n){const i={},o=r.filter(mg);for(let r=0;r<o.length;r++){const{calls:s,index:a,name:c}=o[r],u=Xr(c),d=n>=12?a.toNumber():r;pr(i,u,(()=>dg(t,s.unwrap(),ag,(r=>yg(e,t,r,u,d)))))}return i}const gg=e=>Sh(e,128),vg={Blake2_128:e=>ch(e,128),Blake2_128Concat:e=>zt(ch(e,128),Et(e)),Blake2_256:e=>ch(e,256),Identity:e=>Et(e),Twox128:e=>Sh(e,128),Twox256:e=>Sh(e,256),Twox64Concat:e=>zt(Sh(e,64),Et(e))};function wg(e,t,r,n,i){const o=new Array(r.length);for(let t=0;t<r.length;t++)o[t]=(s=n[t],vg[s.type]||gg)(e.createType(e.createLookupType(r[t]),i[t]).toU8a());var s;return zt(Sh(t.prefix,128),Sh(t.method,128),...o)}function xg(e){return!P(e)}function Pg(e,t,r,n,i){const{method:o,section:s}=t;return k(Array.isArray(i),(()=>`Call to ${Xr(s||"unknown")}.${Xr(o||"unknown")} needs ${r.length} arguments`)),k(i.filter(xg).length===r.length,(()=>`Call to ${Xr(s||"unknown")}.${Xr(o||"unknown")} needs ${r.length} arguments, found [${i.join(", ")}]`)),Jt(wg(e,t,r,n,i))}function kg(e,t,r){const{meta:{type:n}}=t;let i=null;const o=function({meta:e,method:t,prefix:r,section:n},i){const o=i;return o.meta=e,o.method=qr(t),o.prefix=r,o.section=n,o.toJSON=()=>U({storage:{method:t,prefix:r,section:n}},e.toJSON()),o}(t,((...o)=>{if(n.isPlain)return i||(i=r.skipHashing?Jt(Et(r.key)):Pg(e,t,[],[],[])),i;const{hashers:s,key:a}=n.asMap;return 1===s.length?Pg(e,t,[a],s,o):Pg(e,t,e.lookup.getSiType(a).def.asTuple,s,o)}));return n.isMap&&function(e,t,r){const{meta:{type:n},method:i,section:o}=t;r.iterKey=function(e,{meta:{docs:t,name:r,type:n},section:i},{method:o},s){const a=e.createLookupType(n.asMap.key);return s.meta=e.createType("StorageEntryMetadataLatest",{docs:t,fallback:e.createType("Bytes"),modifier:e.createType("StorageEntryModifierLatest",1),name:r,type:e.createType("StorageEntryTypeLatest",a,0)}),(...t)=>e.createType("StorageKey",s(...t),{method:o,section:i})}(e,t,r,((...r)=>{if(k(0===r.length||n.isMap&&r.length<n.asMap.hashers.length,(()=>`Iteration ${Xr(o||"unknown")}.${Xr(i||"unknown")} needs arguments to be at least one less than the full arguments, found [${r.join(", ")}]`)),r.length&&n.isMap){const{hashers:i,key:o}=n.asMap,s=1===i.length?[o]:e.lookup.getSiType(o).def.asTuple;return new Gh(e,wg(e,t,s.slice(0,r.length),i.slice(0,r.length),r))}return new Gh(e,wg(e,t,[],[],[]))}))}(e,t,o),o.keyPrefix=(...e)=>o.iterKey&&o.iterKey(...e)||Qt(o())[1],o}function Tg(e,t){const r=t.toLowerCase();return e.lookup.types.find((e=>e.type.def.isPrimitive&&e.type.def.asPrimitive.toString().toLowerCase()===r||e.type.def.isHistoricMetaCompat&&e.type.def.asHistoricMetaCompat.toString().toLowerCase()===r))}function Sg(e,t){let r=Tg(e,t);if(!r&&"Bytes"===t){const n=Tg(e,"u8");n&&(r=e.lookup.types.find((e=>e.type.def.isSequence&&e.type.def.asSequence.type.eq(n.id)||e.type.def.isHistoricMetaCompat&&e.type.def.asHistoricMetaCompat.eq(t))))}return r||console.warn(`Unable to map ${t} to a lookup index`),r}function Mg({method:e,prefix:t,section:r},n,{docs:i,type:o}){return s=>{var a;return kg(s,{meta:s.createType("StorageEntryMetadataLatest",{docs:s.createType("Vec<Text>",[i]),modifier:s.createType("StorageEntryModifierLatest","Required"),name:s.createType("Text",e),toJSON:()=>n,type:s.createType("StorageEntryTypeLatest",{Plain:(null===(a=Sg(s,o))||void 0===a?void 0:a.id)||0})}),method:e,prefix:t,section:r},{key:n,skipHashing:!0})}}function Ag(e,t,r){return Mg({method:e,prefix:"Substrate",section:"substrate"},t,r)}const Ng={changesTrieConfig:Ag("changesTrieConfig",":changes_trie",{docs:"Changes trie configuration is stored under this key.",type:"u32"}),childStorageKeyPrefix:Ag("childStorageKeyPrefix",":child_storage:",{docs:"Prefix of child storage keys.",type:"u32"}),code:Ag("code",":code",{docs:"Wasm code of the runtime.",type:"Bytes"}),extrinsicIndex:Ag("extrinsicIndex",":extrinsic_index",{docs:"Current extrinsic index (u32) is stored under this key.",type:"u32"}),heapPages:Ag("heapPages",":heappages",{docs:"Number of wasm linear memory pages required for execution of the runtime.",type:"u64"})};const Og={docs:"Returns the current pallet version from storage",type:"u16"};function Hg(e,{pallets:t},r){const n=function(e){const t={},r=Object.entries(Ng);for(let n=0;n<r.length;n++)t[r[n][0]]=r[n][1](e);return{substrate:t}}(e);for(let r=0;r<t.length;r++){const{name:i,storage:o}=t[r];if(o.isSome){const t=Xr(i),{items:r,prefix:s}=o.unwrap(),a=s.toString();pr(n,t,(()=>mr({palletVersion:Mg({method:"palletVersion",prefix:a,section:t},wg(e,{method:":__STORAGE_VERSION__:",prefix:i.toString()},[],[],[]),Og)(e)},r,(r=>kg(e,{meta:r,method:r.name.toString(),prefix:a,section:t},{})),sg)))}}return n}const Ig=e=>e.toString(),Vg=["BTreeMap","BTreeSet","Compact","HashMap","Option","Result","Vec"];function Eg(e,t,r){const{info:n,sub:i}=t;switch(n){case py.BTreeMap:case py.BTreeSet:case py.Compact:case py.HashMap:case py.Linkage:case py.Option:case py.Result:case py.Vec:case py.WrapperOpaque:return function(e,t,r=Ig){return`${e}${t?`<${(Array.isArray(t)?t:[t]).map(r).join(", ")}>`:""}`}(r,i,(t=>Lg(e,t)))}throw new Error(`Unable to encode ${Mr(t)} with params`)}function zg(e,t,r,n){const i=t.map((({name:e})=>e));k(i.every((e=>!!e)),(()=>`Subtypes does not have consistent names, ${i.join(", ")}`));const o=U({},n);for(let r=0;r<t.length;r++){const n=t[r];o[n.name]=Lg(e,n)}return Mr(r?{_enum:o}:o)}const Cg={[py.BTreeMap]:(e,t)=>Eg(e,t,"BTreeMap"),[py.BTreeSet]:(e,t)=>Eg(e,t,"BTreeSet"),[py.Compact]:(e,t)=>Eg(e,t,"Compact"),[py.DoNotConstruct]:(e,{displayName:t,lookupIndex:r,lookupName:n})=>`DoNotConstruct<${n||t||(P(r)?"Unknown":e.createLookupType(r))}>`,[py.Enum]:(e,{sub:t})=>(k(t&&Array.isArray(t),"Unable to encode Enum type"),t.every((({type:e})=>"Null"===e))?Mr({_enum:t.map((({name:e},t)=>`${e||`Empty${t}`}`))}):zg(e,t,!0)),[py.HashMap]:(e,t)=>Eg(e,t,"HashMap"),[py.Int]:(e,{length:t=32})=>`Int<${t}>`,[py.Linkage]:(e,t)=>Eg(e,t,"Linkage"),[py.Null]:(e,t)=>"Null",[py.Option]:(e,t)=>Eg(e,t,"Option"),[py.Plain]:(e,{displayName:t,type:r})=>t||r,[py.Range]:(e,t)=>Eg(e,t,t.type.includes("RangeInclusive")?"RangeInclusive":"Range"),[py.Result]:(e,t)=>Eg(e,t,"Result"),[py.Set]:(e,{length:t=8,sub:r})=>(k(r&&Array.isArray(r),"Unable to encode Set type"),Mr({_set:r.reduce(((e,{index:t,name:r},n)=>U(e,{[`${r||`Unknown${t||n}`}`]:t||n})),{_bitLength:t||8})})),[py.Si]:(e,{lookupName:t,type:r})=>t||r,[py.Struct]:(e,{alias:t,sub:r})=>(k(r&&Array.isArray(r),"Unable to encode Struct type"),zg(e,r,!1,t?{_alias:[...t.entries()].reduce(((e,[t,r])=>U(e,{[t]:r})),{})}:{})),[py.Tuple]:(e,{sub:t})=>(k(t&&Array.isArray(t),"Unable to encode Tuple type"),`(${t.map((t=>Lg(e,t))).join(",")})`),[py.UInt]:(e,{length:t=32})=>`UInt<${t}>`,[py.Vec]:(e,t)=>Eg(e,t,"Vec"),[py.VecFixed]:(e,{length:t,sub:r})=>(k(re(t)&&!P(r)&&!Array.isArray(r),"Unable to encode VecFixed type"),`[${r.type};${t}]`),[py.WrapperOpaque]:(e,t)=>Eg(e,t,"WrapperOpaque")};function jg(e,t,r=!0){return r&&t.lookupName?t.lookupName:Cg[t.info](e,t)}function Lg(e,t){return t.displayName&&!Vg.some((e=>t.displayName===e))?t.displayName:jg(e,t)}function Rg(e,t){return U({},t,{type:jg(e,t,!1)})}const Bg={toNumber:()=>-1},Dg={Char:"u32",Str:"Text"},Xg=Gg(["*_runtime_*::Call","*_runtime_*::Event","pallet_democracy::vote::Vote","pallet_identity::types::Data","sp_core::crypto::AccountId32","sp_runtime::generic::era::Era","sp_runtime::multiaddress::MultiAddress","account::AccountId20","polkadot_runtime_common::claims::EthereumAddress","primitive_types::*","sp_arithmetic::per_things::*","ink_env::types::*"]),qg=Gg(["pallet_identity::types::BitFlags"]),Wg=["BoundedBTreeMap","BoundedVec","Box","BTreeMap","Cow","Result","Option","WeakBoundedVec","WrapperOpaque"],Fg=["entries","hash","keys","new","size"],Ug=["generic","misc","pallet","traits","types"];function Gg(e){return e.map((e=>e.split("::")))}function Zg({path:e}){return Yg(e).join("::")}function Yg(e){return e.map((e=>e.toString()))}function Jg(e,t){return e.length===t.length&&e.every(((e,r)=>{const n=t[r].toString();if("*"===e||e===n)return!0;if(e.includes("*")&&e.includes("_")&&n.includes("_")){let t=e.split("_"),r=n.split("_");if("*"===t[0]){const e=r.indexOf(t[1]);-1!==e&&(t=t.slice(1),r=r.slice(e))}return 2===t.length&&"*"===t[1]&&t[0]===r[0]||Jg(t,r)}return!1}))}function Kg(e,{id:t,type:{params:r,path:n}}){if(!n.length||Wg.includes(n[n.length-1].toString()))return null;const i=n.map((e=>Fr(e))).filter(((e,t)=>{const r=e.toLowerCase();return!(1===t&&Ug.includes(r)||t!==n.length-1&&r===n[t+1].toLowerCase())}));let o=i.join("");if(2===i.length&&"RawOrigin"===i[1]&&2===r.length&&r[1].type.isSome){const t=e[r[1].type.unwrap().toNumber()];2===t.type.path.length&&(o=`${o}${t.type.path[1].toString()}`)}return[t.toNumber(),o,r]}function Qg(e,t){const r=[],n={};for(let e=0;e<t.length;e++){const i=t[e],o=Kg(t,t[e]);o&&r.push(o),n[i.id.toNumber()]=i}const i=function(e,t){const r={};return t.map((([n,i,o])=>{if(!i)return null;const s=t.filter((([,e])=>i===e));if(!s.some((([e,,t])=>n!==e&&(o.length!==t.length||o.some(((e,r)=>!e.name.eq(t[r].name)||e.type.unwrapOr(Bg).toNumber()!==t[r].type.unwrapOr(Bg).toNumber())))))||!s[0][2].length)return[n,i,o];const a=s[0][2].findIndex((({type:e},t)=>s.every((([,,e])=>e[t].type.isSome))&&s.every((([,,r],n)=>0===n||!r[t].type.eq(e)))));if(-1===a)return[n,i,o];const c=new Array(s.length);for(let t=0;t<s.length;t++){const[r,n,i]=s[t],{def:u,path:d}=e.getSiType(i[a].type.unwrap());if(!u.isPrimitive&&!d.length)return null;c[t]=[r,u.isPrimitive?`${n}${u.asPrimitive.toString()}`:`${n}${d[d.length-1].toString()}`,o]}if(function(e){for(let t=0;t<e.length;t++){const[r,n]=e[t];for(let t=0;t<e.length;t++){const[i,o]=e[t];if(r!==i&&n===o)return!1}}return!0}(c)){for(let e=0;e<c.length;e++){const[t,n]=c[e];r[t]=n}return[n,i,o]}return null})).filter((e=>!!e)).map((([e,t,n])=>[e,r[e]||t,n]))}(e,r),o={},s={},a={};for(let t=0;t<i.length;t++){const[r,n,c]=i[t];s[r]=n,o[n]=e.registry.createLookupType(r),a[n]=c}return[n,o,s,a]}var _g=Sf("names"),$g=Sf("typeDefs"),ev=Sf("types"),tv=Sf("createSiDef"),rv=Sf("getLookupId"),nv=Sf("extract"),iv=Sf("extractArray"),ov=Sf("extractBitSequence"),sv=Sf("extractCompact"),av=Sf("extractComposite"),cv=Sf("extractCompositeSet"),uv=Sf("extractFields"),dv=Sf("extractFieldsAlias"),fv=Sf("extractHistoric"),lv=Sf("extractPrimitive"),hv=Sf("extractAliasPath"),pv=Sf("extractSequence"),mv=Sf("extractTuple"),yv=Sf("extractVariant"),bv=Sf("extractVariantEnum");class gv extends ep{constructor(e,t){super(e,{types:"Vec<PortableType>"},t),Object.defineProperty(this,bv,{value:Cv}),Object.defineProperty(this,yv,{value:zv}),Object.defineProperty(this,mv,{value:Ev}),Object.defineProperty(this,pv,{value:Vv}),Object.defineProperty(this,hv,{value:Iv}),Object.defineProperty(this,lv,{value:Hv}),Object.defineProperty(this,fv,{value:Ov}),Object.defineProperty(this,dv,{value:Nv}),Object.defineProperty(this,uv,{value:Av}),Object.defineProperty(this,cv,{value:Mv}),Object.defineProperty(this,av,{value:Sv}),Object.defineProperty(this,sv,{value:Tv}),Object.defineProperty(this,ov,{value:kv}),Object.defineProperty(this,iv,{value:Pv}),Object.defineProperty(this,nv,{value:xv}),Object.defineProperty(this,rv,{value:wv}),Object.defineProperty(this,tv,{value:vv}),Object.defineProperty(this,_g,{writable:!0,value:void 0}),Object.defineProperty(this,$g,{writable:!0,value:{}}),Object.defineProperty(this,ev,{writable:!0,value:void 0});const[r,n,i,o]=Qg(this,this.types);kf(this,_g)[_g]=i,kf(this,ev)[ev]=r,function(e,t,r,n){if(e.registry.register(t),n.SpRuntimeUncheckedExtrinsic){const[t,,i]=n.SpRuntimeUncheckedExtrinsic,o=e.getSiType(t.type.unwrap()),s=Zg(e.getSiType(i.type.unwrap()));let a=Zg(o);const c="sp_runtime::multiaddress::MultiAddress"===a;if(c){const[t]=o.params;a=Zg(e.getSiType(t.type.unwrap()))}e.registry.register({AccountId:["sp_core::crypto::AccountId32"].includes(a)?"AccountId32":["account::AccountId20","primitive_types::H160"].includes(a)?"AccountId20":"AccountId32",Address:c?"MultiAddress":"AccountId",ExtrinsicSignature:["sp_runtime::MultiSignature"].includes(s)?"MultiSignature":r[i.type.unwrap().toNumber()]||"MultiSignature"})}}(this,n,i,o)}get names(){return Object.values(kf(this,_g)[_g])}get types(){return this.get("types")}getName(e){return kf(this,_g)[_g][kf(this,rv)[rv](e)]}getSiType(e){const t=(kf(this,ev)[ev]||this.types)[kf(this,rv)[rv](e)];return k(t,(()=>`PortableRegistry: Unable to find type with lookupId ${e.toString()}`)),t.type}getTypeDef(e){const t=kf(this,rv)[rv](e);if(!kf(this,$g)[$g][t]){const r=kf(this,_g)[_g][t],n={info:py.DoNotConstruct,lookupIndex:t,lookupName:r,type:this.registry.createLookupType(t)};r&&(kf(this,$g)[$g][t]=n);const i=kf(this,nv)[nv](this.getSiType(e),t);r||(kf(this,$g)[$g][t]=n),Object.keys(i).forEach((e=>{("lookupName"!==e||i[e])&&(kf(this,$g)[$g][t][e]=i[e])})),i.info===py.Plain&&(kf(this,$g)[$g][t].lookupNameRoot=kf(this,$g)[$g][t].lookupName,delete kf(this,$g)[$g][t].lookupName)}return kf(this,$g)[$g][t]}}function vv(e){const t=this.getTypeDef(e),r=e.toNumber();return[py.DoNotConstruct,py.Enum,py.Struct].includes(t.info)&&t.lookupName?{docs:t.docs,info:py.Si,lookupIndex:r,lookupName:kf(this,_g)[_g][r],type:this.registry.createLookupType(e)}:t}function wv(e){return w(e)?(k(this.registry.isLookupType(e),(()=>`PortableRegistry: Expected a lookup string type, found ${e}`)),parseInt(e.replace("Lookup",""),10)):re(e)?e:e.toNumber()}function xv(e,t){const r=[...e.path].join("::");let n;const i=(o=e.path).length&&Xg.some((e=>Jg(e,o)))?o[o.length-1].toString():null;var o;try{if(i)n=kf(this,hv)[hv](t,i);else if(e.def.isArray)n=kf(this,iv)[iv](t,e.def.asArray);else if(e.def.isBitSequence)n=kf(this,ov)[ov](t,e.def.asBitSequence);else if(e.def.isCompact)n=kf(this,sv)[sv](t,e.def.asCompact);else if(e.def.isComposite)n=kf(this,av)[av](t,e,e.def.asComposite);else if(e.def.isHistoricMetaCompat)n=kf(this,fv)[fv](t,e.def.asHistoricMetaCompat);else if(e.def.isPrimitive)n=kf(this,lv)[lv](t,e);else if(e.def.isSequence)n=kf(this,pv)[pv](t,e.def.asSequence);else if(e.def.isTuple)n=kf(this,mv)[mv](t,e.def.asTuple);else{if(!e.def.isVariant)throw new Error(`No SiTypeDef handler for ${e.def.toString()}`);n=kf(this,yv)[yv](t,e,e.def.asVariant)}}catch(n){throw new Error(`PortableRegistry: ${t}${r?` (${r})`:""}: Error extracting ${Mr(e)}: ${n.message}`)}return U({docs:Yg(e.docs),namespace:r},n)}function Pv(e,{len:t,type:r}){return k(!t||t.toNumber()<=256,"Only support for [Type; <length>], where length <= 256"),Rg(this.registry,{info:py.VecFixed,length:t.toNumber(),sub:kf(this,tv)[tv](r)})}function kv(e,{bitOrderType:t,bitStoreType:r}){const n=kf(this,tv)[tv](t),i=kf(this,tv)[tv](r);return k(["bitvec::order::Lsb0","bitvec::order::Msb0"].includes(n.namespace||""),(()=>`Unexpected bitOrder found as ${n.namespace||"<unknown>"}`)),k(i.info===py.Plain&&"u8"===i.type,(()=>`Only u8 bitStore is currently supported, found ${i.type}`)),{info:py.Plain,type:"BitVec"}}function Tv(e,{type:t}){return Rg(this.registry,{info:py.Compact,sub:kf(this,tv)[tv](t)})}function Sv(e,{params:t,path:r},{fields:n}){const i=r[0].toString();if(1===r.length&&"BTreeMap"===i)return Rg(this.registry,{info:py.BTreeMap,sub:t.map((({type:e})=>kf(this,tv)[tv](e.unwrap())))});if(["Range","RangeInclusive"].includes(i))return Rg(this.registry,{info:py.Range,sub:n.map((({name:e,type:t,typeName:r},n)=>U({name:e.isSome?e.unwrap().toString():["start","end"][n]},kf(this,tv)[tv](t),r.isSome?{typeName:hy(r.unwrap())}:null)))});if(r.length){if("WrapperOpaque"===r[r.length-1].toString())return Rg(this.registry,{info:py.WrapperOpaque,sub:kf(this,tv)[tv](t[0].type.unwrap())});if("WrapperKeepOpaque"===r[r.length-1].toString())return{info:py.Plain,type:"Bytes"}}return qg.some((e=>Jg(e,r)))?kf(this,cv)[cv](e,t,n):kf(this,uv)[uv](e,n)}function Mv(e,t,r){return k(1===t.length&&1===r.length,"Set handling expects param/field as single entries"),Rg(this.registry,{info:py.Set,length:this.registry.createType(this.registry.createLookupType(r[0].type)).bitLength(),sub:this.getSiType(t[0].type.unwrap()).def.asVariant.variants.map((({index:e,name:t})=>({index:e.toNumber(),info:py.Plain,name:t.toString(),type:"Null"})))})}function Av(e,t){let r=!0,n=!0;for(let e=0;e<t.length;e++){const{name:i}=t[e];r=r&&i.isSome,n=n&&i.isNone}if(k(n||r,"Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)"),0===t.length)return{info:py.Null,type:"Null"};if(n&&1===t.length){const r=kf(this,tv)[tv](t[0].type);return U({},r,-1===e?{}:{lookupIndex:e,lookupName:kf(this,_g)[_g][e],lookupNameRoot:r.lookupName},t[0].typeName.isSome?{typeName:hy(t[0].typeName.unwrap())}:null)}const[i,o]=kf(this,dv)[dv](t);return Rg(this.registry,U({info:n?py.Tuple:py.Struct},o.size?{alias:o}:null,-1===e?{}:{lookupIndex:e,lookupName:kf(this,_g)[_g][e]},{sub:i}))}function Nv(e){const t=new Map,r=new Array(e.length);for(let n=0;n<e.length;n++){const{docs:i,name:o,type:s,typeName:a}=e[n],c=kf(this,tv)[tv](s);if(o.isNone)r[n]=c;else{let e=Xr(o.unwrap()),s=null;e.includes("#")?(s=e,e=s.replace(/#/g,"_")):Fg.includes(e)&&(s=e,e=`${e}_`),s&&t.set(e,s),r[n]=U({},c,{docs:Yg(i),name:e},a.isSome?{typeName:hy(a.unwrap())}:null)}}return[r,t]}function Ov(e,t){return U({},Ay(t),{displayName:t.toString(),isFromSi:!0})}function Hv(e,t){const r=t.def.asPrimitive.type.toString();return{info:py.Plain,type:Dg[r]||r.toLowerCase()}}function Iv(e,t){return{info:py.Plain,type:t}}function Vv(e,{type:t}){const r=kf(this,tv)[tv](t);return"u8"===r.type?{info:py.Plain,type:"Bytes"}:Rg(this.registry,{info:py.Vec,lookupIndex:e,lookupName:kf(this,_g)[_g][e],sub:r})}function Ev(e,t){if(0===t.length)return{info:py.Null,type:"Null"};if(1===t.length)return this.getTypeDef(t[0]);const r=t.map((e=>kf(this,tv)[tv](e)));return Rg(this.registry,{info:py.Tuple,lookupIndex:e,lookupName:kf(this,_g)[_g][e],sub:r})}function zv(e,{params:t,path:r},{variants:n}){const i=r[0].toString();return"Option"===i?Rg(this.registry,{info:py.Option,sub:kf(this,tv)[tv](t[0].type.unwrap())}):"Result"===i?Rg(this.registry,{info:py.Result,sub:t.map((({type:e},t)=>U({name:["Ok","Error"][t]},kf(this,tv)[tv](e.unwrap()))))}):0===n.length?{info:py.Null,type:"Null"}:kf(this,bv)[bv](e,n)}function Cv(e,t){const r=[];return[...t].sort(((e,t)=>e.index.cmp(t.index))).forEach((({fields:e,index:t,name:n})=>{const i=t.toNumber();for(;r.length!==i;)r.push({index:r.length,info:py.Null,name:`__Unused${r.length}`,type:"Null"});r.push(U(kf(this,uv)[uv](-1,e),{index:t.toNumber(),name:n.toString()}))})),Rg(this.registry,{info:py.Enum,lookupIndex:e,lookupName:kf(this,_g)[_g][e],sub:r})}function jv({lookupName:e,type:t}){return e||t}function Lv(e){return k(e.sub&&Array.isArray(e.sub),(()=>`Expected subtype as TypeDef[] in ${Mr(e)}`)),e.sub}function Rv(e){return jv(function(e){return k(e.sub&&!Array.isArray(e.sub),(()=>`Expected subtype as TypeDef in ${Mr(e)}`)),e.sub}(e))}function Bv(e){const t=Lv(e),r={};for(let e=0;e<t.length;e++)r[t[e].name]=jv(t[e]);return r}function Dv(e){return Lv(e).map(jv)}function Xv({displayName:e,length:t},r){return k(re(t),(()=>`Expected bitLength information for ${e||r.constructor.name}<bitLength>`)),r.with(t,e)}function qv(e,t){const[r,n]=Dv(e);return t.with(r,n)}const Wv={[py.BTreeMap]:(e,t)=>qv(t,rb),[py.BTreeSet]:(e,t)=>sb.with(Rv(t)),[py.Compact]:(e,t)=>ub.with(Rv(t)),[py.DoNotConstruct]:(e,t)=>Ah.with(t.displayName||t.type),[py.Enum]:(e,t)=>{const r=Lv(t);return Op.with(r.every((({type:e})=>"Null"===e))?r.reduce(((e,{index:t,name:r},n)=>(e[r]=t||n,e)),{}):Bv(t))},[py.HashMap]:(e,t)=>qv(t,db),[py.Int]:(e,t)=>Xv(t,Jm),[py.Linkage]:(e,t)=>{const r=`Option<${Rv(t)}>`,n=ep.with({previous:r,next:r});return n.prototype.toRawType=function(){return`Linkage<${this.next.toRawType(!0)}>`},n},[py.Null]:(e,t)=>ip,[py.Option]:(e,t)=>Zp.with(Rv(t)),[py.Plain]:(e,t)=>e.getOrUnknown(t.type),[py.Range]:(e,t)=>(t.type.includes("RangeInclusive")?hb:lb).with(Rv(t)),[py.Result]:(e,t)=>{const[r,n]=Dv(t);return pb.with({Err:n,Ok:r})},[py.Set]:(e,t)=>wb.with(Lv(t).reduce(((e,{index:t,name:r})=>(e[r]=t,e)),{}),t.length),[py.Si]:(e,t)=>Fv(e,e.lookup.getTypeDef(t.type)),[py.Struct]:(e,t)=>ep.with(Bv(t),t.alias),[py.Tuple]:(e,t)=>np.with(Dv(t)),[py.UInt]:(e,t)=>Xv(t,Cp),[py.Vec]:(e,{sub:t})=>(k(t&&!Array.isArray(t),"Expected type information for vector"),"u8"===t.type?Gm:Tb.with(jv(t))),[py.VecFixed]:(e,{displayName:t,length:r,sub:n})=>(k(n&&re(r)&&!Array.isArray(n),"Expected length & type information for fixed vector"),"u8"===n.type?sm.with(8*r,t):Mb.with(jv(n),r)),[py.WrapperOpaque]:(e,t)=>Ab.with(Rv(t))};function Fv(e,t){return e.get(t.type,!1,t)}function Uv(e,t){return Fv(e,e.isLookupType(t)?e.lookup.getTypeDef(t):Ay(t))}function Gv(e,t){const r=e.toU8a(),n=e.toRawType();k(Ct(r,t)||["Bytes","Text","Type"].includes(n)&&t.length===e.length||e.isEmpty&&t.every((e=>!e)),(()=>`${n}:: Decoded input doesn't match input, received ${Lt(t,512)} (${t.length} bytes), created ${Lt(r,512)} (${r.length} bytes)`))}function Zv(e,t,r=[],{blockHash:n,isOptional:i,isPedantic:o}={}){const s=new(i?Zp.with(t):t)(e,...r);return function(e,[t],r=!1){r&&(Ht(t)?Gv(e,t):Y(t)&&Gv(e,Et(t)))}(s,r,o),n&&(s.createdAtHash=function(e,t,...r){return Yv(e,t,r)}(e,"Hash",n)),s}function Yv(e,t,r=[],n={}){let i=null,o=null;try{return i=Uv(e,t),Zv(e,i,r,n)}catch(e){o=new Error(`createType(${t}):: ${e.message}`)}if(i&&i.__fallbackType)try{return i=Uv(e,i.__fallbackType),Zv(e,i,r,n)}catch{}throw o}const Jv=Tr("registry");function Kv(e){return e.toString()}function Qv(e,t){const r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=e.getTypeDef(t[n].type).type;return r}function _v(e){const t=Object.keys(e);for(let r=0;r<t.length;r++)delete e[t[r]]}function $v({index:e}){return e.toString()}var ew=Sf("classes"),tw=Sf("definitions"),rw=Sf("lookup"),nw=Sf("metadata"),iw=Sf("metadataVersion"),ow=Sf("metadataCalls"),sw=Sf("metadataErrors"),aw=Sf("metadataEvents"),cw=Sf("unknownTypes"),uw=Sf("chainProperties"),dw=Sf("hasher"),fw=Sf("knownDefaults"),lw=Sf("knownDefinitions"),hw=Sf("knownTypes"),pw=Sf("signedExtensions"),mw=Sf("userExtensions");class yw{constructor(e){Object.defineProperty(this,ew,{writable:!0,value:new Map}),Object.defineProperty(this,tw,{writable:!0,value:new Map}),Object.defineProperty(this,rw,{writable:!0,value:void 0}),Object.defineProperty(this,nw,{writable:!0,value:void 0}),Object.defineProperty(this,iw,{writable:!0,value:0}),Object.defineProperty(this,ow,{writable:!0,value:{}}),Object.defineProperty(this,sw,{writable:!0,value:{}}),Object.defineProperty(this,aw,{writable:!0,value:{}}),Object.defineProperty(this,cw,{writable:!0,value:new Map}),Object.defineProperty(this,uw,{writable:!0,value:void 0}),Object.defineProperty(this,dw,{writable:!0,value:ch}),Object.defineProperty(this,fw,{writable:!0,value:void 0}),Object.defineProperty(this,lw,{writable:!0,value:void 0}),Object.defineProperty(this,hw,{writable:!0,value:{}}),Object.defineProperty(this,pw,{writable:!0,value:Kh}),Object.defineProperty(this,mw,{writable:!0,value:void 0}),this.createdAtHash=void 0,kf(this,fw)[fw]=U({Json:Uh,Metadata:og,PortableRegistry:gv,Raw:Gh},fp),kf(this,lw)[lw]=xu,this.init(),e&&(this.createdAtHash=this.createType("Hash",e))}init(){kf(this,ew)[ew]=new Map,kf(this,tw)[tw]=new Map,kf(this,cw)[cw]=new Map,kf(this,hw)[hw]={},this.register(kf(this,fw)[fw]);const e=Object.values(kf(this,lw)[lw]);for(let t=0;t<e.length;t++)this.register(e[t].types);return this}get chainDecimals(){var e;if(null!==(e=kf(this,uw)[uw])&&void 0!==e&&e.tokenDecimals.isSome){const e=kf(this,uw)[uw].tokenDecimals.unwrap();if(e.length)return e.map((e=>e.toNumber()))}return[12]}get chainSS58(){var e;return null!==(e=kf(this,uw)[uw])&&void 0!==e&&e.ss58Format.isSome?kf(this,uw)[uw].ss58Format.unwrap().toNumber():void 0}get chainTokens(){var e;if(null!==(e=kf(this,uw)[uw])&&void 0!==e&&e.tokenSymbol.isSome){const e=kf(this,uw)[uw].tokenSymbol.unwrap();if(e.length)return e.map(Kv)}return[sr.getDefaults().unit]}isLookupType(e){return/Lookup\d+$/.test(e)}createLookupType(e){return`Lookup${e.toString()}`}get knownTypes(){return kf(this,hw)[hw]}get lookup(){return kf(this,rw)[rw]||this.metadata.lookup}get metadata(){return k(kf(this,nw)[nw],"Metadata has not been set on this registry"),kf(this,nw)[nw]}get unknownTypes(){return[...kf(this,cw)[cw].keys()]}get signedExtensions(){return kf(this,pw)[pw]}createClass(e){return Uv(this,e)}createType(e,...t){return this.createTypeUnsafe(e,t)}createTypeUnsafe(e,t,r){return Yv(this,e,t,r)}findMetaCall(e){const[t,r]=[e[0],e[1]];return T(kf(this,ow)[ow][`${t}`]&&kf(this,ow)[ow][`${t}`][`${r}`],(()=>`findMetaCall: Unable to find Call with index [${t}, ${r}]/[${e.toString()}]`))}findMetaError(e){const[t,r]=Ht(e)?[e[0],e[1]]:[e.index.toNumber(),e.error.toNumber()];return T(kf(this,sw)[sw][`${t}`]&&kf(this,sw)[sw][`${t}`][`${r}`],(()=>`findMetaError: Unable to find Error with index [${t}, ${r}]/[${e.toString()}]`))}findMetaEvent(e){const[t,r]=[e[0],e[1]];return T(kf(this,aw)[aw][`${t}`]&&kf(this,aw)[aw][`${t}`][`${r}`],(()=>`findMetaEvent: Unable to find Event with index [${t}, ${r}]/[${e.toString()}]`))}get(e,t,r){let n=kf(this,ew)[ew].get(e);if(!n){const i=kf(this,tw)[tw].get(e);let o;i?o=Uv(this,i):r?o=function(e,t){try{const r=Wv[t.info](e,t);return k(r,"No class created"),!r.__fallbackType&&t.fallbackType&&(r.__fallbackType=t.fallbackType),r}catch(e){throw new Error(`Unable to construct class from ${Mr(t)}: ${e.message}`)}}(this,r):t&&(Jv.warn(`Unable to resolve type ${e}, it will fail on construction`),kf(this,cw)[cw].set(e,!0),o=Ah.with(e)),o&&(n=class extends o{},kf(this,ew)[ew].set(e,n))}return n}getChainProperties(){return kf(this,uw)[uw]}getClassName(e){const t=[];for(const[r,n]of kf(this,ew)[ew].entries())e===n&&t.push(r);return t.sort().reverse(),t.length?t[0]:void 0}getDefinition(e){return kf(this,tw)[tw].get(e)}getModuleInstances(e,t){var r,n,i,o,s;return null===(r=kf(this,hw)[hw])||void 0===r||null===(n=r.typesBundle)||void 0===n||null===(i=n.spec)||void 0===i||null===(o=i[e])||void 0===o||null===(s=o.instances)||void 0===s?void 0:s[t]}getOrThrow(e,t){const r=this.get(e);return k(r,t||`type ${e} not found`),r}getOrUnknown(e){return this.get(e,!0)}getSignedExtensionExtra(){return Qh(kf(this,pw)[pw],"payload",kf(this,mw)[mw])}getSignedExtensionTypes(){return Qh(kf(this,pw)[pw],"extrinsic",kf(this,mw)[mw])}hasClass(e){return kf(this,ew)[ew].has(e)}hasDef(e){return kf(this,tw)[tw].has(e)}hasType(e){return!kf(this,cw)[cw].get(e)&&(this.hasClass(e)||this.hasDef(e))}hash(e){return this.createType("CodecHash",kf(this,dw)[dw](e))}register(e,t){v(e)?kf(this,ew)[ew].set(e.name,e):w(e)?(k(v(t),(()=>`Expected class definition passed to '${e}' registration`)),k(e!==t.toString(),(()=>`Unable to register circular ${e} === ${e}`)),kf(this,ew)[ew].set(e,t)):this._registerObject(e)}_registerObject(e){const t=Object.entries(e);for(let e=0;e<t.length;e++){const[r,n]=t[e];if(v(n))kf(this,ew)[ew].set(r,n);else{const e=w(n)?n:Mr(n);k(r!==e,(()=>`Unable to register circular ${r} === ${e}`)),kf(this,ew)[ew].has(r)&&kf(this,ew)[ew].delete(r),kf(this,tw)[tw].set(r,e)}}}setChainProperties(e){e&&(kf(this,uw)[uw]=e)}setHasher(e){kf(this,dw)[dw]=e||ch}setKnownTypes(e){kf(this,hw)[hw]=e}setLookup(e){kf(this,rw)[rw]=e}setMetadata(e,t,r){kf(this,nw)[nw]=e.asLatest,kf(this,iw)[iw]=e.version,function(e,{lookup:t,pallets:r},n,i){const o=r.filter(mg);_v(i);for(let r=0;r<o.length;r++){const{calls:s,index:a,name:c}=o[r],u=n>=12?a.toNumber():r;pr(i,u,(()=>dg(t,s.unwrap(),$v,(r=>yg(e,t,r,Xr(c),u)))))}}(this,kf(this,nw)[nw],kf(this,iw)[iw],kf(this,ow)[ow]),function(e,{lookup:t,pallets:r},n,i){_v(i);for(let e=0;e<r.length;e++){const{errors:o,index:s,name:a}=r[e];if(o.isSome){const r=Xr(a);pr(i,n>=12?s.toNumber():e,(()=>dg(t,o.unwrap(),$v,(({docs:e,fields:n,index:i,name:o})=>({args:Qv(t,n),docs:e.map(Kv),fields:n,index:i.toNumber(),method:o.toString(),name:o.toString(),section:r})))))}}}(0,kf(this,nw)[nw],kf(this,iw)[iw],kf(this,sw)[sw]),function(e,{lookup:t,pallets:r},n,i){const o=r.filter(hg);_v(i);for(let r=0;r<o.length;r++){const{events:s,index:a,name:c}=o[r];pr(i,n>=12?a.toNumber():r,(()=>dg(t,s.unwrap(),$v,(r=>{const n=e.createType("EventMetadataLatest",U({},r,{args:Qv(t,r.fields)}));return class extends up{constructor(e,t){super(e,t,n,Xr(c),r.name.toString())}}}))))}}(this,kf(this,nw)[nw],kf(this,iw)[iw],kf(this,aw)[aw]),this.setSignedExtensions(t||(kf(this,nw)[nw].extrinsic.version.gt(V)?kf(this,nw)[nw].extrinsic.signedExtensions.map((({identifier:e})=>e.toString())):Kh),r),this.setChainProperties(function(e,t){var r;const n=e.getChainProperties(),i=null===(r=ug(e,t.asLatest,t.version).system)||void 0===r?void 0:r.ss58Prefix;if(!i)return n;const{tokenDecimals:o,tokenSymbol:s}=n||{};return e.createType("ChainProperties",{ss58Format:i,tokenDecimals:o,tokenSymbol:s})}(this,e))}setSignedExtensions(e=Kh,t){kf(this,pw)[pw]=e,kf(this,mw)[mw]=t;const r=function(e,t={}){const r=[...Object.keys(Jh),...Object.keys(t)];return e.filter((e=>!r.includes(e)))}(kf(this,pw)[pw],kf(this,mw)[mw]);r.length&&Jv.warn(`Unknown signed extensions ${r.join(", ")} found, treating them as no-effect`)}}const bw=["Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten"];function gw(e){const t=e.map((e=>!!e));return{filtered:e.filter(((e,r)=>t[r])),included:t,original:e}}function vw(e,t){let r=-1;return t.included.map((t=>t?e[++r]:null))}function ww(e,t){var r,n,i,o,s,a;const c=e.registry.createType("AccountId"),u=gw([null===(r=e.consts.auctions)||void 0===r?void 0:r.leasePeriodsPerSlot,null===(n=e.consts.auctions)||void 0===n?void 0:n.slotRangeCount]),d=gw([null===(i=e.query.staking)||void 0===i?void 0:i.storageVersion]),f=gw([null===(o=e.query.session)||void 0===o?void 0:o.queuedKeys.key(),null===(s=e.query.system)||void 0===s||null===(a=s.account)||void 0===a?void 0:a.key(c)]);return Uc([u.filtered.length?Jc(t?[]:u.filtered):Jc([]),d.filtered.length?t?Uc(d.filtered.map((e=>e.at(t)))):e.queryMulti(d.filtered):Jc([]),f.filtered.length?Uc(t?f.filtered.map((r=>e.rpc.state.getStorage.raw(r,t))):f.filtered.map((t=>e.rpc.state.getStorage.raw(t)))):Jc([])]).pipe(Rc((([t,r,n])=>function({accountIdLength:e,refcount1Length:t,refcount2Length:r,refcount3Length:n},[i,o],[s],[a,c]){const u={};if(c){const e=c.length;e===t?u.AccountInfo="AccountInfoWithRefCount":e===r?u.AccountInfo="AccountInfoWithDualRefCount":e===n&&(u.AccountInfo="AccountInfoWithTripleRefCount")}if(s&&(s.index>=4?u.ValidatorPrefs="ValidatorPrefsWithBlocked":u.ValidatorPrefs="ValidatorPrefsWithCommission"),a)try{const[t,r]=Kt(a),n=(a.length-t)/r.toNumber(),i=n/e,o=Math.floor(i);k(i>=2&&i<=11,(()=>`Detected ${i} in Keys, should be >= 2 and <= 11`)),o!==i?(o-1)*e+33===n?u.Keys=`SessionKeys${o-1}B`:k(!1,(()=>`Expected integer number of keys, found ${i.toFixed(2)}`)):u.Keys="SessionKeys"+(i-1)}catch{}if(i&&o){const e=[];for(let t=0;i.gtn(t);t++)for(let r=t;i.gtn(r);r++)e.push(`${bw[t]}${bw[r]}`);u.SlotRange={_enum:e},u.WinningData=`[WinningDataEntry; ${o.toNumber()}]`}return u}({accountIdLength:c.encodedLength,refcount1Length:e.registry.createType("AccountInfoWithRefCount").encodedLength,refcount2Length:e.registry.createType("AccountInfoWithDualRefCount").encodedLength,refcount3Length:e.registry.createType("AccountInfoWithTripleRefCount").encodedLength},vw(t,u),vw(r,d),vw(n.map((t=>e.registry.createType("Raw",t))),f)))),$c(1),Kc((()=>Jc({}))))}var xw="node_modules/@polkadot/api-derive";function Pw(e,t,r,n){pr(e,t,(()=>mr({},r(t),(e=>n(t,e)))))}N(Qo,xw,[rs,_o,es]);var kw={},Tw={};r(Tw,"accountId",(function(){return Zw}));var Sw="node_modules/@polkadot/rpc-core";function Mw(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}N(_o,Sw,[$o,es]);var Aw=0;function Nw(e){return"__private_"+Aw+++"_"+e}function Ow(e=1750){return t=>{let[r,n,i,o]=[0,0,Pa.EMPTY,Pa.EMPTY];return new Fa((s=>(t.subscribe(s),0==n++&&(1===r?o.unsubscribe():i=t.connect(),r=3),()=>{0==--n&&(2===r?(r=0,o.unsubscribe()):(r=1,o=dc.schedule((()=>{r=0,i.unsubscribe()}),e)))})))}}const Hw=Tr("drr"),Iw=(e,t)=>Mr({t:e})===Mr({t:t}),Vw=e=>{throw Hw.error(e.message),e},Ew=()=>{},zw=({delay:e,skipChange:t=!1,skipTimeout:r=!1}={})=>n=>{return n.pipe(Kc(Vw),t?yu(Ew):(void 0===o&&(o=qa),i=null!=(i=Iw)?i:Qc,Ic((function(e,t){var r,n=!0;e.subscribe(new Vc(t,(function(e){var s=o(e);!n&&i(r,s)||(n=!1,r=s,t.next(e))})))}))),fu(1),r?au():Ow(e));var i,o};function Cw(e,t){const r=Nr(((...e)=>new Fa((n=>{const i=t(...e).subscribe(n);return()=>{r.unmemoize(...e),i.unsubscribe()}})).pipe(zw())),{getInstanceId:()=>e});return r}const jw=Tr("rpc-core"),Lw={fallback:void 0,modifier:{isOptional:!0},type:{asMap:{linked:{isTrue:!1}},isMap:!1}};function Rw(e,{params:t,type:r},n){const i=t.map((({isOptional:e,name:t,type:r})=>`${t}${e?"?":""}: ${r}`)).join(", ");jw.error(`${e}(${i}): ${r}:: ${n.message}`)}function Bw(e){return["0x3a636f6465"].includes(e.toHex())}var Dw=Nw("instanceId"),Xw=Nw("registryDefault"),qw=Nw("getBlockRegistry"),Ww=Nw("storageCache");class Fw{constructor(e,t,r,n={}){Object.defineProperty(this,Dw,{writable:!0,value:void 0}),Object.defineProperty(this,Xw,{writable:!0,value:void 0}),Object.defineProperty(this,qw,{writable:!0,value:void 0}),Object.defineProperty(this,Ww,{writable:!0,value:new Map}),this.mapping=new Map,this.provider=void 0,this.sections=[],k(r&&v(r.send),"Expected Provider to API create"),Mw(this,Dw)[Dw]=e,Mw(this,Xw)[Xw]=t,this.provider=r;const i=Object.keys(Pf);this.sections.push(...i),this.addUserInterfaces(n)}get isConnected(){return this.provider.isConnected}connect(){return this.provider.connect()}disconnect(){return this.provider.disconnect()}setRegistrySwap(e){Mw(this,qw)[qw]=Nr(e,{getInstanceId:()=>Mw(this,Dw)[Dw]})}addUserInterfaces(e){this.sections.push(...Object.keys(e).filter((e=>!this.sections.includes(e))));for(let t=0;t<this.sections.length;t++){const r=this.sections[t],n=U({},Pf[r],e[r]),i=Object.keys(n);for(let e=0;e<i.length;e++){const t=i[e],o=n[t],s=o.endpoint||`${r}_${t}`;if(!this.mapping.has(s)){const e=!!o.pubsub;this[r]||(this[r]={}),this.mapping.set(s,U({},o,{isSubscription:e,jsonrpc:s,method:t,section:r})),pr(this[r],t,(()=>e?this._createMethodSubscribe(r,t,o):this._createMethodSend(r,t,o)))}}}}_memomize(e,t){const r={getInstanceId:()=>Mw(this,Dw)[Dw]},n=Nr(e(!0),r);return n.raw=Nr(e(!1),r),n.meta=t,n}_formatResult(e,t,r,n,i,o,s){return e?this._formatOutput(t,r,n,i,o,s):s}_createMethodSend(e,t,r){const n=r.endpoint||`${e}_${t}`,i=r.params.findIndex((({isHistoric:e})=>e));let o=null;const s=async(e,o)=>{const s=-1===i?null:o[i],{registry:a}=e&&s&&Mw(this,qw)[qw]?await Mw(this,qw)[qw](Et(s)):{registry:Mw(this,Xw)[Xw]},c=this._formatInputs(a,null,r,o),u=await this.provider.send(n,c.map((e=>e.toJSON())),!!s);return this._formatResult(e,a,s,t,r,c,u)};return o=this._memomize((e=>(...n)=>{const a=e&&-1!==i&&!!n[i];return new Fa((i=>(s(e,n).then((e=>{i.next(e),i.complete()})).catch((e=>{Rw(t,r,e),i.error(e),i.complete()})),()=>{var e;null===(e=o)||void 0===e||e.unmemoize(...n)}))).pipe(fu(1),a?Ow():au())}),r),o}_createSubscriber({paramsJson:e,subName:t,subType:r,update:n},i){return new Promise(((o,s)=>{this.provider.subscribe(r,t,e,n).then(o).catch((e=>{i(e),s(e)}))}))}_createMethodSubscribe(e,t,r){const[n,i,o]=r.pubsub,s=`${e}_${i}`,a=`${e}_${o}`,c=`${e}_${n}`;let u=null;return u=this._memomize((e=>(...n)=>new Fa((i=>{let o=Promise.resolve(null);const d=Mw(this,Xw)[Xw],f=e=>{Rw(t,r,e),i.error(e)};try{const a=this._formatInputs(d,null,r,n),u=a.map((e=>e.toJSON())),l=(n,o)=>{if(n)Rw(t,r,n);else try{i.next(this._formatResult(e,d,null,t,r,a,o))}catch(e){i.error(e)}};o=this._createSubscriber({paramsJson:u,subName:s,subType:c,update:l},f)}catch(e){f(e)}return()=>{var e;null===(e=u)||void 0===e||e.unmemoize(...n),o.then((e=>x(e)?Promise.resolve(!1):this.provider.unsubscribe(c,a,e))).catch((e=>Rw(t,r,e)))}})).pipe(zw())),r),u}_formatInputs(e,t,r,n){const i=r.params.filter((({isOptional:e})=>!e)).length,o=i===r.params.length?"":` (${r.params.length-i} optional)`;return k(n.length>=i&&n.length<=r.params.length,(()=>`Expected ${r.params.length} parameters${o}, ${n.length} found instead`)),n.map(((n,i)=>e.createTypeUnsafe(r.params[i].type,[n],{blockHash:t})))}_formatOutput(e,t,r,n,i,o){if("StorageData"===n.type){const r=i[0];return this._formatStorageData(e,t,r,o)}if("StorageChangeSet"===n.type){const t=i[0];return t?this._formatStorageSet(e,o.block,t,o.changes):e.createType("StorageChangeSet",o)}if("Vec<StorageChangeSet>"===n.type){const t=o.map((({block:t,changes:r})=>[e.createType("Hash",t),this._formatStorageSet(e,t,i[0],r)]));return"queryStorageAt"===r?t[0][1]:t}return e.createTypeUnsafe(n.type,[o],{blockHash:t})}_formatStorageData(e,t,r,n){const i=x(n),o=i?null:Bw(r)?n:Et(n);return this._newType(e,t,r,o,i)}_formatStorageSet(e,t,r,n){const i=1!==r.length;return r.reduce(((r,o,s)=>(r.push(this._formatStorageSetEntry(e,t,o,n,i,s)),r)),[])}_formatStorageSetEntry(e,t,r,n,i,o){const s=r.toHex(),a=n.find((([e])=>e===s)),c=P(a)?i&&Mw(this,Ww)[Ww].get(s)||null:a[1],u=x(c),d=u||Bw(r)?c:Et(c);return Mw(this,Ww)[Ww].set(s,c),this._newType(e,t,r,d,u,o)}_newType(e,t,r,n,i,o=-1){const s=r.outputType||"Raw",a=r.meta||Lw,c=-1===o?"":` entry ${o}:`;try{return e.createTypeUnsafe(s,[i?a.fallback?ae(a.fallback.toHex()):void 0:a.modifier.isOptional?e.createTypeUnsafe(s,[n],{blockHash:t,isPedantic:!0}):n],{blockHash:t,isOptional:a.modifier.isOptional,isPedantic:!a.modifier.isOptional})}catch(e){throw new Error(`Unable to decode storage ${r.section||"unknown"}.${r.method||"unknown"}:${c}: ${e.message}`)}}}new Map;const Uw={del:()=>{},forEach:()=>{},get:()=>{},set:(e,t)=>t};let Gw;function Zw(e,t){return Cw(e,(e=>function(e,t){const r=Ht(t)?t:lh((t||"").toString());if(r.length>8)return Jc(e.registry.createType("AccountId",r));const n=e.registry.createType("AccountIndex",r);return e.derive.accounts.indexToId(n.toString()).pipe(Rc((e=>T(e,"Unable to retrieve accountId"))))}(t,e)))}!function(e="",t){Gw=t?function(e,t){return{del:r=>t.del(`${e}${r}`),forEach:t.forEach,get:r=>{const n=`${e}${r}`,i=t.get(n);if(i)return i.x=Date.now(),t.set(n,i),i.v},set:(r,n)=>{t.set(`${e}${r}`,{v:n,x:Date.now()})}}}(`derive:${e}:`,t):Uw,t&&function(e){const t=Date.now(),r=[];e.forEach(((e,{x:n})=>{t-n>6048e5&&r.push(e)})),r.forEach((t=>e.del(t)))}(t)}();var Yw={};function Jw(e,t){return Cw(e,(e=>{var r,n,i,o,s;const a=t.query.phragmenElection?"phragmenElection":t.query.electionsPhragmen?"electionsPhragmen":"elections";return Uc([e&&null!==(r=t.query[a])&&void 0!==r&&r.members?t.query[a].members():Jc(void 0),e&&null!==(n=t.query.council)&&void 0!==n&&n.members?t.query.council.members():Jc([]),e&&null!==(i=t.query.technicalCommittee)&&void 0!==i&&i.members?t.query.technicalCommittee.members():Jc([]),e&&null!==(o=t.query.society)&&void 0!==o&&o.members?t.query.society.members():Jc([]),e&&null!==(s=t.query.sudo)&&void 0!==s&&s.key?t.query.sudo.key():Jc(void 0)]).pipe(Rc((t=>function(e,[t,r,n,i,o]){const s=t=>!!e&&t.toString()===e.toString();return{isCouncil:((null==t?void 0:t.map((([e])=>e)))||r||[]).some(s),isSociety:(i||[]).some(s),isSudo:(null==o?void 0:o.toString())===(null==e?void 0:e.toString()),isTechCommittee:(n||[]).some(s)}}(e,t))))}))}r(Yw,"flags",(function(){return Jw}));var Kw={};function Qw(e,t){return Cw(e,(e=>function(e,t){try{const r=Ht(t)?t:lh((t||"").toString());if(r.length>8){const t=e.registry.createType("AccountId",r);return e.derive.accounts.idToIndex(t).pipe(Rc((e=>[t,e])))}const n=e.registry.createType("AccountIndex",r);return e.derive.accounts.indexToId(n.toString()).pipe(Rc((e=>[e,n])))}catch(e){return Jc([void 0,void 0])}}(t,e)))}r(Kw,"idAndIndex",(function(){return Qw}));var _w={};function $w(e,t){return Cw(e,(e=>t.derive.accounts.indexes().pipe(Rc((t=>(t||{})[e.toString()])))))}r(_w,"idToIndex",(function(){return $w}));var ex={};r(ex,"identity",(function(){return nx})),r(ex,"hasIdentity",(function(){return ix})),r(ex,"hasIdentityMulti",(function(){return ox}));const tx={toHex:()=>{}};function rx(e){return e.isRaw?Xt(e.asRaw.toU8a(!0)):e.isNone?void 0:e.toHex()}function nx(e,t){return Cw(e,(e=>function(e,t){var r;return t&&null!==(r=e.query.identity)&&void 0!==r&&r.identityOf?e.queryMulti([[e.query.identity.identityOf,t],[e.query.identity.superOf,t]]):Jc([void 0,void 0])}(t,e).pipe(mu((([e,r])=>function(e,t,r){if(null!=t&&t.isSome)return Jc([t,void 0]);if(null!=r&&r.isSome){const t=r.unwrap();return Uc([e.query.identity.identityOf(t[0]),Jc(t)])}return Jc([void 0,void 0])}(t,e,r))),Rc((([e,t])=>function(e,t){if(null==e||!e.isSome)return{judgements:[]};const{info:r,judgements:n}=e.unwrap(),i=rx(r.display);return{display:t&&rx(t[1])||i,displayParent:t&&i,email:rx(r.email),image:rx(r.image),judgements:n,legal:rx(r.legal),other:(o=r.additional,o.reduce(((e,[t,r])=>{const n=rx(t),i=rx(r);return n&&i&&(e[n]=i),e}),{})),parent:t&&t[0],pgp:r.pgpFingerprint.unwrapOr(tx).toHex(),riot:rx(r.riot),twitter:rx(r.twitter),web:rx(r.web)};var o}(e,t))))))}function ix(e,t){return Cw(e,(e=>t.derive.accounts.hasIdentityMulti([e]).pipe(Rc((([e])=>e)))))}function ox(e,t){return Cw(e,(e=>{var r;return null!==(r=t.query.identity)&&void 0!==r&&r.identityOf?Uc([t.query.identity.identityOf.multi(e),t.query.identity.superOf.multi(e)]).pipe(Rc((([e,t])=>e.map(((e,r)=>{const n=t[r],i=n&&n.isSome?n.unwrap()[0].toString():void 0;let o;if(e&&e.isSome){const t=rx(e.unwrap().info.display);t&&!Y(t)&&(o=t)}return{display:o,hasIdentity:!(!o&&!i),parentId:i}}))))):Jc(e.map((()=>({hasIdentity:!1}))))}))}var sx={};function ax(e,t){return Cw(e,(e=>t.query.indices?t.query.indices.accounts(e).pipe(Rc((e=>e.unwrapOr([])[0]))):Jc(void 0)))}r(sx,"indexToId",(function(){return ax}));var cx={};r(cx,"indexes",(function(){return dx}));let ux=null;function dx(e,t){return Cw(e,(()=>ux?Jc(ux):(t.query.indices?function(e){return e.query.indices.accounts.entries().pipe(Rc((t=>t.reduce(((t,[r,n])=>(n.isSome&&(t[n.unwrap()[0].toString()]=e.registry.createType("AccountIndex",r.args[0])),t)),{}))))}(t).pipe(pu({})):Jc({})).pipe(Rc((e=>(ux=e,e))))))}var fx={};function lx(e,t){var r;return(t&&null!==(r=e.query.nicks)&&void 0!==r&&r.nameOf?e.query.nicks.nameOf(t):Jc(void 0)).pipe(Rc((t=>null!=t&&t.isSome?Xt(t.unwrap()[0]).substr(0,e.consts.nicks.maxLength.toNumber()):void 0)))}function hx(e,t){return Cw(e,(e=>t.derive.accounts.idAndIndex(e).pipe(mu((([e,r])=>Uc([Jc({accountId:e,accountIndex:r}),t.derive.accounts.identity(e),lx(t,e)]))),Rc((([{accountId:e,accountIndex:t},r,n])=>({accountId:e,accountIndex:t,identity:r,nickname:n}))))))}r(fx,"info",(function(){return hx})),n(kw,Tw),n(kw,Yw),n(kw,Kw),n(kw,_w),n(kw,ex),n(kw,sx),n(kw,cx),n(kw,fx);var px={};r(px,"votingBalance",(function(){return Ex})),r(px,"all",(function(){return wx}));X=s("ctT9w");function mx(t,r,n,i){const{allLocked:o,lockedBalance:s,lockedBreakdown:a,vestingLocked:c}=function(t,r,n){let i=t.registry.createType("Balance"),o=[],s=t.registry.createType("Balance"),a=!1;if(Array.isArray(n)){o=n.filter((({until:e})=>!e||r&&e.gt(r))),a=o.some((({amount:e})=>e&&e.isMax())),s=t.registry.createType("Balance",o.filter((({id:e})=>e.eq("0x76657374696e6720"))).reduce(((e,{amount:t})=>e.iadd(t)),new(e(X))(0)));const c=o.filter((({amount:e})=>e&&!e.isMax()));c.length&&(i=t.registry.createType("Balance",W(...c.map((({amount:e})=>e)))))}return{allLocked:a,lockedBalance:i,lockedBreakdown:o,vestingLocked:s}}(t,r,i);return{...n,availableBalance:t.registry.createType("Balance",o?0:W(new(e(X))(0),n.freeBalance.sub(s))),lockedBalance:s,lockedBreakdown:a,vestingLocked:c}}function yx(t,r,n){const i=n||[],o=!r.vestingLocked.isZero(),s=i.map((({locked:e,perBlock:r,startingBlock:n})=>t.gt(n)?function(...e){return q("min",e)}(e,r.mul(t.sub(n))):V)),a=s.reduce(((e,t)=>e.iadd(t)),new(e(X))(0)),c=i.reduce(((e,{locked:t})=>e.iadd(t)),new(e(X))(0));return{isVesting:o,vestedBalance:a,vestedClaimable:o?r.vestingLocked.sub(c.sub(a)):V,vesting:i.map((({locked:e,perBlock:t,startingBlock:r},n)=>({endBlock:e.div(t).iadd(r),locked:e,perBlock:t,startingBlock:r,vested:s[n]}))).filter((({locked:e})=>!e.isZero())),vestingTotal:c}}function bx(e,t){return e.queryMulti([[e.query.balances.locks,t],[e.query.balances.vesting,t]]).pipe(Rc((([t,r])=>{let n=null;if(r.isSome){const{offset:t,perBlock:i,startingBlock:o}=r.unwrap();n=e.registry.createType("VestingInfo",{locked:t,perBlock:i,startingBlock:o})}return[n?[n]:null,[t]]})))}const gx=e=>!!e;function vx(e,t,r=["balances"]){var n;const i=r.map((t=>{var r,n;return(null===(r=e.derive[t])||void 0===r?void 0:r.customLocks)||(null===(n=e.query[t])||void 0===n?void 0:n.locks)})),o=i.map((e=>!e)),s=i.filter(gx).map((e=>[e,t]));return(null!==(n=e.query.vesting)&&void 0!==n&&n.vesting?e.queryMulti([[e.query.vesting.vesting,t],...s]):s.length?e.queryMulti(s).pipe(Rc((t=>[e.registry.createType("Option<VestingInfo>"),...t]))):Jc([e.registry.createType("Option<VestingInfo>")])).pipe(Rc((([t,...r])=>{let n=-1;const i=t.unwrapOr(null);return[i?Array.isArray(i)?i:[i]:null,o.map((t=>t?e.registry.createType("Vec<BalanceLock>"):r[++n]))]})))}function wx(e,t){const r=t.registry.getModuleInstances(t.runtimeVersion.specName.toString(),"balances");return Cw(e,(e=>t.derive.balances.account(e).pipe(mu((e=>{var n,i;return e.accountId.isEmpty?Jc([e,t.registry.createType("BlockNumber"),[null,[]]]):Uc([Jc(e),t.derive.chain.bestNumber(),v(null===(n=t.query.system)||void 0===n?void 0:n.account)||v(null===(i=t.query.balances)||void 0===i?void 0:i.account)?vx(t,e.accountId,r):bx(t,e.accountId)])})),Rc((e=>function(e,[t,r,[n,i]]){const o=mx(e,r,t,i[0]);return{...o,...yx(r,o,n),accountId:t.accountId,accountNonce:t.accountNonce,additional:i.filter(((e,t)=>0!==t)).map(((n,i)=>mx(e,r,t.additional[i],n)))}}(t,e))))))}var xx={};function Px(e){return e.registry.createType("Balance")}function kx(e,[t,r,n,i]){const o=e.registry.createType("Balance",t.toBn());return{freeBalance:t,frozenFee:n,frozenMisc:i,reservedBalance:r,votingBalance:o}}function Tx(e,t){return e.queryMulti([[e.query.balances.freeBalance,t],[e.query.balances.reservedBalance,t],[e.query.system.accountNonce,t]]).pipe(Rc((([t,r,n])=>[n,[[t,r,Px(e),Px(e)]]])))}function Sx(e,t){const r=t=>[t,[[Px(e),Px(e),Px(e),Px(e)]]];return v(e.query.system.account)?e.query.system.account(t).pipe(Rc((({nonce:e})=>r(e)))):v(e.query.system.accountNonce)?e.query.system.accountNonce(t).pipe(Rc((e=>r(e)))):Jc(r(e.registry.createType("Index")))}function Mx(e,t,r=["balances"]){const n=r.map((t=>{var r,n;return(null===(r=e.derive[t])||void 0===r?void 0:r.customAccount)||(null===(n=e.query[t])||void 0===n?void 0:n.account)})).filter((e=>v(e))).map((e=>[e,t])),i=(e,t)=>[e,t.map((({feeFrozen:e,free:t,miscFrozen:r,reserved:n})=>[t,n,e,r]))];return n.length?v(e.query.system.account)?e.queryMulti([[e.query.system.account,t],...n]).pipe(Rc((([{nonce:e},...t])=>i(e,t)))):e.queryMulti([[e.query.system.accountNonce,t],...n]).pipe(Rc((([e,...t])=>i(e,t)))):Sx(e,t)}function Ax(e,t){return e.query.system.account(t).pipe(Rc((t=>{const r=t.nonce?t.data:t[1],n=t.nonce||t[0];if(!r||r.isEmpty)return[n,[[Px(e),Px(e),Px(e),Px(e)]]];const{feeFrozen:i,free:o,miscFrozen:s,reserved:a}=r;return[n,[[o,a,i,s]]]})))}function Nx(e,t){const r=t.registry.getModuleInstances(t.runtimeVersion.specName.toString(),"balances");return Cw(e,(e=>t.derive.accounts.accountId(e).pipe(mu((e=>{var n,i,o;return e?Uc([Jc(e),r?Mx(t,e,r):v(null===(n=t.query.system)||void 0===n?void 0:n.account)?Ax(t,e):v(null===(i=t.query.balances)||void 0===i?void 0:i.account)?Mx(t,e):v(null===(o=t.query.balances)||void 0===o?void 0:o.freeBalance)?Tx(t,e):Sx(t,e)]):Jc([t.registry.createType("AccountId"),[t.registry.createType("Index"),[[Px(t),Px(t),Px(t),Px(t)]]]])})),Rc((e=>function(e,[t,[r,[n,...i]]]){return{accountId:t,accountNonce:r,additional:i.map((t=>kx(e,t))),...kx(e,n)}}(t,e))))))}r(xx,"account",(function(){return Nx}));var Ox={};function Hx(e,t){return Cw(e,(()=>{var e,r,n,i,o;return Jc([(null===(e=t.consts.balances)||void 0===e?void 0:e.creationFee)||t.registry.createType("Balance"),(null===(r=t.consts.balances)||void 0===r?void 0:r.transferFee)||t.registry.createType("Balance"),(null===(n=t.consts.balances)||void 0===n?void 0:n.existentialDeposit)||t.registry.createType("Balance"),(null===(i=t.consts.transactionPayment)||void 0===i?void 0:i.transactionBaseFee)||t.registry.createType("Balance"),(null===(o=t.consts.transactionPayment)||void 0===o?void 0:o.transactionByteFee)||t.registry.createType("Balance")]).pipe(Rc((([e,t,r,n,i])=>({creationFee:e,existentialDeposit:r,transactionBaseFee:n,transactionByteFee:i,transferFee:t}))))}))}r(Ox,"fees",(function(){return Hx}));var Ix={};function Vx(e,t){return Cw(e,(e=>e&&e.length?Uc(e.map((e=>t.derive.balances.account(e)))):Jc([])))}r(Ix,"votingBalances",(function(){return Vx}));const Ex=wx;n(px,xx),n(px,Ox),n(px,Ix);var zx={},Cx={};function jx(e,t){const r=e.tx.bounties?e.tx.bounties:e.tx.treasury,n=[r.approveBounty,r.closeBounty,r.proposeCurator,r.unassignCurator];return t.filter((e=>n.find((t=>t.is(e.proposal)))))}function Lx([e,t,r,n]){const i=[];return e.forEach(((e,o)=>{e.isSome&&i.push({bounty:e.unwrap(),description:t[o].unwrapOrDefault().toUtf8(),index:r[o],proposals:n.filter((e=>r[o].eq(e.proposal.args[0])))})})),i}function Rx(e,t){const r=t.query.bounties||t.query.treasury;return Cw(e,(()=>Uc([r.bountyCount(),t.query.council?t.query.council.proposalCount():Jc(0)]).pipe(mu((()=>Uc([r.bounties.keys(),t.derive.council?t.derive.council.proposals():Jc([])]))),mu((([e,n])=>{const i=e.map((({args:[e]})=>e));return Uc([r.bounties.multi(i),r.bountyDescriptions.multi(i),Jc(i),Jc(jx(t,n))])})),Rc(Lx))))}r(Cx,"bounties",(function(){return Rx})),n(zx,Cx);var Bx={},Dx={};function Xx(e,t){return Cw(e,(()=>t.derive.chain.subscribeNewHeads().pipe(Rc((e=>e.number.unwrap())))))}r(Dx,"bestNumber",(function(){return Xx}));var qx={};function Wx(e,t){return Cw(e,(()=>t.rpc.chain.subscribeFinalizedHeads().pipe(Rc((e=>e.number.unwrap())))))}r(qx,"bestNumberFinalized",(function(){return Wx}));var Fx={};function Ux(e,t){return Cw(e,(()=>Uc([t.derive.chain.bestNumber(),t.derive.chain.bestNumberFinalized()]).pipe(Rc((([e,r])=>t.registry.createType("BlockNumber",e.sub(r)))))))}r(Fx,"bestNumberLag",(function(){return Ux}));var Gx={};function Zx(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}r(Gx,"getHeader",(function(){return $x}));var Yx=0;function Jx(e){return"__private_"+Yx+++"_"+e}function Kx(e,t=[]){const[r]=e.logs.filter((({type:e})=>"Consensus"===e)),[n]=e.logs.filter((({type:e})=>"PreRuntime"===e)),[i]=e.logs.filter((({type:e})=>"Seal"===e));let o;if(n)try{const[e,r]=n.asPreRuntime;o=e.extractAuthor(r,t)}catch{}if(!o&&r)try{const[e,n]=r.asConsensus;o=e.extractAuthor(n,t)}catch{}if(!o&&i)try{const[e,r]=i.asSeal;o=e.extractAuthor(r,t)}catch{}return o}function Qx(e,t,r){const n=e.createClass("Header");var i=Jx("author"),o=Jx("validators");return new class extends n{constructor(e,t,r){super(e,t),Object.defineProperty(this,i,{writable:!0,value:void 0}),Object.defineProperty(this,o,{writable:!0,value:void 0}),Zx(this,i)[i]=Kx(this.digest,r),Zx(this,o)[o]=r,this.createdAtHash=null==t?void 0:t.createdAtHash}get author(){return Zx(this,i)[i]}get validators(){return Zx(this,o)[o]}}(e,t,r)}function _x(e,t,r,n){const i=e.createClass("SignedBlock");var o=Jx("author"),s=Jx("events"),a=Jx("extrinsics");return new class extends i{constructor(e,t,r,n){var i,c;super(e,t),Object.defineProperty(this,o,{writable:!0,value:void 0}),Object.defineProperty(this,s,{writable:!0,value:void 0}),Object.defineProperty(this,a,{writable:!0,value:void 0}),Zx(this,o)[o]=Kx(this.block.header.digest,n),Zx(this,s)[s]=r||[],Zx(this,a)[a]=(i=this.block.extrinsics,c=Zx(this,s)[s],i.map(((e,t)=>{let r,n;const i=c.filter((({phase:e})=>e.isApplyExtrinsic&&e.asApplyExtrinsic.eq(t))).map((({event:e})=>("system"===e.section&&("ExtrinsicSuccess"===e.method?n=e.data[0]:"ExtrinsicFailed"===e.method&&(r=e.data[0],n=e.data[1])),e)));return{dispatchError:r,dispatchInfo:n,events:i,extrinsic:e}}))),this.createdAtHash=null==t?void 0:t.createdAtHash}get author(){return Zx(this,o)[o]}get events(){return Zx(this,s)[s]}get extrinsics(){return Zx(this,a)[a]}}(e,t,r,n)}function $x(e,t){return Cw(e,(e=>Uc([t.rpc.chain.getHeader(e),t.queryAt(e).pipe(mu((e=>e.session?e.session.validators():Jc([]))))]).pipe(Rc((([e,t])=>Qx(e.registry,e,t))),Kc((()=>Jc())))))}var eP={};function tP(e,t){return Cw(e,(e=>Uc([t.rpc.chain.getBlock(e),t.queryAt(e).pipe(mu((e=>Uc([e.system.events(),e.session?e.session.validators():Jc([])]))))]).pipe(Rc((([e,[r,n]])=>_x(t.registry,e,r,n))),Kc((()=>Jc())))))}r(eP,"getBlock",(function(){return tP}));var rP={};function nP(e,t){return Cw(e,(()=>t.derive.chain.subscribeNewHeads().pipe(mu((e=>{const r=e.createdAtHash||e.hash;return Uc([Jc(e),t.rpc.chain.getBlock(r),t.queryAt(r).pipe(mu((e=>e.system.events())))])})),Rc((([e,t,r])=>_x(t.registry,t,r,e.validators))))))}r(rP,"subscribeNewBlocks",(function(){return nP}));var iP={};function oP(e,t){return Cw(e,(()=>Uc([t.rpc.chain.subscribeNewHeads(),t.query.session?t.query.session.validators():Jc(void 0)]).pipe(Rc((([e,t])=>(e.createdAtHash=e.hash,Qx(e.registry,e,t)))))))}r(iP,"subscribeNewHeads",(function(){return oP})),n(Bx,Dx),n(Bx,qx),n(Bx,Fx),n(Bx,Gx),n(Bx,eP),n(Bx,rP),n(Bx,iP);var sP={},aP={};function cP(e,t){return Cw(e,(()=>function(e){return Jc([e.consts.contracts.callBaseFee||e.registry.createType("Balance"),e.consts.contracts.contractFee||e.registry.createType("Balance"),e.consts.contracts.creationFee||e.registry.createType("Balance"),e.consts.contracts.transactionBaseFee||e.registry.createType("Balance"),e.consts.contracts.transactionByteFee||e.registry.createType("Balance"),e.consts.contracts.transferFee||e.registry.createType("Balance"),e.consts.contracts.rentByteFee,e.consts.contracts.rentDepositOffset,e.consts.contracts.surchargeReward,e.consts.contracts.tombstoneDeposit])}(t).pipe(Rc((([e,t,r,n,i,o,s,a,c,u])=>({callBaseFee:e,contractFee:t,creationFee:r,rentByteFee:s,rentDepositOffset:a,surchargeReward:c,tombstoneDeposit:u,transactionBaseFee:n,transactionByteFee:i,transferFee:o}))))))}r(aP,"fees",(function(){return cP})),n(sP,aP);var uP={},dP={};function fP(e,t){const r=e.registry.getModuleInstances(e.runtimeVersion.specName.toString(),t);return r&&r.length?r[0]:t}function lP(e,t,r){const n=fP(t,r);return Cw(e,(()=>{var e;return v(null===(e=t.query[n])||void 0===e?void 0:e.members)?t.query[n].members():Jc([])}))}function hP(e,t,r){const n=fP(t,r);return Cw(e,(()=>{var e;return v(null===(e=t.query[n])||void 0===e?void 0:e.prime)?t.query[n].prime().pipe(Rc((e=>e.unwrapOr(null)))):Jc(null)}))}function pP(e,t,r){return Cw(e,(e=>{var n;return(v(null===(n=t.query[r])||void 0===n?void 0:n.proposals)&&e.length?Uc([Jc(e),Uc(e.map((e=>t.query[r].proposalOf(e).pipe(Kc((()=>Jc(null))))))),t.query[r].voting.multi(e)]):Jc([[],[],[]])).pipe(Rc((e=>function(e,[t,r,n]){return r.map(((r,i)=>r&&r.isSome?{hash:e.registry.createType("Hash",t[i]),proposal:r.unwrap(),votes:n[i].unwrapOr(null)}:null)).filter((e=>!!e))}(t,e))))}))}function mP(e,t,r){const n=fP(t,r);return Cw(e,(()=>{var e;return Jc(v(null===(e=t.query[n])||void 0===e?void 0:e.proposals))}))}function yP(e,t,r){const n=fP(t,r);return Cw(e,(()=>v(t.query[n].proposalCount)?t.query[n].proposalCount():Jc(null)))}function bP(e,t,r){const n=fP(t,r);return Cw(e,(()=>{var e;return v(null===(e=t.query[n])||void 0===e?void 0:e.proposals)?t.query[n].proposals():Jc([])}))}function gP(e,t,r){const n=pP(e,t,fP(t,r)),i=bP(e,t,r);return Cw(e,(()=>i().pipe(mu(n))))}function vP(e,t,r){const n=fP(t,r),i=pP(e,t,n);return Cw(e,(e=>{var r;return v(null===(r=t.query[n])||void 0===r?void 0:r.proposals)?i([e]).pipe(Rc((([e])=>e))):Jc(null)}))}function wP(e,t){return Cw(e,lP(e,t,"council"))}r(dP,"members",(function(){return wP}));var xP={};function PP(e,t){return Cw(e,hP(e,t,"council"))}r(xP,"prime",(function(){return PP}));var kP={};function TP(e,t){return Cw(e,mP(e,t,"council"))}function SP(e,t){return Cw(e,vP(e,t,"council"))}function MP(e,t){return Cw(e,yP(e,t,"council"))}function AP(e,t){return Cw(e,bP(e,t,"council"))}function NP(e,t){return Cw(e,gP(e,t,"council"))}r(kP,"proposalCount",(function(){return MP})),r(kP,"proposal",(function(){return SP})),r(kP,"proposalHashes",(function(){return AP})),r(kP,"hasProposals",(function(){return TP})),r(kP,"proposals",(function(){return NP}));var OP={};function HP(e){return!Array.isArray(e)}function IP(e){return e.stakeOf.entries().pipe(Rc((e=>e.map((([{args:[e]},t])=>[e,t])))))}function VP(e){return e.votesOf.entries().pipe(Rc((e=>e.map((([{args:[e]},t])=>[e,t])))))}function EP(e,t){const r=t.query.phragmenElection||t.query.electionsPhragmen||t.query.elections;return Cw(e,(()=>r?r.stakeOf?function(e,t){return Uc([IP(t),VP(t)]).pipe(Rc((([t,r])=>{const n=[];return r.forEach((([t,r])=>{n.push([t,{stake:e.registry.createType("Balance"),votes:r}])})),t.forEach((([e,t])=>{const r=n.find((([t])=>t.eq(e)));r?r[1].stake=t:n.push([e,{stake:t,votes:[]}])})),n})))}(t,r):function(e){return e.voting.entries().pipe(Rc((e=>e.map((([{args:[e]},t])=>[e,HP(t)?{stake:t.stake,votes:t.votes}:{stake:t[0],votes:t[1]}])))))}(r):Jc([])))}r(OP,"votes",(function(){return EP}));var zP={};function CP(e,t){return Cw(e,(e=>t.derive.council.votes().pipe(Rc((r=>(r.find((([t])=>t.eq(e)))||[null,{stake:t.registry.createType("Balance"),votes:[]}])[1])))))}r(zP,"votesOf",(function(){return CP})),n(uP,dP),n(uP,xP),n(uP,kP),n(uP,OP),n(uP,zP);var jP={},LP={};function RP(e,t){return Cw(e,(e=>t.query.crowdloan.funds(e).pipe(Rc((e=>e.isSome?function({trieIndex:e}){return Lt(zt(":child_storage:default:",ch(zt("crowdloan",e.toU8a()))))}(e.unwrap()):null)))))}r(LP,"childKey",(function(){return RP}));var BP={};function DP(e,t){var r;return t.filter((({event:{data:[,t],method:r,section:n}})=>"crowdloan"===n&&["Contributed","Withdrew"].includes(r)&&t.eq(e))).reduce(((e,{event:{data:[t],method:r}})=>("Contributed"===r?e.added.push(t.toHex()):e.removed.push(t.toHex()),e)),{added:[],blockHash:(null===(r=t.createdAtHash)||void 0===r?void 0:r.toHex())||"-",removed:[]})}r(BP,"contributions",(function(){return FP}));const XP=1e3;function qP(e,t){let r=[],n=[];return e.query.system.events().pipe(mu((e=>{const i=DP(t,e);var o;return i.added.length||i.removed.length?(r=r.concat(...i.added),n=n.concat(...i.removed),Jc({added:r,addedDelta:i.added,blockHash:(null===(o=e.createdAtHash)||void 0===o?void 0:o.toHex())||"-",removed:n,removedDelta:i.removed})):Yc})),pu({added:r,addedDelta:[],blockHash:"-",removed:n,removedDelta:[]}))}function WP(e,t,r){return function(e,t){return e.query.system.events().pipe(mu((e=>{var r;return e.filter((({event:{data:[e],method:r,section:n}})=>"crowdloan"===n&&["AllRefunded","Dissolved","PartiallyRefunded"].includes(r)&&e.eq(t))).length?Jc((null===(r=e.createdAtHash)||void 0===r?void 0:r.toHex())||"-"):Yc})),pu("-"))}(e,t).pipe(mu((()=>v(e.rpc.childstate.getKeysPaged)?function(e,t){const r=new Ka(void 0);return r.pipe(mu((r=>e.rpc.childstate.getKeysPaged(t,"0x",XP,r))),yu((e=>{setTimeout((()=>{e.length===XP?r.next(e[999].toHex()):r.complete()}),0)})),vu(),Rc((e=>I(e))))}(e,r):e.rpc.childstate.getKeys(r,"0x"))),Rc((e=>e.map((e=>e.toHex())))))}function FP(e,t){return Cw(e,(e=>t.derive.crowdloan.childKey(e).pipe(mu((r=>r?function(e,t,r){return Uc([WP(e,t,r),qP(e,t)]).pipe(Rc((([e,{added:t,blockHash:r,removed:n}])=>{const i={};return e.forEach((e=>{i[e]=!0})),t.forEach((e=>{i[e]=!0})),n.forEach((e=>{delete i[e]})),{blockHash:r,contributorsHex:Object.keys(i)}})))}(t,e,r):Jc({blockHash:"-",contributorsHex:[]}))))))}var UP={};function GP(e,t,r){return Uc(r.map((r=>e.rpc.childstate.getStorage(t,r)))).pipe(Rc((t=>t.map((t=>e.registry.createType("Option<StorageData>",t))).map((t=>t.isSome?e.registry.createType("Balance",t.unwrap()):e.registry.createType("Balance"))).reduce(((e,t,n)=>({...e,[r[n]]:t})),{}))))}function ZP(e,t,r,n){return e.query.system.events().pipe(mu((i=>{const o=DP(t,i),s=n.filter((e=>o.added.includes(e)||o.removed.includes(e)));return s.length?GP(e,r,s):Yc})),pu({}))}function YP(e,t){return Cw(e,((e,r)=>t.derive.crowdloan.childKey(e).pipe(mu((n=>n&&r.length?function(e,t,r,n){return Uc([GP(e,r,n),ZP(e,t,r,n)]).pipe(Rc((([e,t])=>({...e,...t}))))}(t,e,n,r):Jc({}))))))}r(UP,"ownContributions",(function(){return YP})),n(jP,LP),n(jP,BP),n(jP,UP);var JP={},KP={};r(KP,"dispatchQueue",(function(){return $P}));const QP=Ur("democrac");function _P(e){return function(e){return e.derive.democracy.referendumsFinished().pipe(mu((()=>e.query.scheduler.agenda.keys())),mu((t=>{const r=t.map((({args:[e]})=>e));return r.length?Uc([Jc(r),Uc(r.map((t=>e.query.scheduler.agenda(t).pipe(Kc((()=>Jc(null)))))))]):Jc([[],[]])})))}(e).pipe(mu((([t,r])=>{const n=[];return t.forEach(((t,i)=>{(r[i]||[]).filter((e=>e.isSome)).forEach((r=>{const i=r.unwrap();if(i.maybeId.isSome){const r=i.maybeId.unwrap().toHex();if(r.startsWith(QP)){const[,o]=e.registry.createType("(u64, ReferendumIndex)",r),s=i.call.args[0];n.push({at:t,imageHash:s,index:o})}}}))})),n.length?Uc([Jc(n),e.derive.democracy.preimages(n.map((({imageHash:e})=>e)))]):Jc([[],[]])})),Rc((([e,t])=>e.map(((e,r)=>({...e,image:t[r]}))))))}function $P(e,t){return Cw(e,(()=>{var e;return v(null===(e=t.query.scheduler)||void 0===e?void 0:e.agenda)?_P(t):t.query.democracy.dispatchQueue?function(e){return e.query.democracy.dispatchQueue().pipe(mu((t=>Uc([Jc(t),e.derive.democracy.preimages(t.map((([,e])=>e)))]))),Rc((([e,t])=>e.map((([e,r,n],i)=>({at:e,image:t[i],imageHash:r,index:n}))))))}(t):Jc([])}))}var ek={};r(ek,"locks",(function(){return nk}));const tk=[0,1,2,4,8,16,32];function rk(e,[t,r],n){const{balance:i,vote:o}=r.asStandard,[s,a]=n.isFinished?function(e,t,{approved:r,end:n}){return[n,r.isTrue&&t.isAye||r.isFalse&&t.isNay?n.add((e.consts.democracy.voteLockingPeriod||e.consts.democracy.enactmentPeriod).muln(tk[t.conviction.index])):V]}(e,o,n.asFinished):[V,V];return{balance:i,isDelegated:!1,isFinished:n.isFinished,referendumEnd:s,referendumId:t,unlockAt:a,vote:o}}function nk(e,t){return Cw(e,(e=>t.query.democracy.votingOf?t.query.democracy.votingOf(e).pipe(mu((e=>e.isDirect?function(e,{votes:t}){return t.length?e.query.democracy.referendumInfoOf.multi(t.map((([e])=>e))).pipe(Rc((r=>t.map(((e,t)=>[e,r[t].unwrapOr(null)])).filter((e=>!!e[1]&&P(e[1].end)&&e[0][1].isStandard)).map((([t,r])=>rk(e,t,r)))))):Jc([])}(t,e.asDirect):e.isDelegating?function(e,{balance:t,conviction:r,target:n}){return e.derive.democracy.locks(n).pipe(Rc((n=>n.map((({isFinished:n,referendumEnd:i,referendumId:o,unlockAt:s,vote:a})=>({balance:t,isDelegated:!0,isFinished:n,referendumEnd:i,referendumId:o,unlockAt:s.isZero()?s:i.add((e.consts.democracy.voteLockingPeriod||e.consts.democracy.enactmentPeriod).muln(tk[r.index])),vote:e.registry.createType("Vote",{aye:a.isAye,conviction:r})}))))))}(t,e.asDelegating):Jc([])))):Jc([])))}var ik={};function ok(e,t){return Cw(e,(()=>{var e;return null!==(e=t.query.democracy)&&void 0!==e&&e.nextExternal?t.query.democracy.nextExternal().pipe(mu((e=>function(e,t){if(t.isNone)return Jc(null);const[r,n]=t.unwrap();return e.derive.democracy.preimage(r).pipe(Rc((e=>({image:e,imageHash:r,threshold:n}))))}(t,e)))):Jc(null)}))}r(ik,"nextExternal",(function(){return ok}));var sk={};r(sk,"preimage",(function(){return lk}));X=s("ctT9w");function ak(e,t,r,n){for(;;){const i=e.div(t),o=r.div(n);if(i.lt(o))return!0;if(o.lt(i))return!1;const s=e.mod(t),a=r.mod(n);if(a.isZero())return!1;if(s.isZero())return!0;e=n,r=t,t=a,n=s}}function ck(e,t,r){return e.isSimpleMajority?r.votedAye.gt(r.votedNay):function(e,t,{votedAye:r,votedNay:n,votedTotal:i}){const o=te(i);return!o.isZero()&&(e.isSuperMajorityApprove?ak(n,o,r,t):ak(n,t,r,o))}(e,t,r)}function uk(t,r,n){const i=r.status.tally?function(e,t){const r=[],n=[];return t.forEach((e=>{e.vote.isAye?r.push(e):n.push(e)})),{allAye:r,allNay:n,voteCount:r.length+n.length,voteCountAye:r.length,voteCountNay:n.length,votedAye:e.ayes,votedNay:e.nays,votedTotal:e.turnout}}(r.status.tally,n):n.reduce(((e,t)=>{const{balance:r,vote:n}=t,i=0===n.conviction.index,o=r.muln(i?1:n.conviction.index).divn(i?10:1);return n.isAye?(e.allAye.push(t),e.voteCountAye++,e.votedAye.iadd(o)):(e.allNay.push(t),e.voteCountNay++,e.votedNay.iadd(o)),e.voteCount++,e.votedTotal.iadd(o),e}),{allAye:[],allNay:[],voteCount:0,voteCountAye:0,voteCountNay:0,votedAye:new(e(X))(0),votedNay:new(e(X))(0),votedTotal:new(e(X))(0)});return{...i,isPassing:ck(r.status.threshold,t,i),votes:n}}function dk(e,[t,r,n,i]){let o;try{o=e.registry.createType("Proposal",t.toU8a(!0))}catch(e){console.error(e)}return{at:i,balance:n,proposal:o,proposer:r}}function fk(e,t){if(!t.isNone){if(function(e,t){return!!t&&!e.query.democracy.dispatchQueue}(e,t)){const r=t.unwrap();if(r.isMissing)return;const{data:n,deposit:i,provider:o,since:s}=r.asAvailable;return dk(e,[n,o,i,s])}return dk(e,t.unwrap())}}function lk(e,t){return Cw(e,(e=>t.query.democracy.preimages(e).pipe(Rc((e=>fk(t,e))))))}var hk={};function pk(e,t){return Cw(e,(e=>e.length?t.query.democracy.preimages.multi(e).pipe(Rc((e=>e.map((e=>fk(t,e)))))):Jc([])))}r(hk,"preimages",(function(){return pk}));var mk={};function yk(e){return v(e[1].mul)}function bk([e,t,r]){return e.filter((([,,e],t)=>{var n;return!(null===(n=r[t])||void 0===n||!n.isSome||e.isEmpty)})).map((([e,n,i],o)=>{const s=r[o].unwrap();return{...yk(s)?{balance:s[1],seconds:s[0]}:{balance:s[0],seconds:s[1]},image:t[o],imageHash:n,index:e,proposer:i}}))}function gk(e,t){return Cw(e,(()=>{var e,r;return v(null===(e=t.query.democracy)||void 0===e?void 0:e.publicProps)&&v(null===(r=t.query.democracy)||void 0===r?void 0:r.preimages)?t.query.democracy.publicProps().pipe(mu((e=>e.length?Uc([Jc(e),t.derive.democracy.preimages(e.map((([,e])=>e))),t.query.democracy.depositOf.multi(e.map((([e])=>e)))]):Jc([[],[],[]]))),Rc(bk)):Jc([])}))}r(mk,"proposals",(function(){return gk}));var vk={};function wk(e,t){return Cw(e,(()=>{var e;return null!==(e=t.query.democracy)&&void 0!==e&&e.lowestUnbaked?t.queryMulti([t.query.democracy.lowestUnbaked,t.query.democracy.referendumCount]).pipe(Rc((([e,t])=>t.gt(e)?[...Array(t.sub(e).toNumber())].map(((t,r)=>e.addn(r))):[]))):Jc([])}))}r(vk,"referendumIds",(function(){return wk}));var xk={};function Pk(e,t){return Cw(e,(()=>t.derive.democracy.referendumsActive().pipe(mu((e=>e.length?Uc([Jc(e),t.derive.democracy._referendumsVotes(e)]):Jc([[],[]]))),Rc((([e,t])=>e.map(((e,r)=>({...e,...t[r]}))))))))}r(xk,"referendums",(function(){return Pk}));var kk={};function Tk(e,t){return Cw(e,(()=>t.derive.democracy.referendumIds().pipe(mu((e=>e.length?t.derive.democracy.referendumsInfo(e):Jc([]))))))}r(kk,"referendumsActive",(function(){return Tk}));var Sk={};function Mk(e,t){return Cw(e,(()=>t.derive.democracy.referendumIds().pipe(mu((e=>t.query.democracy.referendumInfoOf.multi(e))),Rc((e=>e.map((e=>e.unwrapOr(null))).filter((e=>!!e&&e.isFinished)).map((e=>e.asFinished)))))))}r(Sk,"referendumsFinished",(function(){return Mk}));var Ak={};function Nk(e,t){return e.query.democracy.votersFor(t).pipe(mu((r=>Uc([Jc(r),r.length?e.query.democracy.voteOf.multi(r.map((e=>[t,e]))):Jc([]),e.derive.balances.votingBalances(r)]))),Rc((([t,r,n])=>t.map(((t,i)=>({accountId:t,balance:n[i].votingBalance||e.registry.createType("Balance"),isDelegating:!1,vote:r[i]||e.registry.createType("Vote")}))))))}function Ok(e,t){return e.query.democracy.votingOf.entries().pipe(Rc((r=>{const n=r.map((([{args:[e]},t])=>[e,t])),i=function(e,t){return e.filter((([,e])=>e.isDirect)).map((([e,r])=>[e,r.asDirect.votes.filter((([e])=>e.eq(t)))])).filter((([,e])=>!!e.length)).reduce(((e,[t,r])=>r.reduce(((e,[,r])=>(r.isStandard&&e.push({accountId:t,isDelegating:!1,...r.asStandard}),e)),e)),[])}(n,t),o=n.filter((([,e])=>e.isDelegating)).map((([e,t])=>[e,t.asDelegating]));return o.forEach((([t,{balance:r,conviction:n,target:s}])=>{const a=o.find((([e])=>e.eq(s))),c=i.find((({accountId:e})=>e.eq(a?a[0]:s)));c&&i.push({accountId:t,balance:r,isDelegating:!0,vote:e.registry.createType("Vote",{aye:c.vote.isAye,conviction:n})})})),i})))}function Hk(e,t){return Cw(e,(e=>Uc([t.derive.democracy.sqrtElectorate(),v(t.query.democracy.votingOf)?Ok(t,e.index):Nk(t,e.index)]).pipe(Rc((([t,r])=>uk(t,e,r))))))}function Ik(e,t){return Cw(e,(e=>e.length?Uc(e.map((e=>t.derive.democracy._referendumVotes(e)))):Jc([])))}function Vk(e,t){return Cw(e,((e,r)=>{const n=function(e){if(e.isNone)return null;const t=e.unwrap();return function(e){return!!e.proposalHash}(t)?t:t.isOngoing?t.asOngoing:null}(r);return n?t.query.democracy.preimages(n.proposalHash).pipe(Rc((r=>({image:fk(t,r),imageHash:n.proposalHash,index:t.registry.createType("ReferendumIndex",e),status:n})))):Jc(null)}))}function Ek(e,t){return Cw(e,(e=>e.length?t.query.democracy.referendumInfoOf.multi(e).pipe(mu((r=>Uc(e.map(((e,n)=>t.derive.democracy._referendumInfo(e,r[n])))))),Rc((e=>e.filter((e=>!!e))))):Jc([])))}r(Ak,"_referendumVotes",(function(){return Hk})),r(Ak,"referendumsInfo",(function(){return Ek})),r(Ak,"_referendumInfo",(function(){return Vk})),r(Ak,"_referendumsVotes",(function(){return Ik}));var zk={};function Ck(e,t){return Cw(e,(()=>t.query.balances.totalIssuance().pipe(Rc((e=>te(e))))))}r(zk,"sqrtElectorate",(function(){return Ck})),n(JP,KP),n(JP,ek),n(JP,ik),n(JP,sk),n(JP,hk),n(JP,mk),n(JP,vk),n(JP,xk),n(JP,kk),n(JP,Sk),n(JP,Ak),n(JP,zk);var jk={},Lk={};function Rk(e){return function(e){return!Array.isArray(e)}(e)?[e.who,e.stake]:e}function Bk(e){return function(e){return Array.isArray(e)}(e)?e[0]:e}function Dk([,e],[,t]){return t.cmp(e)}function Xk(e,t){return Cw(e,(()=>function(e){const t=e.query.phragmenElection?"phragmenElection":e.query.electionsPhragmen?"electionsPhragmen":e.query.elections?"elections":null,[r]=e.registry.getModuleInstances(e.runtimeVersion.specName.toString(),"council")||["council"];return(t?e.queryMulti([e.query[r].members,e.query[t].candidates,e.query[t].members,e.query[t].runnersUp]):Uc([e.query[r].members(),Jc([]),Jc([]),Jc([])])).pipe(Rc((([r,n,i,o])=>({...t?{candidacyBond:e.consts[t].candidacyBond,desiredRunnersUp:e.consts[t].desiredRunnersUp,desiredSeats:e.consts[t].desiredMembers,termDuration:e.consts[t].termDuration,votingBond:e.consts[t].votingBond}:{},candidateCount:e.registry.createType("u32",n.length),candidates:n.map(Bk),members:i.length?i.map(Rk).sort(Dk):r.map((t=>[t,e.registry.createType("Balance")])),runnersUp:o.map(Rk).sort(Dk)}))))}(t)))}r(Lk,"info",(function(){return Xk})),n(jk,Lk);var qk={},Wk={};function Fk([e,t,r,n]){return t.forEach(((t,i)=>{const o=t.toString(),s=n[i],a=!r[i].isEmpty,c=e[o];c&&c.hasMessage===a&&c.blockCount.eq(s)||(e[o]={blockCount:s,hasMessage:a,isOnline:a||s.gt(V)})})),e}function Uk(e,t){return Cw(e,(()=>{var e;return null!==(e=t.query.imOnline)&&void 0!==e&&e.receivedHeartbeats?t.derive.staking.overview().pipe(mu((({currentIndex:e,validators:r})=>Uc([Jc({}),Jc(r),t.query.imOnline.receivedHeartbeats.multi(r.map(((t,r)=>[e,r]))),t.query.imOnline.authoredBlocks.multi(r.map((t=>[e,t])))]))),Rc(Fk)):Jc({})}))}r(Wk,"receivedHeartbeats",(function(){return Uk})),n(qk,Wk);var Gk={},Zk={};function Yk(e,t){return Cw(e,lP(e,t,"membership"))}r(Zk,"members",(function(){return Yk}));var Jk={};function Kk(e,t){return Cw(e,hP(e,t,"membership"))}r(Jk,"prime",(function(){return Kk}));var Qk={};function _k(e,t){return Cw(e,mP(e,t,"membership"))}function $k(e,t){return Cw(e,vP(e,t,"membership"))}function eT(e,t){return Cw(e,yP(e,t,"membership"))}function tT(e,t){return Cw(e,bP(e,t,"membership"))}function rT(e,t){return Cw(e,gP(e,t,"membership"))}r(Qk,"proposalHashes",(function(){return tT})),r(Qk,"proposal",(function(){return $k})),r(Qk,"proposals",(function(){return rT})),r(Qk,"proposalCount",(function(){return eT})),r(Qk,"hasProposals",(function(){return _k})),n(Gk,Zk),n(Gk,Jk),n(Gk,Qk);var nT={},iT={};function oT(e,t){return!!e.isSome&&e.unwrap().some((e=>e.eq(t)))}function sT(e,t){const r=t.find((([t])=>t===e));if(r&&r[1].isSome){const[e,t]=r[1].unwrap();return{collatorId:e,...t.isWithRetries?{isRetriable:!0,retries:t.asWithRetries.toNumber()}:{isRetriable:!1,retries:0}}}return null}function aT(e,t){return t.map((t=>{const r=t.find((([t])=>t===e));return r?r[1]:null}))}function cT(e,t){return Cw(e,(e=>t.query.registrar&&t.query.parachains?t.queryMulti([t.query.registrar.active,t.query.registrar.retryQueue,t.query.registrar.selectedThreads,t.query.parachains.didUpdate,[t.query.registrar.paras,e],[t.query.registrar.pendingSwap,e],[t.query.parachains.heads,e],[t.query.parachains.relayDispatchQueue,e]]).pipe(Rc((r=>function(e,[t,r,n,i,o,s,a,c]){return o.isNone?null:{active:sT(e,t),didUpdate:oT(i,e),heads:a,id:e,info:{id:e,...o.unwrap()},pendingSwapId:s.unwrapOr(null),relayDispatchQueue:c,retryCollators:aT(e,r),selectedCollators:aT(e,n)}}(t.registry.createType("ParaId",e),r)))):Jc(null)))}r(iT,"info",(function(){return cT}));var uT={};function dT([e,t,r,n,i]){return e.map(((e,o)=>({didUpdate:oT(t,e),id:e,info:{id:e,...r[o].unwrapOr(null)},pendingSwapId:n[o].unwrapOr(null),relayDispatchQueueSize:i[o][0].toNumber()})))}function fT(e,t){return Cw(e,(()=>{var e;return null!==(e=t.query.registrar)&&void 0!==e&&e.parachains&&t.query.parachains?t.query.registrar.parachains().pipe(mu((e=>Uc([Jc(e),t.query.parachains.didUpdate(),t.query.registrar.paras.multi(e),t.query.registrar.pendingSwap.multi(e),t.query.parachains.relayDispatchQueueSize.multi(e)]))),Rc(dT)):Jc([])}))}r(uT,"overview",(function(){return fT})),n(nT,iT),n(nT,uT);var lT={},hT={};function pT(e,t){return Cw(e,(()=>t.derive.session.info().pipe(Rc((e=>e.eraLength)))))}r(hT,"eraLength",(function(){return pT}));var mT={};function yT(e,t){return Cw(e,(()=>t.derive.session.progress().pipe(Rc((e=>e.eraProgress)))))}r(mT,"eraProgress",(function(){return yT}));var bT={};function gT([e,t,r,n,i]){return{activeEra:t,activeEraStart:r,currentEra:n,currentIndex:e,validatorCount:i}}function vT(e,t){return Cw(e,(()=>t.query.session?t.query.staking?function(e){return e.queryMulti([e.query.session.currentIndex,e.query.staking.activeEra,e.query.staking.currentEra,e.query.staking.validatorCount]).pipe(Rc((([e,t,r,n])=>{const{index:i,start:o}=t.unwrapOrDefault();return gT([e,i,o,r.unwrapOrDefault(),n])})))}(t):function(e){return e.query.session.currentIndex().pipe(Rc((t=>gT([t,e.registry.createType("EraIndex"),e.registry.createType("Option<Moment>"),e.registry.createType("EraIndex"),e.registry.createType("u32")]))))}(t):function(e){return Jc(gT([e.registry.createType("SessionIndex",1),e.registry.createType("EraIndex"),e.registry.createType("Option<Moment>"),e.registry.createType("EraIndex"),e.registry.createType("u32")]))}(t)))}r(bT,"indexes",(function(){return vT}));var wT={};function xT(e,t){return Cw(e,(()=>t.derive.session.indexes().pipe(Rc((e=>{var r,n,i,o;const s=(null===(r=t.consts)||void 0===r||null===(n=r.babe)||void 0===n?void 0:n.epochDuration)||t.registry.createType("u64",1),a=(null===(i=t.consts)||void 0===i||null===(o=i.staking)||void 0===o?void 0:o.sessionsPerEra)||t.registry.createType("SessionIndex",1);return{...e,eraLength:t.registry.createType("BlockNumber",a.mul(s)),isEpoch:!!t.query.babe,sessionLength:s,sessionsPerEra:a}})))))}r(wT,"info",(function(){return xT}));var PT={};function kT(e,t){return Cw(e,(()=>t.query.babe?function(e){return e.derive.session.info().pipe(mu((t=>{var r;return Uc([Jc(t),null!==(r=e.query.staking)&&void 0!==r&&r.erasStartSessionIndex?e.queryMulti([e.query.babe.currentSlot,e.query.babe.epochIndex,e.query.babe.genesisSlot,[e.query.staking.erasStartSessionIndex,t.activeEra]]):e.queryMulti([e.query.babe.currentSlot,e.query.babe.epochIndex,e.query.babe.genesisSlot])])})),Rc((([t,[r,n,i,o]])=>[t,[r,n,i,o&&o.isSome?o.unwrap():e.registry.createType("SessionIndex",1)]])))}(t).pipe(Rc((([e,r])=>function(e,t,[r,n,i,o]){const s=n.mul(t.sessionLength).iadd(i),a=r.sub(s),c=t.currentIndex.sub(o).imul(t.sessionLength).iadd(a);return{...t,eraProgress:e.registry.createType("BlockNumber",c),sessionProgress:e.registry.createType("BlockNumber",a)}}(t,e,r)))):function(e){return e.derive.session.info().pipe(Rc((t=>({...t,eraProgress:e.registry.createType("BlockNumber"),sessionProgress:e.registry.createType("BlockNumber")}))))}(t)))}r(PT,"progress",(function(){return kT}));var TT={};function ST(e,t){return Cw(e,(()=>t.derive.session.progress().pipe(Rc((e=>e.sessionProgress)))))}r(TT,"sessionProgress",(function(){return ST})),n(lT,hT),n(lT,mT),n(lT,bT),n(lT,wT),n(lT,PT),n(lT,TT);var MT={},AT={};function NT(e,t){return Cw(e,(()=>t.query.society.candidates().pipe(mu((e=>Uc([Jc(e),t.query.society.suspendedCandidates.multi(e.map((({who:e})=>e)))]))),Rc((([e,t])=>e.map((({kind:e,value:r,who:n},i)=>({accountId:n,isSuspended:t[i].isSome,kind:e,value:r}))))))))}r(AT,"candidates",(function(){return NT}));var OT={};function HT(e,t){return Cw(e,(()=>t.queryMulti([t.query.society.bids,t.query.society.defender,t.query.society.founder,t.query.society.head,t.query.society.maxMembers,t.query.society.pot]).pipe(Rc((([e,t,r,n,i,o])=>({bids:e,defender:t.unwrapOr(void 0),founder:r.unwrapOr(void 0),hasDefender:t.isSome&&n.isSome&&!n.eq(t)||!1,head:n.unwrapOr(void 0),maxMembers:i,pot:o}))))))}r(OT,"info",(function(){return HT}));var IT={};function VT(e,t){return Cw(e,(e=>t.derive.society._members([e]).pipe(Rc((([e])=>e)))))}r(IT,"member",(function(){return VT}));var ET={};function zT(e,t){return Cw(e,(e=>Uc([Jc(e),t.query.society.payouts.multi(e),t.query.society.strikes.multi(e),t.query.society.defenderVotes.multi(e),t.query.society.suspendedMembers.multi(e),t.query.society.vouching.multi(e)]).pipe(Rc((([e,t,r,n,i,o])=>e.map(((e,s)=>({accountId:e,isDefenderVoter:n[s].isSome,isSuspended:i[s].isTrue,payouts:t[s],strikes:r[s],vote:n[s].unwrapOr(void 0),vouching:o[s].unwrapOr(void 0)}))))))))}function CT(e,t){return Cw(e,(()=>t.query.society.members().pipe(mu((e=>t.derive.society._members(e))))))}r(ET,"_members",(function(){return zT})),r(ET,"members",(function(){return CT})),n(MT,AT),n(MT,OT),n(MT,IT),n(MT,ET);var jT={},LT={};r(LT,"account",(function(){return qT})),r(LT,"accounts",(function(){return XT}));X=s("ctT9w");const RT={withDestination:!0,withLedger:!0,withNominations:!0,withPrefs:!0};function BT(t,r,n){const i=Object.entries((o=((null==r?void 0:r.unlocking)||[]).filter((({era:e})=>e.unwrap().gt(n.activeEra))),o.reduce(((e,{era:t,value:r})=>{const n=t.toString();return e[n]=(e[n]||V).add(r.unwrap()),e}),{}))).map((([r,i])=>({remainingEras:new(e(X))(r).isub(n.activeEra),value:t.registry.createType("Balance",i)})));var o;return i.length?i:void 0}function DT(t,r,n){return t.registry.createType("Balance",((null==r?void 0:r.unlocking)||[]).reduce(((e,{era:t,value:r})=>n.activeEra.gte(t.unwrap())?e.iadd(r.unwrap()):e),new(e(X))(0)))}function XT(e,t){return Cw(e,(e=>t.derive.session.info().pipe(mu((r=>Uc([t.derive.staking.keysMulti(e),t.derive.staking.queryMulti(e,RT)]).pipe(Rc((([e,n])=>n.map(((n,i)=>function(e,t,r,n){return{...r,...n,redeemable:DT(e,n.stakingLedger,t),unlocking:BT(e,n.stakingLedger,t)}}(t,r,e[i],n)))))))))))}function qT(e,t){return Cw(e,(e=>t.derive.staking.accounts([e]).pipe(Rc((([e])=>e)))))}var WT={};function FT(e,t){return Cw(e,(()=>t.derive.session.indexes().pipe(mu((({activeEra:e})=>t.query.staking.erasRewardPoints(e))))))}r(WT,"currentPoints",(function(){return FT}));var UT={};r(UT,"erasExposure",(function(){return JT})),r(UT,"_eraExposure",(function(){return GT})),r(UT,"eraExposure",(function(){return ZT})),r(UT,"_erasExposure",(function(){return YT}));function GT(e,t){return Cw(e,((e,r)=>{const n=`eraExposure-${e.toString()}`,i=r?void 0:Gw.get(n);return i?Jc(i):t.query.staking.erasStakersClipped.entries(e).pipe(Rc((t=>{const i=function(e,t){const r={},n={};return t.forEach((([e,t])=>{const i=e.args[1].toString();n[i]=t,t.others.forEach((({who:e},t)=>{const n=e.toString();r[n]=r[n]||[],r[n].push({validatorId:i,validatorIndex:t})}))})),{era:e,nominators:r,validators:n}}(e,t);return!r&&Gw.set(n,i),i})))}))}function ZT(e,t){return Cw(e,(e=>t.derive.staking._eraExposure(e,!0)))}function YT(e,t){return Cw(e,((e,r)=>e.length?Uc(e.map((e=>t.derive.staking._eraExposure(e,r)))):Jc([])))}function JT(e,t){return Cw(e,((e=!1)=>t.derive.staking.erasHistoric(e).pipe(mu((r=>t.derive.staking._erasExposure(r,e))))))}var KT={};function QT(e,t){return Cw(e,(e=>t.queryMulti([t.query.staking.activeEra,t.query.staking.historyDepth]).pipe(Rc((([r,n])=>{const i=[],o=n.toNumber(),s=r.unwrapOrDefault().index;let a=s;for(;a.gte(V)&&i.length<o;)a===s&&!0!==e||i.push(t.registry.createType("EraIndex",a)),a=a.sub(E);return i.reverse()})))))}r(KT,"erasHistoric",(function(){return QT}));var _T={};function $T(e,t){return e.filter((e=>!t.some((t=>e.eq(t.era)))))}r(_T,"_erasPoints",(function(){return tS})),r(_T,"erasPoints",(function(){return rS}));function eS({individual:e}){return[...e.entries()].filter((([,e])=>e.gt(V))).reduce(((e,[t,r])=>(e[t.toString()]=r,e)),{})}function tS(e,t){return Cw(e,((e,r)=>{if(!e.length)return Jc([]);const n=r?[]:e.map((e=>Gw.get(`eraPoints-${e.toString()}`))).filter((e=>!!e)),i=$T(e,n);return i.length?t.query.staking.erasRewardPoints.multi(i).pipe(Rc((t=>{const o=function(e,t){return e.map(((e,r)=>({era:e,eraPoints:t[r].total,validators:eS(t[r])})))}(i,t);return!r&&o.forEach((e=>Gw.set(`eraPoints-${e.era.toString()}`,e))),e.map((e=>n.find((t=>e.eq(t.era)))||o.find((t=>e.eq(t.era)))))}))):Jc(n)}))}function rS(e,t){return Cw(e,((e=!1)=>t.derive.staking.erasHistoric(e).pipe(mu((r=>t.derive.staking._erasPoints(r,e))))))}var nS={};r(nS,"_eraPrefs",(function(){return iS})),r(nS,"eraPrefs",(function(){return oS})),r(nS,"erasPrefs",(function(){return aS})),r(nS,"_erasPrefs",(function(){return sS}));function iS(e,t){return Cw(e,((e,r)=>{const n=`eraPrefs-${e.toString()}`,i=r?void 0:Gw.get(n);return i?Jc(i):t.query.staking.erasValidatorPrefs.entries(e).pipe(Rc((t=>{const i=function(e,t){const r={};return t.forEach((([e,t])=>{r[e.args[1].toString()]=t})),{era:e,validators:r}}(e,t);return!r&&Gw.set(n,i),i})))}))}function oS(e,t){return Cw(e,(e=>t.derive.staking._eraPrefs(e,!0)))}function sS(e,t){return Cw(e,((e,r)=>e.length?Uc(e.map((e=>t.derive.staking._eraPrefs(e,r)))):Jc([])))}function aS(e,t){return Cw(e,((e=!1)=>t.derive.staking.erasHistoric(e).pipe(mu((r=>t.derive.staking._erasPrefs(r,e))))))}var cS={};r(cS,"erasRewards",(function(){return dS})),r(cS,"_erasRewards",(function(){return uS}));function uS(e,t){return Cw(e,((e,r)=>{if(!e.length)return Jc([]);const n=r?[]:e.map((e=>Gw.get(`eraRewards-${e.toString()}`))).filter((e=>!!e)),i=$T(e,n);return i.length?t.query.staking.erasValidatorReward.multi(i).pipe(Rc((t=>{const o=function(e,t){return e.map(((e,r)=>({era:e,eraReward:t[r].unwrapOrDefault()})))}(i,t);return!r&&o.forEach((e=>Gw.set(`eraRewards-${e.era.toString()}`,e))),e.map((e=>n.find((t=>e.eq(t.era)))||o.find((t=>e.eq(t.era)))))}))):Jc(n)}))}function dS(e,t){return Cw(e,((e=!1)=>t.derive.staking.erasHistoric(e).pipe(mu((r=>t.derive.staking._erasRewards(r,e))))))}var fS={};r(fS,"_erasSlashes",(function(){return pS})),r(fS,"_eraSlashes",(function(){return lS})),r(fS,"eraSlashes",(function(){return hS})),r(fS,"erasSlashes",(function(){return mS}));function lS(e,t){return Cw(e,((e,r)=>{const n=`eraSlashes-${e.toString()}`,i=r?void 0:Gw.get(n);return i?Jc(i):Uc([t.query.staking.nominatorSlashInEra.entries(e),t.query.staking.validatorSlashInEra.entries(e)]).pipe(Rc((([t,i])=>{const o=function(e,t,r){const n={},i={};return t.forEach((([e,t])=>{n[e.args[1].toString()]=t.unwrap()})),r.forEach((([e,t])=>{i[e.args[1].toString()]=t.unwrapOrDefault()[1]})),{era:e,nominators:n,validators:i}}(e,t,i);return!r&&Gw.set(n,o),o})))}))}function hS(e,t){return Cw(e,(e=>t.derive.staking._eraSlashes(e,!0)))}function pS(e,t){return Cw(e,((e,r)=>e.length?Uc(e.map((e=>t.derive.staking._eraSlashes(e,r)))):Jc([])))}function mS(e,t){return Cw(e,((e=!1)=>t.derive.staking.erasHistoric(e).pipe(mu((r=>t.derive.staking._erasSlashes(r,e))))))}var yS={};r(yS,"electedInfo",(function(){return gS}));const bS={withController:!0,withExposure:!0,withPrefs:!0};function gS(e,t){return Cw(e,((e=bS)=>t.derive.staking.validators().pipe(mu((({nextElected:r,validators:n})=>t.derive.staking.queryMulti(function(e,t){return I([e,t.filter((t=>!e.find((e=>e.eq(t)))))])}(r,n),e).pipe(Rc((e=>({info:e,nextElected:r,validators:n})))))))))}var vS={};function wS(e,t){return Cw(e,(e=>t.derive.staking.keysMulti([e]).pipe(Rc((([e])=>e)))))}function xS(e,t){return Cw(e,(e=>e.length?t.query.session.queuedKeys().pipe(mu((r=>{var n;return Uc([Jc(r),null!==(n=t.consts.session)&&void 0!==n&&n.dedupKeyPrefix?t.query.session.nextKeys.multi(e.map((e=>[t.consts.session.dedupKeyPrefix,e]))):t.query.session.nextKeys.multi(e)])})),Rc((([t,r])=>e.map(((e,n)=>function(e,t,r){const n=(t.find((([t])=>t.eq(e)))||[void 0,[]])[1],i=r.unwrapOr([]);return{nextSessionIds:Array.isArray(i)?i:[...i.values()],sessionIds:Array.isArray(n)?n:[...n.values()]}}(e,t,r[n])))))):Jc([])))}r(vS,"keys",(function(){return wS})),r(vS,"keysMulti",(function(){return xS}));var PS={};function kS(e,t){return Cw(e,(()=>Uc([t.derive.session.indexes(),t.derive.staking.validators()]).pipe(Rc((([e,{nextElected:t,validators:r}])=>({...e,nextElected:t,validators:r}))))))}r(PS,"overview",(function(){return kS}));var TS={};function SS(e,t){return Cw(e,((e,r,n)=>r.length?t.queryMulti([...r.map((r=>[t.query.staking.erasStakersClipped,[r,e]])),...r.map((r=>[t.query.staking.erasStakers,[r,e]]))]).pipe(Rc((e=>r.map(((t,n)=>({clipped:e[n],era:t,exposure:e[r.length+n]})))))):Jc([])))}function MS(e,t){return Cw(e,((e,r)=>t.derive.staking._ownExposures(e,[r],!0).pipe(Rc((([e])=>e)))))}function AS(e,t){return Cw(e,((e,r=!1)=>t.derive.staking.erasHistoric(r).pipe(mu((n=>t.derive.staking._ownExposures(e,n,r))))))}r(TS,"ownExposures",(function(){return AS})),r(TS,"_ownExposures",(function(){return SS})),r(TS,"ownExposure",(function(){return MS}));var NS={};function OS(e,t){return Cw(e,((e,r,n)=>r.length?t.queryMulti([...r.map((r=>[t.query.staking.validatorSlashInEra,[r,e]])),...r.map((r=>[t.query.staking.nominatorSlashInEra,[r,e]]))]).pipe(Rc((e=>r.map(((t,n)=>({era:t,total:e[n].isSome?e[n].unwrap()[1]:e[n+r.length].unwrapOrDefault()})))))):Jc([])))}function HS(e,t){return Cw(e,((e,r)=>t.derive.staking._ownSlashes(e,[r],!0).pipe(Rc((([e])=>e)))))}function IS(e,t){return Cw(e,((e,r=!1)=>t.derive.staking.erasHistoric(r).pipe(mu((n=>t.derive.staking._ownSlashes(e,n,r))))))}r(NS,"ownSlashes",(function(){return IS})),r(NS,"_ownSlashes",(function(){return OS})),r(NS,"ownSlash",(function(){return HS}));var VS={};function ES(e,t,r,n){return function(e,t,r,{withController:n,withDestination:i,withExposure:o,withLedger:s,withNominations:a,withPrefs:c}){const u=e.registry.createType("Option<Nominations>"),d=e.registry.createType("RewardDestination"),f=e.registry.createType("Exposure"),l=e.registry.createType("ValidatorPrefs");return Uc([n||s?e.query.staking.bonded.multi(t):Jc(t.map((()=>null))),a?e.query.staking.nominators.multi(t):Jc(t.map((()=>u))),i?e.query.staking.payee.multi(t):Jc(t.map((()=>d))),c?e.query.staking.validators.multi(t):Jc(t.map((()=>l))),o?e.query.staking.erasStakers.multi(t.map((e=>[r,e]))):Jc(t.map((()=>f)))])}(e,r,t,n).pipe(mu((([t,i,o,s,a])=>function(e,t,{withLedger:r=!1}){const n=t.filter((e=>r&&!!e&&e.isSome)).map((e=>e.unwrap())),i=e.registry.createType("Option<StakingLedger>");return(n.length?e.query.staking.ledger.multi(n):Jc([])).pipe(Rc((e=>{let r=-1;return t.map((t=>t&&t.isSome&&e[++r]||i))})))}(e,t,n).pipe(Rc((e=>r.map(((r,n)=>function(e,t,r,n,i,o,s){return{accountId:e,controllerId:t&&t.unwrapOr(null),exposure:o,nominators:r.isSome?r.unwrap().targets:[],rewardDestination:n,stakingLedger:s.unwrapOrDefault(),stashId:e,validatorPrefs:i}}(r,t[n],i[n],o[n],s[n],a[n],e[n])))))))))}function zS(e,t){return Cw(e,((e,r)=>t.derive.staking.queryMulti([e],r).pipe(Rc((([e])=>e)))))}function CS(e,t){return Cw(e,((e,r)=>e.length?t.derive.session.indexes().pipe(mu((({activeEra:n})=>{const i=e.map((e=>t.registry.createType("AccountId",e)));return ES(t,n,i,r)}))):Jc([])))}r(VS,"queryMulti",(function(){return CS})),r(VS,"query",(function(){return zS}));var jS={};function LS(e,t){return Cw(e,((e,r,n)=>{const i=e.map((e=>t.registry.createType("AccountId",e).toString()));return t.derive.staking._erasExposure(r,n).pipe(Rc((e=>i.map((t=>e.map((({era:e,nominators:r,validators:n})=>{const i=!!n[t],o={},s=r[t]||[];return i?o[t]=n[t]:s&&s.forEach((({validatorId:e})=>{o[e]=n[e]})),{era:e,isEmpty:!Object.keys(o).length,isValidator:i,nominating:s,validators:o}})))))))}))}function RS(e,t){return Cw(e,((e,r=!1)=>t.derive.staking.erasHistoric(r).pipe(mu((n=>t.derive.staking._stakerExposures(e,n,r))))))}function BS(e,t){return Cw(e,((e,r=!1)=>t.derive.staking.stakerExposures([e],r).pipe(Rc((([e])=>e)))))}r(jS,"stakerExposures",(function(){return RS})),r(jS,"stakerExposure",(function(){return BS})),r(jS,"_stakerExposures",(function(){return LS}));var DS={};function XS(e,t){return Cw(e,((e,r,n)=>{const i=t.registry.createType("AccountId",e).toString();return t.derive.staking._erasPoints(r,n).pipe(Rc((e=>e.map((({era:e,eraPoints:r,validators:n})=>({era:e,eraPoints:r,points:n[i]||t.registry.createType("RewardPoint")}))))))}))}function qS(e,t){return Cw(e,((e,r=!1)=>t.derive.staking.erasHistoric(r).pipe(mu((n=>t.derive.staking._stakerPoints(e,n,r))))))}r(DS,"_stakerPoints",(function(){return XS})),r(DS,"stakerPoints",(function(){return qS}));var WS={};function FS(e,t){return Cw(e,((e,r,n)=>t.query.staking.erasValidatorPrefs.multi(r.map((t=>[t,e]))).pipe(Rc((e=>e.map(((e,t)=>({era:r[t],validatorPrefs:e}))))))))}function US(e,t){return Cw(e,((e,r=!1)=>t.derive.staking.erasHistoric(r).pipe(mu((n=>t.derive.staking._stakerPrefs(e,n,r))))))}r(WS,"_stakerPrefs",(function(){return FS})),r(WS,"stakerPrefs",(function(){return US}));var GS={};function ZS(e,t,{rewards:r,stakingLedger:n}){const i=e.filter((e=>!n.claimedRewards.some((t=>t.eq(e))))),o=t.map((([e])=>e)),s=t.map((([,e])=>e));return r.filter((({isEmpty:e})=>!e)).filter((e=>!!i.some((t=>e.era.eq(t)))&&(function(e,t,r){const n=[];Object.keys(r.validators).forEach((i=>{const o=e.indexOf(i);if(-1!==o){const e=t[o].stakingLedger;null!=e&&e.claimedRewards.some((e=>r.era.eq(e)))&&n.push(i)}})),n.forEach((e=>{delete r.validators[e]}))}(o,s,e),!0))).filter((({validators:e})=>0!==Object.keys(e).length)).map((e=>({...e,nominators:e.nominating.filter((t=>e.validators[t.validatorId]))})))}function YS(e,t){return Cw(e,((e,r)=>Uc([t.derive.staking._erasPoints(e,r),t.derive.staking._erasPrefs(e,r),t.derive.staking._erasRewards(e,r)])))}function JS(e,t){return Cw(e,((e,r,n)=>Uc([t.derive.staking.queryMulti(e,{withLedger:!0}),t.derive.staking._stakerExposures(e,r,n),t.derive.staking._stakerRewardsEras(r,n)]).pipe(mu((([e,i,o])=>{const s=e.map((({stakingLedger:e,stashId:r},n)=>r&&e?function(e,t,[r,n,i],o){return o.map((({era:o,isEmpty:s,isValidator:a,nominating:c,validators:u})=>{const{eraPoints:d,validators:f}=r.find((e=>e.era.eq(o)))||{eraPoints:V,validators:{}},{eraReward:l}=i.find((e=>e.era.eq(o)))||{eraReward:e.registry.createType("Balance")},{validators:h}=n.find((e=>e.era.eq(o)))||{validators:{}},p={},m=t.toString();return Object.entries(u).forEach((([t,r])=>{var n,i;const o=f[t]||V,s=(null===(n=h[t])||void 0===n?void 0:n.commission.unwrap())||V,a=(null===(i=r.total)||void 0===i?void 0:i.unwrap())||V;let c,u=V;if(!(a.isZero()||o.isZero()||d.isZero())){u=l.mul(o).div(d);const e=s.mul(u).div(R);let n;if(t===m)n=r.own.unwrap();else{const e=r.others.find((({who:e})=>e.eq(m)));n=e?e.value.unwrap():V}c=u.sub(e).imul(n).div(a).iadd(t===m?e:V)}p[t]={total:e.registry.createType("Balance",u),value:e.registry.createType("Balance",c)}})),{era:o,eraReward:l,isEmpty:s,isValidator:a,nominating:c,validators:p}}))}(t,r,o,i[n]):[]));if(n)return Jc(s);const[a,c]=s.reduce((([e,t],r)=>{const n=[];return t.push(n),r.forEach((({validators:t})=>Object.keys(t).forEach((t=>{n.includes(t)||(n.push(t),e.includes(t)||e.push(t))})))),[e,t]}),[[],[]]);return t.derive.staking.queryMulti(a,{withLedger:!0}).pipe(Rc((t=>e.map((({stakingLedger:e},n)=>ZS(r,c[n].map((e=>[e,t.find((t=>t.accountId.eq(e)))])),{rewards:s[n],stakingLedger:e}))))))})))))}function KS(e,t){return Cw(e,((e,r=!1)=>t.derive.staking.erasHistoric(r).pipe(mu((n=>t.derive.staking._stakerRewards([e],n,r))),Rc((([e])=>e)))))}function QS(e,t){return Cw(e,((e,r)=>e.length&&r.length?t.derive.staking._stakerRewards(e,r,!1):Jc([])))}function _S(e,t){return Cw(e,((e,r=!1)=>t.derive.staking.erasHistoric(r).pipe(mu((r=>t.derive.staking.stakerRewardsMultiEras(e,r))))))}r(GS,"_stakerRewardsEras",(function(){return YS})),r(GS,"stakerRewardsMulti",(function(){return _S})),r(GS,"stakerRewardsMultiEras",(function(){return QS})),r(GS,"_stakerRewards",(function(){return JS})),r(GS,"stakerRewards",(function(){return KS}));var $S={};function eM(e,t){return Cw(e,((e,r,n)=>{const i=t.registry.createType("AccountId",e).toString();return t.derive.staking._erasSlashes(r,n).pipe(Rc((e=>e.map((({era:e,nominators:r,validators:n})=>({era:e,total:r[i]||n[i]||t.registry.createType("Balance")}))))))}))}function tM(e,t){return Cw(e,((e,r=!1)=>t.derive.staking.erasHistoric(r).pipe(mu((n=>t.derive.staking._stakerSlashes(e,n,r))))))}r($S,"_stakerSlashes",(function(){return eM})),r($S,"stakerSlashes",(function(){return tM}));var rM={};function nM(e,t){return Cw(e,(()=>function(e){let t=Date.now();return e.query.system.events().pipe(Rc((e=>(t=e.filter((({event:e,phase:t})=>{try{return t.isApplyExtrinsic&&"staking"===e.section&&"Bonded"===e.method}catch{return!1}}))?Date.now():t,t))),pu(t),zw({skipTimeout:!0}))}(t).pipe(mu((()=>t.query.staking.validators.keys())),Rc((e=>e.map((({args:[e]})=>e)).filter((e=>e)))))))}r(rM,"stashes",(function(){return nM}));var iM={};function oM(e,t){return Cw(e,(()=>t.query.staking.erasStakers?t.derive.session.indexes().pipe(mu((({currentEra:e})=>t.query.staking.erasStakers.keys(e))),Rc((e=>e.map((({args:[,e]})=>e))))):t.query.staking.currentElected()))}function sM(e,t){return Cw(e,(()=>Uc([t.query.session?t.query.session.validators():Jc([]),t.query.staking?t.derive.staking.nextElected():Jc([])]).pipe(Rc((([e,t])=>({nextElected:t.length?t:e,validators:e}))))))}r(iM,"nextElected",(function(){return oM})),r(iM,"validators",(function(){return sM}));var aM={};r(aM,"waitingInfo",(function(){return uM}));const cM={withController:!0,withPrefs:!0};function uM(e,t){return Cw(e,((e=cM)=>Uc([t.derive.staking.validators(),t.derive.staking.stashes()]).pipe(mu((([{nextElected:r},n])=>{const i=r.map((e=>e.toString())),o=n.filter((e=>!i.includes(e.toString())));return t.derive.staking.queryMulti(o,e).pipe(Rc((e=>({info:e,waiting:o}))))})))))}n(jT,LT),n(jT,WT),n(jT,UT),n(jT,KT),n(jT,_T),n(jT,nS),n(jT,cS),n(jT,fS),n(jT,yS),n(jT,vS),n(jT,PS),n(jT,TS),n(jT,NS),n(jT,VS),n(jT,jS),n(jT,DS),n(jT,WS),n(jT,GS),n(jT,$S),n(jT,rM),n(jT,iM),n(jT,aM);var dM={},fM={};function lM(e,t){return Cw(e,lP(e,t,"technicalCommittee"))}r(fM,"members",(function(){return lM}));var hM={};function pM(e,t){return Cw(e,hP(e,t,"technicalCommittee"))}r(hM,"prime",(function(){return pM}));var mM={};function yM(e,t){return Cw(e,mP(e,t,"technicalCommittee"))}function bM(e,t){return Cw(e,vP(e,t,"technicalCommittee"))}function gM(e,t){return Cw(e,yP(e,t,"technicalCommittee"))}function vM(e,t){return Cw(e,bP(e,t,"technicalCommittee"))}function wM(e,t){return Cw(e,gP(e,t,"technicalCommittee"))}r(mM,"hasProposals",(function(){return yM})),r(mM,"proposal",(function(){return bM})),r(mM,"proposalHashes",(function(){return vM})),r(mM,"proposalCount",(function(){return gM})),r(mM,"proposals",(function(){return wM})),n(dM,fM),n(dM,hM),n(dM,mM);var xM={},PM={};function kM(e,t){return Cw(e,(()=>t.query.treasury?Uc([t.query.treasury.proposalCount(),t.query.treasury.approvals()]).pipe(mu((([e,r])=>function(e,t,r){const n=[],i=t.toNumber();for(let t=0;t<i;t++)r.some((e=>e.eqn(t)))||n.push(e.registry.createType("ProposalIndex",t));const o=[...n,...r];return Uc([e.query.treasury.proposals.multi(o),e.derive.council?e.derive.council.proposals():Jc([])]).pipe(Rc((([n,i])=>function(e,{allIds:t,allProposals:r,approvalIds:n,councilProposals:i,proposalCount:o}){const s=[],a=[],c=i.filter((({proposal:t})=>e.tx.treasury.approveProposal.is(t)||e.tx.treasury.rejectProposal.is(t)));return t.forEach(((e,t)=>{if(r[t].isSome){const i=c.filter((({proposal:t})=>e.eq(t.args[0]))).sort(((e,t)=>e.proposal.method.localeCompare(t.proposal.method))),o=n.some((t=>t.eq(e))),u={council:i,id:e,proposal:r[t].unwrap()};o?s.push(u):a.push(u)}})),{approvals:s,proposalCount:o,proposals:a}}(e,{allIds:o,allProposals:n,approvalIds:r,councilProposals:i,proposalCount:t}))))}(t,e,r)))):Jc({approvals:[],proposalCount:t.registry.createType("ProposalIndex"),proposals:[]})))}r(PM,"proposals",(function(){return kM})),n(xM,PM);var TM={},SM={};function MM(e,t){return Cw(e,(e=>Uc([t.rpc.chain.getBlock(e),t.queryAt(e).pipe(mu((e=>e.system.events())))]).pipe(Rc((([e,t])=>({block:e,events:t}))))))}r(SM,"events",(function(){return MM}));var AM={};r(AM,"signingInfo",(function(){return zM}));X=s("ctT9w");const NM=new(e(X))(6e3),OM=new(e(X))(5),HM=new(e(X))(3e5);function IM(e,t){return e.derive.balances.account(t).pipe(Rc((({accountNonce:e})=>e)))}function VM(e,t){var r;return null!==(r=e.rpc.system)&&void 0!==r&&r.accountNextIndex?e.rpc.system.accountNextIndex(t):IM(e,t)}function EM(e){return Uc([e.rpc.chain.getHeader().pipe(mu((t=>t.parentHash.isEmpty?Jc(t):e.rpc.chain.getHeader(t.parentHash)))),e.rpc.chain.getFinalizedHead().pipe(mu((t=>e.rpc.chain.getHeader(t))))]).pipe(Rc((([e,t])=>e.number.unwrap().sub(t.number.unwrap()).gt(OM)?e:t)))}function zM(e,t){return(e,r,n)=>Uc([P(r)?IM(t,e):-1===r?VM(t,e):Jc(t.registry.createType("Index",r)),P(n)||re(n)&&n>0?EM(t):Jc(null)]).pipe(Rc((([e,r])=>{var n,i,o,s;return{header:r,mortalLength:Math.min((null===(n=t.consts.system)||void 0===n||null===(i=n.blockHashCount)||void 0===i?void 0:i.toNumber())||250,HM.div((null===(o=t.consts.babe)||void 0===o?void 0:o.expectedBlockTime)||(null===(s=t.consts.timestamp)||void 0===s?void 0:s.minimumPeriod.muln(2))||NM).iadd(OM).toNumber()),nonce:e}})))}n(TM,SM),n(TM,AM);const CM={accounts:kw,balances:px,bounties:zx,chain:Bx,contracts:sP,council:uP,crowdloan:jP,democracy:JP,elections:jk,imOnline:qk,membership:Gk,parachains:nT,session:lT,society:MT,staking:jT,technicalCommittee:dM,treasury:xM,tx:TM},jM={contracts:{instances:["contracts"],methods:[]},council:{instances:["council"],methods:[],withDetect:!0},crowdloan:{instances:["crowdloan"],methods:[]},democracy:{instances:["democracy"],methods:[]},elections:{instances:["phragmenElection","electionsPhragmen","elections","council"],methods:[],withDetect:!0},imOnline:{instances:["imOnline"],methods:[]},membership:{instances:["membership"],methods:[]},parachains:{instances:["parachains","registrar"],methods:[]},session:{instances:["session"],methods:[]},society:{instances:["society"],methods:[]},staking:{instances:["staking"],methods:["erasRewardPoints"]},technicalCommittee:{instances:["technicalCommittee"],methods:[],withDetect:!0},treasury:{instances:["treasury"],methods:[]}};function LM(e,t,r){const n=Object.keys(t.query),i=t.runtimeVersion.specName.toString(),o=e=>n.includes(e),s=e=>function(e,t,r){return e.registry.getModuleInstances(t,r)||[]}(t,i,e).some(o),a=e=>{return!jM[e]||jM[e].instances.some(o)&&(!jM[e].methods.length||jM[e].methods.every((r=jM[e].instances,e=>r.some((r=>n.includes(r)&&!!t.query[r][e])))))||jM[e].withDetect&&jM[e].instances.some(s);var r},c=e=>Object.keys(r[e]),u=(n,i)=>r[n][i](e,t),d={},f=Object.keys(r);for(let e=0;e<f.length;e++){const t=f[e];a(t)&&Pw(d,t,c,u)}return d}X=s("ctT9w");const RM=Tr("api/util");function BM(e,{block:{extrinsics:t,header:r}},n,i){for(const[r,i]of t.entries())if(i.hash.eq(e))return n.filter((({phase:e})=>e.isApplyExtrinsic&&e.asApplyExtrinsic.eqn(r)));if(i.isInBlock){const n=t.map((e=>e.hash.toHex()));RM.warn(`block ${r.hash.toHex()}: Unable to find extrinsic ${e.toHex()} inside ${n.join(", ")}`)}}function DM(e){return v(e.sign)}const XM=e=>e;function qM(e,t,r,n){return e.filter((({event:e})=>t===e.section&&r.includes(e.method))).map((e=>n(e)))}function WM({event:{data:[e]}}){return e}function FM({event:{data:e,method:t}}){return"ExtrinsicSuccess"===t?e[0]:e[1]}class UM{constructor({dispatchError:e,dispatchInfo:t,events:r,internalError:n,status:i}){this.dispatchError=void 0,this.dispatchInfo=void 0,this.internalError=void 0,this.events=void 0,this.status=void 0,this.dispatchError=e||function(e=[]){return qM(e,"system",["ExtrinsicFailed"],WM)[0]}(r),this.dispatchInfo=t||function(e=[]){return qM(e,"system",["ExtrinsicFailed","ExtrinsicSuccess"],FM)[0]}(r),this.events=r||[],this.internalError=n,this.status=i}get isCompleted(){return this.isError||this.status.isInBlock||this.status.isFinalized}get isError(){return this.status.isDropped||this.status.isFinalityTimeout||this.status.isInvalid||this.status.isUsurped}get isFinalized(){return this.status.isFinalized}get isInBlock(){return this.status.isInBlock}get isWarning(){return this.status.isRetracted}filterRecords(e,t){return qM(this.events,e,Array.isArray(t)?t:[t],XM)}findRecord(e,t){return this.filterRecords(e,t)[0]}toHuman(e){var t,r,n;return{dispatchError:null===(t=this.dispatchError)||void 0===t?void 0:t.toHuman(),dispatchInfo:null===(r=this.dispatchInfo)||void 0===r?void 0:r.toHuman(),events:this.events.map((t=>t.toHuman(e))),internalError:null===(n=this.internalError)||void 0===n?void 0:n.message.toString(),status:this.status.toHuman(e)}}}const GM=e=>e;function ZM(e,t,r,{header:n,mortalLength:i,nonce:o}){return n?JM(e,r,{blockHash:n.hash,era:t.createType("ExtrinsicEra",{current:n.number,period:r.era||i}),nonce:o}):(re(r.era)&&(delete r.era,delete r.blockHash),JM(e,r,{nonce:o}))}function YM(e,t){let r={};return v(e)?t=e:r=U({},e),[r,t]}function JM(e,t,r){return U({blockHash:e.genesisHash,genesisHash:e.genesisHash},t,r,{runtimeVersion:e.runtimeVersion,signedExtensions:e.registry.signedExtensions,version:e.extrinsicType})}function KM(e={}){return lr(e)||re(e)?{nonce:e}:e}function QM(e,t,r){const n=function({api:e,apiType:t,decorateMethod:r}){const n=e.registry.createClass("Extrinsic");var i=oa("ignoreStatusCb"),o=oa("transformResult"),s=oa("observeSign"),a=oa("observeStatus"),c=oa("observeSend"),u=oa("observeSubscribe"),d=oa("signViaSigner"),f=oa("updateSigner");return class extends n{constructor(r,n){super(r,n,{version:e.extrinsicType}),Object.defineProperty(this,i,{writable:!0,value:void 0}),Object.defineProperty(this,o,{writable:!0,value:GM}),Object.defineProperty(this,s,{writable:!0,value:(t,r)=>{const n=DM(t)?t.address:t.toString(),i=KM(r);let o;return e.derive.tx.signingInfo(n,i.nonce,i.era).pipe(nu(),ou((async r=>{const s=ZM(e,this.registry,i,r);DM(t)?this.sign(t,s):o=await na(this,d)[d](n,s,r.header)})),iu(o))}}),Object.defineProperty(this,a,{writable:!0,value:(t,r)=>{if(!r.isFinalized&&!r.isInBlock)return Jc(na(this,o)[o](new UM({status:r})));const n=r.isInBlock?r.asInBlock:r.asFinalized;return e.derive.tx.events(n).pipe(Rc((({block:e,events:n})=>na(this,o)[o](new UM({events:BM(t,e,n,r),status:r})))),Kc((e=>Jc(na(this,o)[o](new UM({internalError:e,status:r}))))))}}),Object.defineProperty(this,c,{writable:!0,value:(t=-1)=>e.rpc.author.submitExtrinsic(this).pipe(yu((e=>{na(this,f)[f](t,e)})))}),Object.defineProperty(this,u,{writable:!0,value:(t=-1)=>{const r=this.hash;return e.rpc.author.submitAndWatchExtrinsic(this).pipe(mu((e=>na(this,a)[a](r,e))),yu((e=>{na(this,f)[f](t,e)})))}}),Object.defineProperty(this,d,{writable:!0,value:async(t,r,n)=>{const i=r.signer||e.signer;k(i,"No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");const o=this.registry.createType("SignerPayload",U({},r,{address:t,blockNumber:n?n.number:0,method:this.method}));let s;if(i.signPayload)s=await i.signPayload(o.toPayload());else{if(!i.signRaw)throw new Error("Invalid signer interface, it should implement either signPayload or signRaw (or both)");s=await i.signRaw(o.toRaw())}return super.addSignature(t,s.signature,o.toPayload()),s.id}}),Object.defineProperty(this,f,{writable:!0,value:(t,r)=>{-1!==t&&e.signer&&e.signer.update&&e.signer.update(t,r)}}),na(this,i)[i]="rxjs"===t}dryRun(t,n){return w(n)||Ht(n)?r((()=>e.rpc.system.dryRun(this.toHex(),n))):r((()=>na(this,s)[s](t,n).pipe(mu((()=>e.rpc.system.dryRun(this.toHex()))))))()}paymentInfo(t,n){if(w(n)||Ht(n))return r((()=>e.rpc.payment.queryInfo(this.toHex(),n)));const[i]=YM(n),o=DM(t)?t.address:t.toString();return r((()=>e.derive.tx.signingInfo(o,i.nonce,i.era).pipe(nu(),mu((t=>{const r=ZM(e,this.registry,i,t),n=JM(e,r,{});return this.signFake(o,n),e.rpc.payment.queryInfo(this.toHex())})))))()}send(t){const n=e.hasSubscriptions&&(na(this,i)[i]||!!t);return r(n?na(this,u)[u]:na(this,c)[c])(t)}sign(t,r){return super.sign(t,JM(e,KM(r),{})),this}signAsync(e,t){return r((()=>na(this,s)[s](e,t).pipe(iu(this))))()}signAndSend(t,n,o){const[a,d]=YM(n,o),f=e.hasSubscriptions&&(na(this,i)[i]||!!d);return r((()=>na(this,s)[s](t,a).pipe(mu((e=>f?na(this,u)[u](e):na(this,c)[c](e))))))(d)}withResultTransform(e){return na(this,o)[o]=e,this}}}({api:t,apiType:e,decorateMethod:r});return e=>new n(t.registry,e)}const _M=Tr("api/augment");function $M(e,t,r=[]){return t.length?` ${t.length} ${e}${r.length?" and":""}`:""}function eA(e,t){return t.length?`\n\t${e.padStart(7)}: ${t.sort().join(", ")}`:""}function tA(e,t,[r,n]){(r.length||n.length)&&_M.warn(`api.${e}: Found${$M("added",r,n)}${$M("removed",n)} ${t}:${eA("added",r)}${eA("removed",n)}`)}function rA(e,t){return e.filter((e=>!t.includes(e)))}function nA(e,t){const r=Object.keys(e),n=(i=Object.keys(t),o=r,i.filter((e=>o.includes(e))));var i,o;const s=[];for(let r=0;r<n.length;r++){const i=n[r],o=Object.keys(e[i]),a=Object.keys(t[i]);s.push(...a.filter((e=>!o.includes(e))).map((e=>`${i}.${e}`)))}return s}function iA(e,t){const r=t=>e[t],n=Object.keys(e);for(let e=0;e<n.length;e++){const i=n[e];Object.prototype.hasOwnProperty.call(t,i)||pr(t,i,r)}}function oA(e,t,r,n=!1){n&&function(e){const t=Object.keys(e);for(let r=0;r<t.length;r++)delete e[t[r]]}(r),e&&Object.keys(r).length&&(tA(e,"modules",function(e,t){const r=Object.keys(e),n=Object.keys(t);return[rA(r,n),rA(n,r)]}(t,r)),tA(e,"calls",function(e,t){return[nA(t,e),nA(e,t)]}(t,r)));const i=Object.keys(t);for(let e=0;e<i.length;e++){const n=i[e];r[n]||(r[n]={}),iA(t[n],r[n])}return r}function sA(e,t){const r=e=>Object.keys(t[e]),n=(r,n)=>e(t[r][n]),i={},o=Object.keys(t);for(let e=0;e<o.length;e++)Pw(i,o[e],r,n);return i}function aA({lookup:e},{method:t,section:r},n){return`${r}.${t}(${n.map((t=>e.getTypeDef(t).type)).join(", ")})`}function cA(e,t,r){const n=r.filter((e=>!P(e)));if(t.meta.type.isPlain)k(0===n.length,(()=>`${aA(e,t,[])} does not take any arguments, ${n.length} found`));else{const{hashers:r,key:i}=t.meta.type.asMap,o=1===r.length?[i]:e.lookup.getSiType(i).def.asTuple.map((e=>e));k(n.length===o.length,(()=>`${aA(e,t,o)} is a map, requiring ${o.length} arguments, ${n.length} found`))}return[t,n]}var uA=oa("eventemitter");const dA=1e3,fA=Tr("api/init");let lA=0;function hA(e,{method:t,section:r}){return k(e.rx.query[r]&&e.rx.query[r][t],(()=>`query.${r}.${t} is not available in this version of the metadata`)),e.rx.query[r][t]}var pA=oa("instanceId"),mA=oa("registry");const yA=Tr("api/init");function bA(e){return e.toString()}var gA=oa("healthTimer"),vA=oa("registries"),wA=oa("updateSub"),xA=oa("waitingRegistries"),PA=oa("onProviderConnect"),kA=oa("onProviderDisconnect"),TA=oa("onProviderError");function SA(e){return T(e,"Api needs to be initialized before using, listen on 'ready'")}var MA=oa("allHasFired"),AA=oa("callback"),NA=oa("fired"),OA=oa("fns"),HA=oa("isActive"),IA=oa("results"),VA=oa("subscriptions");class EA{constructor(e,t){Object.defineProperty(this,MA,{writable:!0,value:!1}),Object.defineProperty(this,AA,{writable:!0,value:void 0}),Object.defineProperty(this,NA,{writable:!0,value:[]}),Object.defineProperty(this,OA,{writable:!0,value:[]}),Object.defineProperty(this,HA,{writable:!0,value:!0}),Object.defineProperty(this,IA,{writable:!0,value:[]}),Object.defineProperty(this,VA,{writable:!0,value:[]}),na(this,AA)[AA]=t,na(this,VA)[VA]=e.map((async(e,t)=>{const[r,...n]=Array.isArray(e)?e:[e];return na(this,NA)[NA].push(!1),na(this,OA)[OA].push(r),r(...n,this._createCallback(t))}))}_allHasFired(){var e;return(e=na(this,MA))[MA]||(e[MA]=0===na(this,NA)[NA].filter((e=>!e)).length),na(this,MA)[MA]}_createCallback(e){return t=>{na(this,NA)[NA][e]=!0,na(this,IA)[IA][e]=t,this._triggerUpdate()}}_triggerUpdate(){if(na(this,HA)[HA]&&v(na(this,AA)[AA])&&this._allHasFired())try{na(this,AA)[AA](na(this,IA)[IA])}catch(e){}}unsubscribe(){na(this,HA)[HA]&&(na(this,HA)[HA]=!1,na(this,VA)[VA].forEach((async e=>{try{const t=await e;v(t)&&t()}catch(e){}})))}}function zA(e,t){let r=!1;return{reject:e=>(r||(r=!0,t(e)),Yc),resolve:t=>{r||(r=!0,e(t))}}}function CA(e,t){const r=!!(t&&t.methodName&&t.methodName.includes("subscribe"));return function(...n){const[i,o]=function(e,t){let r;const n=e.slice();return e.length&&v(e[e.length-1])&&(r=n.pop()),k(!t||v(r),"Expected a callback to be passed with subscriptions"),[n,r]}(n,r);return o?function(e,t,r){return new Promise(((n,i)=>{const o=zA(n,i),s=e(...t).pipe(Kc((e=>o.reject(e))),yu((()=>o.resolve((()=>s.unsubscribe()))))).subscribe((e=>{setTimeout((()=>r(e)),0)}))}))}(e,i,o):function(e,t){return new Promise(((r,n)=>{const i=zA(r,n),o=e(...t).pipe(Kc((e=>i.reject(e)))).subscribe((e=>{i.resolve(e),setTimeout((()=>o.unsubscribe()),0)}))}))}((null==t?void 0:t.overrideNoSub)||e,i)}}var jA=oa("isReadyPromise"),LA=oa("isReadyOrErrorPromise");class RA extends class extends class extends class extends class extends class{constructor(){Object.defineProperty(this,uA,{writable:!0,value:new(e(cs))})}emit(e,...t){return na(this,uA)[uA].emit(e,...t)}on(e,t){return na(this,uA)[uA].on(e,t),this}off(e,t){return na(this,uA)[uA].removeListener(e,t),this}once(e,t){return na(this,uA)[uA].once(e,t),this}}{constructor(t,r,n){var i;super(),Object.defineProperty(this,pA,{writable:!0,value:void 0}),Object.defineProperty(this,mA,{writable:!0,value:void 0}),this.__phantom=new(e(X))(0),this._consts={},this._derive=void 0,this._errors={},this._events={},this._extrinsics=void 0,this._extrinsicType=4,this._genesisHash=void 0,this._isConnected=void 0,this._isReady=!1,this._options=void 0,this._query={},this._queryMulti=void 0,this._rpc=void 0,this._rpcCore=void 0,this._runtimeChain=void 0,this._runtimeMetadata=void 0,this._runtimeVersion=void 0,this._rx={consts:{},query:{},tx:{}},this._type=void 0,this._decorateMethod=void 0,this._rxDecorateMethod=e=>e,na(this,pA)[pA]=""+ ++lA,na(this,mA)[mA]=(null===(i=t.source)||void 0===i?void 0:i.registry)||t.registry||new yw,this._rx.queryAt=(e,t)=>Lc(this.at(e,t)).pipe(Rc((e=>e.rx.query))),this._rx.registry=na(this,mA)[mA];const o=t.source?t.source._rpcCore.provider.clone():t.provider||new ta;this._decorateMethod=n,this._options=t,this._type=r,this._rpcCore=new Fw(na(this,pA)[pA],na(this,mA)[mA],o,this._options.rpc),this._isConnected=new Ka(this._rpcCore.provider.isConnected),this._rx.hasSubscriptions=this._rpcCore.provider.hasSubscriptions}get registry(){return na(this,mA)[mA]}createType(e,...t){return na(this,mA)[mA].createType(e,...t)}registerTypes(e){e&&na(this,mA)[mA].register(e)}get hasSubscriptions(){return this._rpcCore.provider.hasSubscriptions}get supportMulti(){return this._rpcCore.provider.hasSubscriptions||!!this._rpcCore.state.queryStorageAt}_createDecorated(e,t,r,n){r||(r={consts:{},errors:{},events:{},query:{},registry:e.registry,rx:{query:{}}}),e.decoratedMeta||(e.decoratedMeta=function(e,t){k(t instanceof og,"You need to pass a valid Metadata instance to Decorated");const r=t.asLatest,n=t.version;return{consts:ug(e,r),errors:lg(e,r,n),events:pg(e,r,n),query:Hg(e,r),registry:e,tx:bg(e,r,n)}}(e.registry,e.metadata));const i=this._decorateStorage(e.decoratedMeta,this._decorateMethod,n),o=this._decorateStorage(e.decoratedMeta,this._rxDecorateMethod,n);return oA("consts",e.decoratedMeta.consts,r.consts,t),oA("errors",e.decoratedMeta.errors,r.errors,t),oA("events",e.decoratedMeta.events,r.events,t),oA("query",i,r.query,t),oA("query",o,r.rx.query,t),r.findCall=t=>sa(e.registry,t),r.findError=t=>aa(e.registry,t),r.queryMulti=n?this._decorateMultiAt(r,this._decorateMethod,n):this._decorateMulti(this._decorateMethod),{decoratedApi:r,decoratedMeta:e.decoratedMeta}}_injectMetadata(e,t=!1){!t&&e.decoratedApi||(e.decoratedApi={consts:{},errors:{},events:{},query:{},registry:e.registry,rx:{query:{}}});const{decoratedApi:r,decoratedMeta:n}=this._createDecorated(e,t,e.decoratedApi);this._consts=r.consts,this._errors=r.errors,this._events=r.events,this._query=r.query,this._rx.query=r.rx.query;const i=this._decorateExtrinsics(n,this._decorateMethod),o=this._decorateExtrinsics(n,this._rxDecorateMethod);t||!this._extrinsics?(this._extrinsics=i,this._rx.tx=o):(oA("tx",i,this._extrinsics,!1),oA(null,o,this._rx.tx,!1)),oA(null,n.consts,this._rx.consts,t)}injectMetadata(e,t,r){this._injectMetadata({metadata:e,registry:r||na(this,mA)[mA],specName:na(this,mA)[mA].createType("Text"),specVersion:V},t)}_decorateFunctionMeta(e,t){return t.meta=e.meta,t.method=e.method,t.section=e.section,t.toJSON=e.toJSON,e.callIndex&&(t.callIndex=e.callIndex),t}_filterRpc(e,t){0!==Object.keys(t).length&&(this._rpcCore.addUserInterfaces(t),this._decorateRpc(this._rpcCore,this._decorateMethod,this._rpc),this._decorateRpc(this._rpcCore,this._rxDecorateMethod,this._rx.rpc)),this._filterRpcMethods(e)}_filterRpcMethods(e){const t=0!==e.length,r=[...this._rpcCore.mapping.entries()],n=[];for(let e=0;e<r.length;e++){const[,{alias:t,endpoint:i,method:o,pubsub:s,section:a}]=r[e];n.push(`${a}_${o}`),s&&(n.push(`${a}_${s[1]}`),n.push(`${a}_${s[2]}`)),t&&n.push(...t),i&&n.push(i)}const i=e.filter((e=>!n.includes(e)));i.length&&fA.warn(`RPC methods not decorated: ${i.join(", ")}`);for(let n=0;n<r.length;n++){const[i,{method:o,section:s}]=r[n];t&&!e.includes(i)&&"rpc_methods"!==i&&(delete this._rpc[s][o],delete this._rx.rpc[s][o])}}_decorateRpc(e,t,r={}){const n=r,i=(r,n)=>{const i=e[r][n],o=t(i,{methodName:n});return o.meta=i.meta,o.raw=t(i.raw,{methodName:n}),o};for(let t=0;t<e.sections.length;t++){const r=e.sections[t];if(!Object.prototype.hasOwnProperty.call(n,r)){const t=Object.keys(e[r]),o=e=>i(r,e);for(let e=0;e<t.length;e++){const i=t[e];(this.hasSubscriptions||!i.startsWith("subscribe")&&!i.startsWith("unsubscribe"))&&(Object.prototype.hasOwnProperty.call(n,r)||(n[r]={}),pr(n[r],i,o))}}}return n}_decorateMulti(e){return e((e=>(this.hasSubscriptions?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt)(e.map((e=>Array.isArray(e)?e[0].creator.meta.type.isPlain?[e[0].creator]:1===e[0].creator.meta.type.asMap.hashers.length?[e[0].creator,e.slice(1)]:[e[0].creator,...e.slice(1)]:[e.creator])))))}_decorateMultiAt(e,t,r){return t((t=>this._rpcCore.state.queryStorageAt(t.map((t=>{if(Array.isArray(t)){const{creator:r}=hA(e,t[0].creator);return r.meta.type.isPlain?[r]:1===r.meta.type.asMap.hashers.length?[r,t.slice(1)]:[r,...t.slice(1)]}return[hA(e,t.creator).creator]})),r)))}_decorateExtrinsics({tx:e},t){const r=QM(this._type,this._rx,t),n=t=>mr({},Object.keys(e[t]),(n=>this._decorateExtrinsicEntry(e[t][n],r))),i=Object.keys(e);for(let e=0;e<i.length;e++)pr(r,i[e],n);return r}_decorateExtrinsicEntry(e,t){const r=(...r)=>t(e(...r));return r.is=t=>e.is(t),this._decorateFunctionMeta(e,r)}_decorateStorage({query:e,registry:t},r,n){const i={},o=i=>mr({},Object.keys(e[i]),(o=>n?this._decorateStorageEntryAt(t,e[i][o],r,n):this._decorateStorageEntry(e[i][o],r))),s=Object.keys(e);for(let e=0;e<s.length;e++)pr(i,s[e],o);return i}_decorateStorageEntry(e,t){const r=(t,r)=>cA(r||na(this,mA)[mA],e,t),n=t=>Lc(this.at(t)).pipe(Rc((t=>hA(t,e)))),i=this._decorateStorageCall(e,t);return i.creator=e,i.at=t(((e,...t)=>n(e).pipe(mu((e=>e(...t)))))),i.hash=t(((...e)=>this._rpcCore.state.getStorageHash(r(e)))),i.is=t=>t.section===e.section&&t.method===e.method,i.key=(...t)=>Lt(Qt(e(...t))[1]),i.keyPrefix=(...t)=>Lt(e.keyPrefix(...t)),i.range=t(((e,...t)=>this._decorateStorageRange(i,t,e))),i.size=t(((...e)=>this._rpcCore.state.getStorageSize(r(e)))),i.sizeAt=t(((e,...t)=>n(e).pipe(mu((n=>this._rpcCore.state.getStorageSize(r(t,n.creator.meta.registry),e)))))),e.iterKey&&e.meta.type.isMap&&(i.entries=t(Cw(na(this,pA)[pA],((...t)=>this._retrieveMapEntries(e,null,t)))),i.entriesAt=t(Cw(na(this,pA)[pA],((e,...t)=>n(e).pipe(mu((r=>this._retrieveMapEntries(r.creator,e,t))))))),i.entriesPaged=t(Cw(na(this,pA)[pA],(t=>this._retrieveMapEntriesPaged(e,t)))),i.keys=t(Cw(na(this,pA)[pA],((...t)=>this._retrieveMapKeys(e,null,t)))),i.keysAt=t(Cw(na(this,pA)[pA],((e,...t)=>n(e).pipe(mu((r=>this._retrieveMapKeys(r.creator,e,t))))))),i.keysPaged=t(Cw(na(this,pA)[pA],(t=>this._retrieveMapKeysPaged(e,t))))),this.supportMulti&&e.meta.type.isMap&&(i.multi=t((t=>1===e.meta.type.asMap.hashers.length?this._retrieveMulti(t.map((t=>[e,[t]]))):this._retrieveMulti(t.map((t=>[e,t])))))),this._decorateFunctionMeta(e,i)}_decorateStorageEntryAt(e,t,r,n){const i=r=>cA(e,t,r),o=r(((...e)=>this._rpcCore.state.getStorage(i(e),n)));return o.creator=t,o.hash=r(((...e)=>this._rpcCore.state.getStorageHash(i(e),n))),o.is=e=>e.section===t.section&&e.method===t.method,o.key=(...e)=>Lt(Qt(t(t.meta.type.isPlain?void 0:e))[1]),o.keyPrefix=(...e)=>Lt(t.keyPrefix(...e)),o.size=r(((...e)=>this._rpcCore.state.getStorageSize(i(e),n))),t.iterKey&&t.meta.type.isMap&&(o.entries=r(Cw(na(this,pA)[pA],((...e)=>this._retrieveMapEntries(t,n,e)))),o.keys=r(Cw(na(this,pA)[pA],((...e)=>this._retrieveMapKeys(t,n,e))))),this._decorateFunctionMeta(t,o)}_decorateStorageCall(e,t){return t(((...t)=>this.hasSubscriptions?this._rpcCore.state.subscribeStorage([cA(na(this,mA)[mA],e,t)]).pipe(Rc((([e])=>e))):this._rpcCore.state.getStorage(cA(na(this,mA)[mA],e,t))),{methodName:e.method,overrideNoSub:(...t)=>this._rpcCore.state.getStorage(cA(na(this,mA)[mA],e,t))})}_decorateStorageRange(e,t,r){const n=jy(na(this,mA)[mA],e.creator.meta.type,e.creator.meta.modifier.isOptional);return this._rpcCore.state.queryStorage([e.key(...t)],...r).pipe(Rc((e=>e.map((([e,[t]])=>[e,this.createType(n,t.isSome?t.unwrap().toHex():void 0)])))))}_retrieveMulti(e){if(!e.length)return Jc([]);const t=this.hasSubscriptions?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;return Uc(H(e,250).map((e=>t(e)))).pipe(Rc(I))}_retrieveMapKeys({iterKey:e,meta:t,method:r,section:n},i,o){k(e&&t.type.isMap,"keys can only be retrieved on maps");const s=e(...o).toHex(),a=new Ka(s),c=i?e=>this._rpcCore.state.getKeysPaged(s,dA,e,i):e=>this._rpcCore.state.getKeysPaged(s,dA,e),u=e=>e.setMeta(t,n,r);return a.pipe(mu(c),Rc((e=>e.map(u))),yu((e=>{setTimeout((()=>{e.length===dA?a.next(e[999].toHex()):a.complete()}),0)})),vu(),Rc(I))}_retrieveMapKeysPaged({iterKey:e,meta:t,method:r,section:n},i){k(e&&t.type.isMap,"keys can only be retrieved on maps");const o=e(...i.args).toHex(),s=e=>e.setMeta(t,n,r);return this._rpcCore.state.getKeysPaged(o,i.pageSize,i.startKey||o).pipe(Rc((e=>e.map(s))))}_retrieveMapEntries(e,t,r){const n=t?e=>this._rpcCore.state.queryStorageAt(e,t):e=>this._rpcCore.state.queryStorageAt(e);return this._retrieveMapKeys(e,t,r).pipe(mu((e=>e.length?Uc(H(e,250).map(n)).pipe(Rc((t=>I(t).map(((t,r)=>[e[r],t]))))):Jc([]))))}_retrieveMapEntriesPaged(e,t){return this._retrieveMapKeysPaged(e,t).pipe(mu((e=>e.length?this._rpcCore.state.queryStorageAt(e).pipe(Rc((t=>t.map(((t,r)=>[e[r],t]))))):Jc([]))))}_decorateDeriveRx(e){var t,r,n,i;const o=null===(t=this._runtimeVersion)||void 0===t?void 0:t.specName.toString();return sA(e,function(e,t,r={}){return{...LM(e,t,CM),...LM(e,t,r)}}(na(this,pA)[pA],this._rx,U({},this._options.derives,null===(r=this._options.typesBundle)||void 0===r||null===(n=r.spec)||void 0===n||null===(i=n[o||""])||void 0===i?void 0:i.derives)))}_decorateDerive(e){return sA(e,this._rx.derive)}}{constructor(e,t,r){super(e,t,r),Object.defineProperty(this,gA,{writable:!0,value:null}),Object.defineProperty(this,vA,{writable:!0,value:[]}),Object.defineProperty(this,wA,{writable:!0,value:null}),Object.defineProperty(this,xA,{writable:!0,value:{}}),Object.defineProperty(this,PA,{writable:!0,value:async()=>{this._isConnected.next(!0),this.emit("connected");try{const[e,t]=await Promise.all([this._loadMeta(),!1===this._options.initWasm?Promise.resolve(!0):zl()]);this._subscribeHealth(),e&&!this._isReady&&t&&(this._isReady=!0,this.emit("ready",this))}catch(e){const t=new Error(`FATAL: Unable to initialize the API: ${e.message}`);yA.error(t),this.emit("error",t)}}}),Object.defineProperty(this,kA,{writable:!0,value:()=>{this._isConnected.next(!1),this._unsubscribeHealth(),this.emit("disconnected")}}),Object.defineProperty(this,TA,{writable:!0,value:e=>{this.emit("error",e)}}),this.registry.setKnownTypes(e),e.source?na(this,vA)[vA]=na(e.source,vA)[vA]:this.registerTypes(e.types),this._rpc=this._decorateRpc(this._rpcCore,this._decorateMethod),this._rx.rpc=this._decorateRpc(this._rpcCore,this._rxDecorateMethod),this.supportMulti&&(this._queryMulti=this._decorateMulti(this._decorateMethod),this._rx.queryMulti=this._decorateMulti(this._rxDecorateMethod)),this._rx.signer=e.signer,this._rpcCore.setRegistrySwap((e=>this.getBlockRegistry(e))),this.hasSubscriptions?(this._rpcCore.provider.on("disconnected",na(this,kA)[kA]),this._rpcCore.provider.on("error",na(this,TA)[TA]),this._rpcCore.provider.on("connected",na(this,PA)[PA])):yA.warn("Api will be available in a limited mode since the provider does not support subscriptions"),this._rpcCore.provider.isConnected&&na(this,PA)[PA]()}_initRegistry(e,t,r,n,i){e.setChainProperties(i||this.registry.getChainProperties()),e.setKnownTypes(this._options),e.register(function({knownTypes:e},t,r,n){var i,o,s,a,c,u,d,f;const l=t.toString(),h=r.toString(),p=$(n).toNumber();return U({},sf(Ud[h],p),sf(Pd[l],p),sf(null===(i=e.typesBundle)||void 0===i||null===(o=i.spec)||void 0===o||null===(s=o[h])||void 0===s?void 0:s.types,p),sf(null===(a=e.typesBundle)||void 0===a||null===(c=a.chain)||void 0===c||null===(u=c[l])||void 0===u?void 0:u.types,p),null===(d=e.typesSpec)||void 0===d?void 0:d[h],null===(f=e.typesChain)||void 0===f?void 0:f[l],e.types)}(e,t,r.specName,r.specVersion)),e.setHasher(function({knownTypes:e},t,r){var n,i,o,s,a,c;const u=t.toString(),d=r.toString();return e.hasher||(null===(n=e.typesBundle)||void 0===n||null===(i=n.chain)||void 0===i||null===(o=i[u])||void 0===o?void 0:o.hasher)||(null===(s=e.typesBundle)||void 0===s||null===(a=s.spec)||void 0===a||null===(c=a[d])||void 0===c?void 0:c.hasher)||null}(e,t,r.specName)),e.knownTypes.typesBundle&&(e.knownTypes.typesAlias=function({knownTypes:e},t,r){var n,i,o,s,a,c;const u=t.toString(),d=r.toString();return U({},null===(n=e.typesBundle)||void 0===n||null===(i=n.spec)||void 0===i||null===(o=i[d])||void 0===o?void 0:o.alias,null===(s=e.typesBundle)||void 0===s||null===(a=s.chain)||void 0===a||null===(c=a[u])||void 0===c?void 0:c.alias,e.typesAlias)}(e,t,r.specName)),e.setMetadata(n,void 0,U({},function({knownTypes:e},t,r){var n,i,o,s,a,c;const u=t.toString(),d=r.toString();return U({},null===(n=e.typesBundle)||void 0===n||null===(i=n.spec)||void 0===i||null===(o=i[d])||void 0===o?void 0:o.signedExtensions,null===(s=e.typesBundle)||void 0===s||null===(a=s.chain)||void 0===a||null===(c=a[u])||void 0===c?void 0:c.signedExtensions)}(e,t,r.specName),this._options.signedExtensions))}_getDefaultRegistry(){const e=na(this,vA)[vA].find((({isDefault:e})=>e));return k(e,"Initialization error, cannot find the default registry"),e}async at(e,t){const r=Et(e),n=await this.getBlockRegistry(r,t);return this._createDecorated(n,!0,null,r).decoratedApi}_getBlockRegistryViaVersion(e,t){if(t){const r=na(this,vA)[vA].find((({specName:e,specVersion:r})=>e.eq(t.specName)&&r.eq(t.specVersion)));if(r)return r.lastBlockHash=e,r}return null}async _getBlockRegistry(e){k(this._genesisHash&&this._runtimeVersion,"Cannot retrieve data on an uninitialized chain");const t=this.registry.createType("HeaderPartial",this._genesisHash.eq(e)?{number:V,parentHash:this._genesisHash}:await lc(this._rpcCore.chain.getHeader.raw(e)));k(!t.parentHash.isEmpty,"Unable to retrieve header and parent from supplied hash");const[r,n]=function(e,t){const r=nf.find((t=>e.eq(t.genesisHash)));return r?[r.versions.reduce(((e,r)=>t.gt(r.blockNumber)?r:e),void 0),r.versions.find((e=>t.lte(e.blockNumber)))]:[void 0,void 0]}(this._genesisHash,t.number),i=this.registry.createType("RuntimeVersionPartial",r&&(n||r.specVersion.eq(this._runtimeVersion.specVersion))?{specName:this._runtimeVersion.specName,specVersion:r.specVersion}:await lc(this._rpcCore.state.getRuntimeVersion.raw(t.parentHash))),o=this._getBlockRegistryViaVersion(e,i);if(o)return o;const s=new yw(e),a=new og(s,await lc(this._rpcCore.state.getMetadata.raw(t.parentHash)));this._initRegistry(s,this._runtimeChain,i,a);const c={lastBlockHash:e,metadata:a,registry:s,specName:i.specName,specVersion:i.specVersion};return na(this,vA)[vA].push(c),c}async getBlockRegistry(e,t){const r=na(this,vA)[vA].find((({lastBlockHash:t})=>t&&Ct(t,e)));if(r)return r;const n=this._getBlockRegistryViaVersion(e,t);if(n)return n;const i=Lt(e);let o=na(this,xA)[xA][i];return P(o)&&(o=this._getBlockRegistry(e),na(this,xA)[xA][i]=o,o.then((()=>{delete na(this,xA)[xA][i]})).catch((()=>{}))),o}async _loadMeta(){var e;return!!this._isReady||(this._unsubscribeUpdates(),[this._genesisHash,this._runtimeMetadata]=null!==(e=this._options.source)&&void 0!==e&&e._isReady?await this._metaFromSource(this._options.source):await this._metaFromChain(this._options.metadata),this._initFromMeta(this._runtimeMetadata))}async _metaFromSource(e){this._extrinsicType=e.extrinsicVersion,this._runtimeChain=e.runtimeChain,this._runtimeVersion=e.runtimeVersion;const t=Object.keys(e.rpc),r=[];for(let n=0;n<t.length;n++){const i=t[n],o=Object.keys(e.rpc[i]);for(let e=0;e<o.length;e++)r.push(`${i}_${o[e]}`)}return this._filterRpc(r,af(this.registry,e.runtimeChain,e.runtimeVersion.specName)),[e.genesisHash,e.runtimeMetadata]}_detectCapabilities(e,t){return lc(ww(this._rx,t)).then((r=>{Object.keys(r).length&&(e.register(r),yA.debug((()=>`Capabilities detected${t?` (${Lt(Et(t))})`:""}: ${Mr(r)}`)))})).catch(void 0),!0}_subscribeUpdates(){!na(this,wA)[wA]&&this.hasSubscriptions&&(na(this,wA)[wA]=this._rpcCore.state.subscribeRuntimeVersion().pipe(mu((e=>{var t;return null!==(t=this._runtimeVersion)&&void 0!==t&&t.specVersion.eq(e.specVersion)?Jc(!1):this._rpcCore.state.getMetadata().pipe(Rc((t=>{yA.log(`Runtime version updated to spec=${e.specVersion.toString()}, tx=${e.transactionVersion.toString()}`),this._runtimeMetadata=t,this._runtimeVersion=e,this._rx.runtimeVersion=e;const r=this._getDefaultRegistry();return r.metadata=t,r.specVersion=e.specVersion,this._initRegistry(r.registry.init(),this._runtimeChain,e,t),this._injectMetadata(r,!1),this._detectCapabilities(r.registry)})))}))).subscribe())}async _metaFromChain(e){const[t,r,n,i,o,s]=await Promise.all([lc(this._rpcCore.chain.getBlockHash(0)),lc(this._rpcCore.state.getRuntimeVersion()),lc(this._rpcCore.system.chain()),lc(this._rpcCore.system.properties()),lc(this._rpcCore.rpc.methods()),e?Promise.resolve(null):lc(this._rpcCore.state.getMetadata())]);this._runtimeChain=n,this._runtimeVersion=r,this._rx.runtimeVersion=r;const a=`${t.toHex()||"0x"}-${r.specVersion.toString()}`,c=s||(e&&e[a]?new og(this.registry,e[a]):await lc(this._rpcCore.state.getMetadata()));return this._initRegistry(this.registry,n,r,c,i),this._filterRpc(o.methods.map(bA),af(this.registry,n,r.specName)),this._subscribeUpdates(),na(this,vA)[vA].length||na(this,vA)[vA].push({isDefault:!0,metadata:c,registry:this.registry,specName:r.specName,specVersion:r.specVersion}),c.getUniqTypes(this._options.throwOnUnknown||!1),[t,c]}_initFromMeta(e){return this._extrinsicType=e.asLatest.extrinsic.version.toNumber(),this._rx.extrinsicType=this._extrinsicType,this._rx.genesisHash=this._genesisHash,this._rx.runtimeVersion=this._runtimeVersion,this._injectMetadata(this._getDefaultRegistry(),!0),this._rx.derive=this._decorateDeriveRx(this._rxDecorateMethod),this._derive=this._decorateDerive(this._decorateMethod),this._detectCapabilities(this.registry),!0}_subscribeHealth(){na(this,gA)[gA]=this.hasSubscriptions?setInterval((()=>{lc(this._rpcCore.system.health()).catch((()=>{}))}),1e4):null}_unsubscribeHealth(){na(this,gA)[gA]&&(clearInterval(na(this,gA)[gA]),na(this,gA)[gA]=null)}_unsubscribeUpdates(){na(this,wA)[wA]&&(na(this,wA)[wA].unsubscribe(),na(this,wA)[wA]=null)}_unsubscribe(){this._unsubscribeHealth(),this._unsubscribeUpdates()}}{get consts(){return SA(this._consts)}get derive(){return SA(this._derive)}get errors(){return SA(this._errors)}get events(){return SA(this._events)}get extrinsicVersion(){return this._extrinsicType}get genesisHash(){return SA(this._genesisHash)}get isConnected(){return this._isConnected.getValue()}get libraryInfo(){return`${rs.name} v${rs.version}`}get query(){return SA(this._query)}get queryMulti(){return SA(this._queryMulti)}get rpc(){return SA(this._rpc)}get runtimeChain(){return SA(this._runtimeChain)}get runtimeMetadata(){return SA(this._runtimeMetadata)}get runtimeVersion(){return SA(this._runtimeVersion)}get rx(){return SA(this._rx)}get type(){return this._type}get tx(){return SA(this._extrinsics)}findCall(e){return sa(this.registry,e)}findError(e){return aa(this.registry,e)}}{constructor(e={},t,r){super(e,t,r)}connect(){return this._rpcCore.connect()}disconnect(){return this._unsubscribe(),this._rpcCore.disconnect()}setSigner(e){this._rx.signer=e}async sign(e,t,{signer:r}={}){if(w(e)){const n=r||this._rx.signer;return k(null==n?void 0:n.signRaw,"No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing."),(await n.signRaw(U({type:"bytes"},t,{address:e}))).signature}return Lt(e.sign(Et(t.data)))}}{constructor(e){super(e,"promise",CA),Object.defineProperty(this,jA,{writable:!0,value:void 0}),Object.defineProperty(this,LA,{writable:!0,value:void 0}),na(this,jA)[jA]=new Promise((e=>{super.once("ready",(()=>e(this)))})),na(this,LA)[LA]=new Promise(((e,t)=>{const r=zA(e,t);super.once("ready",(()=>r.resolve(this))),super.once("error",(e=>r.reject(e)))}))}static create(e){const t=new RA(e);return e&&e.throwOnConnect?t.isReadyOrError:(t.isReadyOrError.catch((()=>{})),t.isReady)}get isReady(){return na(this,jA)[jA]}get isReadyOrError(){return na(this,LA)[LA]}clone(){return new RA(U({},this._options,{source:this}))}async combineLatest(e,t){const r=new EA(e,t);return()=>{r.unsubscribe()}}}var BA={};!function(e){var t,r,n,i,o=9e15,s=1e9,a="0123456789abcdef",c="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",u="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",d={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-o,maxE:o,crypto:!1},f=!0,l="[DecimalError] ",h=l+"Invalid argument: ",p=l+"Precision limit exceeded",m=l+"crypto unavailable",y="[object Decimal]",b=Math.floor,g=Math.pow,v=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,w=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,x=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,P=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,k=1e7,T=c.length-1,S=u.length-1,M={toStringTag:y};function A(e){var t,r,n,i=e.length-1,o="",s=e[0];if(i>0){for(o+=s,t=1;t<i;t++)(r=7-(n=e[t]+"").length)&&(o+=R(r)),o+=n;(r=7-(n=(s=e[t])+"").length)&&(o+=R(r))}else if(0===s)return"0";for(;s%10==0;)s/=10;return o+s}function N(e,t,r){if(e!==~~e||e<t||e>r)throw Error(h+e)}function O(e,t,r,n){var i,o,s,a;for(o=e[0];o>=10;o/=10)--t;return--t<0?(t+=7,i=0):(i=Math.ceil((t+1)/7),t%=7),o=g(10,7-t),a=e[i]%o|0,null==n?t<3?(0==t?a=a/100|0:1==t&&(a=a/10|0),s=r<4&&99999==a||r>3&&49999==a||5e4==a||0==a):s=(r<4&&a+1==o||r>3&&a+1==o/2)&&(e[i+1]/o/100|0)==g(10,t-2)-1||(a==o/2||0==a)&&0==(e[i+1]/o/100|0):t<4?(0==t?a=a/1e3|0:1==t?a=a/100|0:2==t&&(a=a/10|0),s=(n||r<4)&&9999==a||!n&&r>3&&4999==a):s=((n||r<4)&&a+1==o||!n&&r>3&&a+1==o/2)&&(e[i+1]/o/1e3|0)==g(10,t-3)-1,s}function H(e,t,r){for(var n,i,o=[0],s=0,c=e.length;s<c;){for(i=o.length;i--;)o[i]*=t;for(o[0]+=a.indexOf(e.charAt(s++)),n=0;n<o.length;n++)o[n]>r-1&&(void 0===o[n+1]&&(o[n+1]=0),o[n+1]+=o[n]/r|0,o[n]%=r)}return o.reverse()}M.absoluteValue=M.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),V(e)},M.ceil=function(){return V(new this.constructor(this),this.e+1,2)},M.clampedTo=M.clamp=function(e,t){var r=this,n=r.constructor;if(e=new n(e),t=new n(t),!e.s||!t.s)return new n(NaN);if(e.gt(t))throw Error(h+t);return r.cmp(e)<0?e:r.cmp(t)>0?t:new n(r)},M.comparedTo=M.cmp=function(e){var t,r,n,i,o=this,s=o.d,a=(e=new o.constructor(e)).d,c=o.s,u=e.s;if(!s||!a)return c&&u?c!==u?c:s===a?0:!s^c<0?1:-1:NaN;if(!s[0]||!a[0])return s[0]?c:a[0]?-u:0;if(c!==u)return c;if(o.e!==e.e)return o.e>e.e^c<0?1:-1;for(t=0,r=(n=s.length)<(i=a.length)?n:i;t<r;++t)if(s[t]!==a[t])return s[t]>a[t]^c<0?1:-1;return n===i?0:n>i^c<0?1:-1},M.cosine=M.cos=function(){var e,t,r=this,n=r.constructor;return r.d?r.d[0]?(e=n.precision,t=n.rounding,n.precision=e+Math.max(r.e,r.sd())+7,n.rounding=1,r=function(e,t){var r,n,i;if(t.isZero())return t;(n=t.d.length)<32?i=(1/Z(4,r=Math.ceil(n/3))).toString():(r=16,i="2.3283064365386962890625e-10");e.precision+=r,t=G(e,1,t.times(i),new e(1));for(var o=r;o--;){var s=t.times(t);t=s.times(s).minus(s).times(8).plus(1)}return e.precision-=r,t}(n,Y(n,r)),n.precision=e,n.rounding=t,V(2==i||3==i?r.neg():r,e,t,!0)):new n(1):new n(NaN)},M.cubeRoot=M.cbrt=function(){var e,t,r,n,i,o,s,a,c,u,d=this,l=d.constructor;if(!d.isFinite()||d.isZero())return new l(d);for(f=!1,(o=d.s*g(d.s*d,1/3))&&Math.abs(o)!=1/0?n=new l(o.toString()):(r=A(d.d),(o=((e=d.e)-r.length+1)%3)&&(r+=1==o||-2==o?"0":"00"),o=g(r,1/3),e=b((e+1)/3)-(e%3==(e<0?-1:2)),(n=new l(r=o==1/0?"5e"+e:(r=o.toExponential()).slice(0,r.indexOf("e")+1)+e)).s=d.s),s=(e=l.precision)+3;;)if(u=(c=(a=n).times(a).times(a)).plus(d),n=I(u.plus(d).times(a),u.plus(c),s+2,1),A(a.d).slice(0,s)===(r=A(n.d)).slice(0,s)){if("9999"!=(r=r.slice(s-3,s+1))&&(i||"4999"!=r)){+r&&(+r.slice(1)||"5"!=r.charAt(0))||(V(n,e+1,1),t=!n.times(n).times(n).eq(d));break}if(!i&&(V(a,e+1,0),a.times(a).times(a).eq(d))){n=a;break}s+=4,i=1}return f=!0,V(n,e,l.rounding,t)},M.decimalPlaces=M.dp=function(){var e,t=this.d,r=NaN;if(t){if(r=7*((e=t.length-1)-b(this.e/7)),e=t[e])for(;e%10==0;e/=10)r--;r<0&&(r=0)}return r},M.dividedBy=M.div=function(e){return I(this,new this.constructor(e))},M.dividedToIntegerBy=M.divToInt=function(e){var t=this.constructor;return V(I(this,new t(e),0,1,1),t.precision,t.rounding)},M.equals=M.eq=function(e){return 0===this.cmp(e)},M.floor=function(){return V(new this.constructor(this),this.e+1,3)},M.greaterThan=M.gt=function(e){return this.cmp(e)>0},M.greaterThanOrEqualTo=M.gte=function(e){var t=this.cmp(e);return 1==t||0===t},M.hyperbolicCosine=M.cosh=function(){var e,t,r,n,i,o=this,s=o.constructor,a=new s(1);if(!o.isFinite())return new s(o.s?1/0:NaN);if(o.isZero())return a;r=s.precision,n=s.rounding,s.precision=r+Math.max(o.e,o.sd())+4,s.rounding=1,(i=o.d.length)<32?t=(1/Z(4,e=Math.ceil(i/3))).toString():(e=16,t="2.3283064365386962890625e-10"),o=G(s,1,o.times(t),new s(1),!0);for(var c,u=e,d=new s(8);u--;)c=o.times(o),o=a.minus(c.times(d.minus(c.times(d))));return V(o,s.precision=r,s.rounding=n,!0)},M.hyperbolicSine=M.sinh=function(){var e,t,r,n,i=this,o=i.constructor;if(!i.isFinite()||i.isZero())return new o(i);if(t=o.precision,r=o.rounding,o.precision=t+Math.max(i.e,i.sd())+4,o.rounding=1,(n=i.d.length)<3)i=G(o,2,i,i,!0);else{e=(e=1.4*Math.sqrt(n))>16?16:0|e,i=G(o,2,i=i.times(1/Z(5,e)),i,!0);for(var s,a=new o(5),c=new o(16),u=new o(20);e--;)s=i.times(i),i=i.times(a.plus(s.times(c.times(s).plus(u))))}return o.precision=t,o.rounding=r,V(i,t,r,!0)},M.hyperbolicTangent=M.tanh=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+7,n.rounding=1,I(r.sinh(),r.cosh(),n.precision=e,n.rounding=t)):new n(r.s)},M.inverseCosine=M.acos=function(){var e,t=this,r=t.constructor,n=t.abs().cmp(1),i=r.precision,o=r.rounding;return-1!==n?0===n?t.isNeg()?j(r,i,o):new r(0):new r(NaN):t.isZero()?j(r,i+4,o).times(.5):(r.precision=i+6,r.rounding=1,t=t.asin(),e=j(r,i+4,o).times(.5),r.precision=i,r.rounding=o,e.minus(t))},M.inverseHyperbolicCosine=M.acosh=function(){var e,t,r=this,n=r.constructor;return r.lte(1)?new n(r.eq(1)?0:NaN):r.isFinite()?(e=n.precision,t=n.rounding,n.precision=e+Math.max(Math.abs(r.e),r.sd())+4,n.rounding=1,f=!1,r=r.times(r).minus(1).sqrt().plus(r),f=!0,n.precision=e,n.rounding=t,r.ln()):new n(r)},M.inverseHyperbolicSine=M.asinh=function(){var e,t,r=this,n=r.constructor;return!r.isFinite()||r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+2*Math.max(Math.abs(r.e),r.sd())+6,n.rounding=1,f=!1,r=r.times(r).plus(1).sqrt().plus(r),f=!0,n.precision=e,n.rounding=t,r.ln())},M.inverseHyperbolicTangent=M.atanh=function(){var e,t,r,n,i=this,o=i.constructor;return i.isFinite()?i.e>=0?new o(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(e=o.precision,t=o.rounding,n=i.sd(),Math.max(n,e)<2*-i.e-1?V(new o(i),e,t,!0):(o.precision=r=n-i.e,i=I(i.plus(1),new o(1).minus(i),r+e,1),o.precision=e+4,o.rounding=1,i=i.ln(),o.precision=e,o.rounding=t,i.times(.5))):new o(NaN)},M.inverseSine=M.asin=function(){var e,t,r,n,i=this,o=i.constructor;return i.isZero()?new o(i):(t=i.abs().cmp(1),r=o.precision,n=o.rounding,-1!==t?0===t?((e=j(o,r+4,n).times(.5)).s=i.s,e):new o(NaN):(o.precision=r+6,o.rounding=1,i=i.div(new o(1).minus(i.times(i)).sqrt().plus(1)).atan(),o.precision=r,o.rounding=n,i.times(2)))},M.inverseTangent=M.atan=function(){var e,t,r,n,i,o,s,a,c,u=this,d=u.constructor,l=d.precision,h=d.rounding;if(u.isFinite()){if(u.isZero())return new d(u);if(u.abs().eq(1)&&l+4<=S)return(s=j(d,l+4,h).times(.25)).s=u.s,s}else{if(!u.s)return new d(NaN);if(l+4<=S)return(s=j(d,l+4,h).times(.5)).s=u.s,s}for(d.precision=a=l+10,d.rounding=1,e=r=Math.min(28,a/7+2|0);e;--e)u=u.div(u.times(u).plus(1).sqrt().plus(1));for(f=!1,t=Math.ceil(a/7),n=1,c=u.times(u),s=new d(u),i=u;-1!==e;)if(i=i.times(c),o=s.minus(i.div(n+=2)),i=i.times(c),void 0!==(s=o.plus(i.div(n+=2))).d[t])for(e=t;s.d[e]===o.d[e]&&e--;);return r&&(s=s.times(2<<r-1)),f=!0,V(s,d.precision=l,d.rounding=h,!0)},M.isFinite=function(){return!!this.d},M.isInteger=M.isInt=function(){return!!this.d&&b(this.e/7)>this.d.length-2},M.isNaN=function(){return!this.s},M.isNegative=M.isNeg=function(){return this.s<0},M.isPositive=M.isPos=function(){return this.s>0},M.isZero=function(){return!!this.d&&0===this.d[0]},M.lessThan=M.lt=function(e){return this.cmp(e)<0},M.lessThanOrEqualTo=M.lte=function(e){return this.cmp(e)<1},M.logarithm=M.log=function(e){var t,r,n,i,o,s,a,c,u=this,d=u.constructor,l=d.precision,h=d.rounding;if(null==e)e=new d(10),t=!0;else{if(r=(e=new d(e)).d,e.s<0||!r||!r[0]||e.eq(1))return new d(NaN);t=e.eq(10)}if(r=u.d,u.s<0||!r||!r[0]||u.eq(1))return new d(r&&!r[0]?-1/0:1!=u.s?NaN:r?0:1/0);if(t)if(r.length>1)o=!0;else{for(i=r[0];i%10==0;)i/=10;o=1!==i}if(f=!1,s=W(u,a=l+5),n=t?C(d,a+10):W(e,a),O((c=I(s,n,a,1)).d,i=l,h))do{if(s=W(u,a+=10),n=t?C(d,a+10):W(e,a),c=I(s,n,a,1),!o){+A(c.d).slice(i+1,i+15)+1==1e14&&(c=V(c,l+1,0));break}}while(O(c.d,i+=10,h));return f=!0,V(c,l,h)},M.minus=M.sub=function(e){var t,r,n,i,o,s,a,c,u,d,l,h,p=this,m=p.constructor;if(e=new m(e),!p.d||!e.d)return p.s&&e.s?p.d?e.s=-e.s:e=new m(e.d||p.s!==e.s?p:NaN):e=new m(NaN),e;if(p.s!=e.s)return e.s=-e.s,p.plus(e);if(u=p.d,h=e.d,a=m.precision,c=m.rounding,!u[0]||!h[0]){if(h[0])e.s=-e.s;else{if(!u[0])return new m(3===c?-0:0);e=new m(p)}return f?V(e,a,c):e}if(r=b(e.e/7),d=b(p.e/7),u=u.slice(),o=d-r){for((l=o<0)?(t=u,o=-o,s=h.length):(t=h,r=d,s=u.length),o>(n=Math.max(Math.ceil(a/7),s)+2)&&(o=n,t.length=1),t.reverse(),n=o;n--;)t.push(0);t.reverse()}else{for((l=(n=u.length)<(s=h.length))&&(s=n),n=0;n<s;n++)if(u[n]!=h[n]){l=u[n]<h[n];break}o=0}for(l&&(t=u,u=h,h=t,e.s=-e.s),s=u.length,n=h.length-s;n>0;--n)u[s++]=0;for(n=h.length;n>o;){if(u[--n]<h[n]){for(i=n;i&&0===u[--i];)u[i]=k-1;--u[i],u[n]+=k}u[n]-=h[n]}for(;0===u[--s];)u.pop();for(;0===u[0];u.shift())--r;return u[0]?(e.d=u,e.e=z(u,r),f?V(e,a,c):e):new m(3===c?-0:0)},M.modulo=M.mod=function(e){var t,r=this,n=r.constructor;return e=new n(e),!r.d||!e.s||e.d&&!e.d[0]?new n(NaN):!e.d||r.d&&!r.d[0]?V(new n(r),n.precision,n.rounding):(f=!1,9==n.modulo?(t=I(r,e.abs(),0,3,1)).s*=e.s:t=I(r,e,0,n.modulo,1),t=t.times(e),f=!0,r.minus(t))},M.naturalExponential=M.exp=function(){return q(this)},M.naturalLogarithm=M.ln=function(){return W(this)},M.negated=M.neg=function(){var e=new this.constructor(this);return e.s=-e.s,V(e)},M.plus=M.add=function(e){var t,r,n,i,o,s,a,c,u,d,l=this,h=l.constructor;if(e=new h(e),!l.d||!e.d)return l.s&&e.s?l.d||(e=new h(e.d||l.s===e.s?l:NaN)):e=new h(NaN),e;if(l.s!=e.s)return e.s=-e.s,l.minus(e);if(u=l.d,d=e.d,a=h.precision,c=h.rounding,!u[0]||!d[0])return d[0]||(e=new h(l)),f?V(e,a,c):e;if(o=b(l.e/7),n=b(e.e/7),u=u.slice(),i=o-n){for(i<0?(r=u,i=-i,s=d.length):(r=d,n=o,s=u.length),i>(s=(o=Math.ceil(a/7))>s?o+1:s+1)&&(i=s,r.length=1),r.reverse();i--;)r.push(0);r.reverse()}for((s=u.length)-(i=d.length)<0&&(i=s,r=d,d=u,u=r),t=0;i;)t=(u[--i]=u[i]+d[i]+t)/k|0,u[i]%=k;for(t&&(u.unshift(t),++n),s=u.length;0==u[--s];)u.pop();return e.d=u,e.e=z(u,n),f?V(e,a,c):e},M.precision=M.sd=function(e){var t,r=this;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(h+e);return r.d?(t=L(r.d),e&&r.e+1>t&&(t=r.e+1)):t=NaN,t},M.round=function(){var e=this,t=e.constructor;return V(new t(e),e.e+1,t.rounding)},M.sine=M.sin=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+Math.max(r.e,r.sd())+7,n.rounding=1,r=function(e,t){var r,n=t.d.length;if(n<3)return t.isZero()?t:G(e,2,t,t);r=(r=1.4*Math.sqrt(n))>16?16:0|r,t=t.times(1/Z(5,r)),t=G(e,2,t,t);for(var i,o=new e(5),s=new e(16),a=new e(20);r--;)i=t.times(t),t=t.times(o.plus(i.times(s.times(i).minus(a))));return t}(n,Y(n,r)),n.precision=e,n.rounding=t,V(i>2?r.neg():r,e,t,!0)):new n(NaN)},M.squareRoot=M.sqrt=function(){var e,t,r,n,i,o,s=this,a=s.d,c=s.e,u=s.s,d=s.constructor;if(1!==u||!a||!a[0])return new d(!u||u<0&&(!a||a[0])?NaN:a?s:1/0);for(f=!1,0==(u=Math.sqrt(+s))||u==1/0?(((t=A(a)).length+c)%2==0&&(t+="0"),u=Math.sqrt(t),c=b((c+1)/2)-(c<0||c%2),n=new d(t=u==1/0?"5e"+c:(t=u.toExponential()).slice(0,t.indexOf("e")+1)+c)):n=new d(u.toString()),r=(c=d.precision)+3;;)if(n=(o=n).plus(I(s,o,r+2,1)).times(.5),A(o.d).slice(0,r)===(t=A(n.d)).slice(0,r)){if("9999"!=(t=t.slice(r-3,r+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(V(n,c+1,1),e=!n.times(n).eq(s));break}if(!i&&(V(o,c+1,0),o.times(o).eq(s))){n=o;break}r+=4,i=1}return f=!0,V(n,c,d.rounding,e)},M.tangent=M.tan=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+10,n.rounding=1,(r=r.sin()).s=1,r=I(r,new n(1).minus(r.times(r)).sqrt(),e+10,0),n.precision=e,n.rounding=t,V(2==i||4==i?r.neg():r,e,t,!0)):new n(NaN)},M.times=M.mul=function(e){var t,r,n,i,o,s,a,c,u,d=this,l=d.constructor,h=d.d,p=(e=new l(e)).d;if(e.s*=d.s,!(h&&h[0]&&p&&p[0]))return new l(!e.s||h&&!h[0]&&!p||p&&!p[0]&&!h?NaN:h&&p?0*e.s:e.s/0);for(r=b(d.e/7)+b(e.e/7),(c=h.length)<(u=p.length)&&(o=h,h=p,p=o,s=c,c=u,u=s),o=[],n=s=c+u;n--;)o.push(0);for(n=u;--n>=0;){for(t=0,i=c+n;i>n;)a=o[i]+p[n]*h[i-n-1]+t,o[i--]=a%k|0,t=a/k|0;o[i]=(o[i]+t)%k|0}for(;!o[--s];)o.pop();return t?++r:o.shift(),e.d=o,e.e=z(o,r),f?V(e,l.precision,l.rounding):e},M.toBinary=function(e,t){return J(this,2,e,t)},M.toDecimalPlaces=M.toDP=function(e,t){var r=this,n=r.constructor;return r=new n(r),void 0===e?r:(N(e,0,s),void 0===t?t=n.rounding:N(t,0,8),V(r,e+r.e+1,t))},M.toExponential=function(e,t){var r,n=this,i=n.constructor;return void 0===e?r=E(n,!0):(N(e,0,s),void 0===t?t=i.rounding:N(t,0,8),r=E(n=V(new i(n),e+1,t),!0,e+1)),n.isNeg()&&!n.isZero()?"-"+r:r},M.toFixed=function(e,t){var r,n,i=this,o=i.constructor;return void 0===e?r=E(i):(N(e,0,s),void 0===t?t=o.rounding:N(t,0,8),r=E(n=V(new o(i),e+i.e+1,t),!1,e+n.e+1)),i.isNeg()&&!i.isZero()?"-"+r:r},M.toFraction=function(e){var t,r,n,i,o,s,a,c,u,d,l,p,m=this,y=m.d,b=m.constructor;if(!y)return new b(m);if(u=r=new b(1),n=c=new b(0),s=(o=(t=new b(n)).e=L(y)-m.e-1)%7,t.d[0]=g(10,s<0?7+s:s),null==e)e=o>0?t:u;else{if(!(a=new b(e)).isInt()||a.lt(u))throw Error(h+a);e=a.gt(t)?o>0?t:u:a}for(f=!1,a=new b(A(y)),d=b.precision,b.precision=o=7*y.length*2;l=I(a,t,0,1,1),1!=(i=r.plus(l.times(n))).cmp(e);)r=n,n=i,i=u,u=c.plus(l.times(i)),c=i,i=t,t=a.minus(l.times(i)),a=i;return i=I(e.minus(r),n,0,1,1),c=c.plus(i.times(u)),r=r.plus(i.times(n)),c.s=u.s=m.s,p=I(u,n,o,1).minus(m).abs().cmp(I(c,r,o,1).minus(m).abs())<1?[u,n]:[c,r],b.precision=d,f=!0,p},M.toHexadecimal=M.toHex=function(e,t){return J(this,16,e,t)},M.toNearest=function(e,t){var r=this,n=r.constructor;if(r=new n(r),null==e){if(!r.d)return r;e=new n(1),t=n.rounding}else{if(e=new n(e),void 0===t?t=n.rounding:N(t,0,8),!r.d)return e.s?r:e;if(!e.d)return e.s&&(e.s=r.s),e}return e.d[0]?(f=!1,r=I(r,e,0,t,1).times(e),f=!0,V(r)):(e.s=r.s,r=e),r},M.toNumber=function(){return+this},M.toOctal=function(e,t){return J(this,8,e,t)},M.toPower=M.pow=function(e){var t,r,n,i,o,s,a=this,c=a.constructor,u=+(e=new c(e));if(!(a.d&&e.d&&a.d[0]&&e.d[0]))return new c(g(+a,u));if((a=new c(a)).eq(1))return a;if(n=c.precision,o=c.rounding,e.eq(1))return V(a,n,o);if((t=b(e.e/7))>=e.d.length-1&&(r=u<0?-u:u)<=9007199254740991)return i=B(c,a,r,n),e.s<0?new c(1).div(i):V(i,n,o);if((s=a.s)<0){if(t<e.d.length-1)return new c(NaN);if(0==(1&e.d[t])&&(s=1),0==a.e&&1==a.d[0]&&1==a.d.length)return a.s=s,a}return(t=0!=(r=g(+a,u))&&isFinite(r)?new c(r+"").e:b(u*(Math.log("0."+A(a.d))/Math.LN10+a.e+1)))>c.maxE+1||t<c.minE-1?new c(t>0?s/0:0):(f=!1,c.rounding=a.s=1,r=Math.min(12,(t+"").length),(i=q(e.times(W(a,n+r)),n)).d&&O((i=V(i,n+5,1)).d,n,o)&&(t=n+10,+A((i=V(q(e.times(W(a,t+r)),t),t+5,1)).d).slice(n+1,n+15)+1==1e14&&(i=V(i,n+1,0))),i.s=s,f=!0,c.rounding=o,V(i,n,o))},M.toPrecision=function(e,t){var r,n=this,i=n.constructor;return void 0===e?r=E(n,n.e<=i.toExpNeg||n.e>=i.toExpPos):(N(e,1,s),void 0===t?t=i.rounding:N(t,0,8),r=E(n=V(new i(n),e,t),e<=n.e||n.e<=i.toExpNeg,e)),n.isNeg()&&!n.isZero()?"-"+r:r},M.toSignificantDigits=M.toSD=function(e,t){var r=this.constructor;return void 0===e?(e=r.precision,t=r.rounding):(N(e,1,s),void 0===t?t=r.rounding:N(t,0,8)),V(new r(this),e,t)},M.toString=function(){var e=this,t=e.constructor,r=E(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+r:r},M.truncated=M.trunc=function(){return V(new this.constructor(this),this.e+1,1)},M.valueOf=M.toJSON=function(){var e=this,t=e.constructor,r=E(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+r:r};var I=function(){function e(e,t,r){var n,i=0,o=e.length;for(e=e.slice();o--;)n=e[o]*t+i,e[o]=n%r|0,i=n/r|0;return i&&e.unshift(i),e}function t(e,t,r,n){var i,o;if(r!=n)o=r>n?1:-1;else for(i=o=0;i<r;i++)if(e[i]!=t[i]){o=e[i]>t[i]?1:-1;break}return o}function n(e,t,r,n){for(var i=0;r--;)e[r]-=i,i=e[r]<t[r]?1:0,e[r]=i*n+e[r]-t[r];for(;!e[0]&&e.length>1;)e.shift()}return function(i,o,s,a,c,u){var d,f,l,h,p,m,y,g,v,w,x,P,T,S,M,A,N,O,H,I,E=i.constructor,z=i.s==o.s?1:-1,C=i.d,j=o.d;if(!(C&&C[0]&&j&&j[0]))return new E(i.s&&o.s&&(C?!j||C[0]!=j[0]:j)?C&&0==C[0]||!j?0*z:z/0:NaN);for(u?(p=1,f=i.e-o.e):(u=k,p=7,f=b(i.e/p)-b(o.e/p)),H=j.length,N=C.length,w=(v=new E(z)).d=[],l=0;j[l]==(C[l]||0);l++);if(j[l]>(C[l]||0)&&f--,null==s?(S=s=E.precision,a=E.rounding):S=c?s+(i.e-o.e)+1:s,S<0)w.push(1),m=!0;else{if(S=S/p+2|0,l=0,1==H){for(h=0,j=j[0],S++;(l<N||h)&&S--;l++)M=h*u+(C[l]||0),w[l]=M/j|0,h=M%j|0;m=h||l<N}else{for((h=u/(j[0]+1)|0)>1&&(j=e(j,h,u),C=e(C,h,u),H=j.length,N=C.length),A=H,P=(x=C.slice(0,H)).length;P<H;)x[P++]=0;(I=j.slice()).unshift(0),O=j[0],j[1]>=u/2&&++O;do{h=0,(d=t(j,x,H,P))<0?(T=x[0],H!=P&&(T=T*u+(x[1]||0)),(h=T/O|0)>1?(h>=u&&(h=u-1),1==(d=t(y=e(j,h,u),x,g=y.length,P=x.length))&&(h--,n(y,H<g?I:j,g,u))):(0==h&&(d=h=1),y=j.slice()),(g=y.length)<P&&y.unshift(0),n(x,y,P,u),-1==d&&(d=t(j,x,H,P=x.length))<1&&(h++,n(x,H<P?I:j,P,u)),P=x.length):0===d&&(h++,x=[0]),w[l++]=h,d&&x[0]?x[P++]=C[A]||0:(x=[C[A]],P=1)}while((A++<N||void 0!==x[0])&&S--);m=void 0!==x[0]}w[0]||w.shift()}if(1==p)v.e=f,r=m;else{for(l=1,h=w[0];h>=10;h/=10)l++;v.e=l+f*p-1,V(v,c?s+v.e+1:s,a,m)}return v}}();function V(e,t,r,n){var i,o,s,a,c,u,d,l,h,p=e.constructor;e:if(null!=t){if(!(l=e.d))return e;for(i=1,a=l[0];a>=10;a/=10)i++;if((o=t-i)<0)o+=7,s=t,c=(d=l[h=0])/g(10,i-s-1)%10|0;else if((h=Math.ceil((o+1)/7))>=(a=l.length)){if(!n)break e;for(;a++<=h;)l.push(0);d=c=0,i=1,s=(o%=7)-7+1}else{for(d=a=l[h],i=1;a>=10;a/=10)i++;c=(s=(o%=7)-7+i)<0?0:d/g(10,i-s-1)%10|0}if(n=n||t<0||void 0!==l[h+1]||(s<0?d:d%g(10,i-s-1)),u=r<4?(c||n)&&(0==r||r==(e.s<0?3:2)):c>5||5==c&&(4==r||n||6==r&&(o>0?s>0?d/g(10,i-s):0:l[h-1])%10&1||r==(e.s<0?8:7)),t<1||!l[0])return l.length=0,u?(t-=e.e+1,l[0]=g(10,(7-t%7)%7),e.e=-t||0):l[0]=e.e=0,e;if(0==o?(l.length=h,a=1,h--):(l.length=h+1,a=g(10,7-o),l[h]=s>0?(d/g(10,i-s)%g(10,s)|0)*a:0),u)for(;;){if(0==h){for(o=1,s=l[0];s>=10;s/=10)o++;for(s=l[0]+=a,a=1;s>=10;s/=10)a++;o!=a&&(e.e++,l[0]==k&&(l[0]=1));break}if(l[h]+=a,l[h]!=k)break;l[h--]=0,a=1}for(o=l.length;0===l[--o];)l.pop()}return f&&(e.e>p.maxE?(e.d=null,e.e=NaN):e.e<p.minE&&(e.e=0,e.d=[0])),e}function E(e,t,r){if(!e.isFinite())return F(e);var n,i=e.e,o=A(e.d),s=o.length;return t?(r&&(n=r-s)>0?o=o.charAt(0)+"."+o.slice(1)+R(n):s>1&&(o=o.charAt(0)+"."+o.slice(1)),o=o+(e.e<0?"e":"e+")+e.e):i<0?(o="0."+R(-i-1)+o,r&&(n=r-s)>0&&(o+=R(n))):i>=s?(o+=R(i+1-s),r&&(n=r-i-1)>0&&(o=o+"."+R(n))):((n=i+1)<s&&(o=o.slice(0,n)+"."+o.slice(n)),r&&(n=r-s)>0&&(i+1===s&&(o+="."),o+=R(n))),o}function z(e,t){var r=e[0];for(t*=7;r>=10;r/=10)t++;return t}function C(e,t,r){if(t>T)throw f=!0,r&&(e.precision=r),Error(p);return V(new e(c),t,1,!0)}function j(e,t,r){if(t>S)throw Error(p);return V(new e(u),t,r,!0)}function L(e){var t=e.length-1,r=7*t+1;if(t=e[t]){for(;t%10==0;t/=10)r--;for(t=e[0];t>=10;t/=10)r++}return r}function R(e){for(var t="";e--;)t+="0";return t}function B(e,t,r,n){var i,o=new e(1),s=Math.ceil(n/7+4);for(f=!1;;){if(r%2&&K((o=o.times(t)).d,s)&&(i=!0),0===(r=b(r/2))){r=o.d.length-1,i&&0===o.d[r]&&++o.d[r];break}K((t=t.times(t)).d,s)}return f=!0,o}function D(e){return 1&e.d[e.d.length-1]}function X(e,t,r){for(var n,i=new e(t[0]),o=0;++o<t.length;){if(!(n=new e(t[o])).s){i=n;break}i[r](n)&&(i=n)}return i}function q(e,t){var r,n,i,o,s,a,c,u=0,d=0,l=0,h=e.constructor,p=h.rounding,m=h.precision;if(!e.d||!e.d[0]||e.e>17)return new h(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(null==t?(f=!1,c=m):c=t,a=new h(.03125);e.e>-2;)e=e.times(a),l+=5;for(c+=n=Math.log(g(2,l))/Math.LN10*2+5|0,r=o=s=new h(1),h.precision=c;;){if(o=V(o.times(e),c,1),r=r.times(++d),A((a=s.plus(I(o,r,c,1))).d).slice(0,c)===A(s.d).slice(0,c)){for(i=l;i--;)s=V(s.times(s),c,1);if(null!=t)return h.precision=m,s;if(!(u<3&&O(s.d,c-n,p,u)))return V(s,h.precision=m,p,f=!0);h.precision=c+=10,r=o=a=new h(1),d=0,u++}s=a}}function W(e,t){var r,n,i,o,s,a,c,u,d,l,h,p=1,m=e,y=m.d,b=m.constructor,g=b.rounding,v=b.precision;if(m.s<0||!y||!y[0]||!m.e&&1==y[0]&&1==y.length)return new b(y&&!y[0]?-1/0:1!=m.s?NaN:y?0:m);if(null==t?(f=!1,d=v):d=t,b.precision=d+=10,n=(r=A(y)).charAt(0),!(Math.abs(o=m.e)<15e14))return u=C(b,d+2,v).times(o+""),m=W(new b(n+"."+r.slice(1)),d-10).plus(u),b.precision=v,null==t?V(m,v,g,f=!0):m;for(;n<7&&1!=n||1==n&&r.charAt(1)>3;)n=(r=A((m=m.times(e)).d)).charAt(0),p++;for(o=m.e,n>1?(m=new b("0."+r),o++):m=new b(n+"."+r.slice(1)),l=m,c=s=m=I(m.minus(1),m.plus(1),d,1),h=V(m.times(m),d,1),i=3;;){if(s=V(s.times(h),d,1),A((u=c.plus(I(s,new b(i),d,1))).d).slice(0,d)===A(c.d).slice(0,d)){if(c=c.times(2),0!==o&&(c=c.plus(C(b,d+2,v).times(o+""))),c=I(c,new b(p),d,1),null!=t)return b.precision=v,c;if(!O(c.d,d-10,g,a))return V(c,b.precision=v,g,f=!0);b.precision=d+=10,u=s=m=I(l.minus(1),l.plus(1),d,1),h=V(m.times(m),d,1),i=a=1}c=u,i+=2}}function F(e){return String(e.s*e.s/0)}function U(e,t){var r,n,i;for((r=t.indexOf("."))>-1&&(t=t.replace(".","")),(n=t.search(/e/i))>0?(r<0&&(r=n),r+=+t.slice(n+1),t=t.substring(0,n)):r<0&&(r=t.length),n=0;48===t.charCodeAt(n);n++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(n,i)){if(i-=n,e.e=r=r-n-1,e.d=[],n=(r+1)%7,r<0&&(n+=7),n<i){for(n&&e.d.push(+t.slice(0,n)),i-=7;n<i;)e.d.push(+t.slice(n,n+=7));n=7-(t=t.slice(n)).length}else n-=i;for(;n--;)t+="0";e.d.push(+t),f&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function G(e,t,r,n,i){var o,s,a,c,u=e.precision,d=Math.ceil(u/7);for(f=!1,c=r.times(r),a=new e(n);;){if(s=I(a.times(c),new e(t++*t++),u,1),a=i?n.plus(s):n.minus(s),n=I(s.times(c),new e(t++*t++),u,1),void 0!==(s=a.plus(n)).d[d]){for(o=d;s.d[o]===a.d[o]&&o--;);if(-1==o)break}o=a,a=n,n=s,s=o}return f=!0,s.d.length=d+1,s}function Z(e,t){for(var r=e;--t;)r*=e;return r}function Y(e,t){var r,n=t.s<0,o=j(e,e.precision,1),s=o.times(.5);if((t=t.abs()).lte(s))return i=n?4:1,t;if((r=t.divToInt(o)).isZero())i=n?3:2;else{if((t=t.minus(r.times(o))).lte(s))return i=D(r)?n?2:3:n?4:1,t;i=D(r)?n?1:4:n?3:2}return t.minus(o).abs()}function J(e,t,n,i){var o,c,u,d,f,l,h,p,m,y=e.constructor,b=void 0!==n;if(b?(N(n,1,s),void 0===i?i=y.rounding:N(i,0,8)):(n=y.precision,i=y.rounding),e.isFinite()){for(b?(o=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):o=t,(u=(h=E(e)).indexOf("."))>=0&&(h=h.replace(".",""),(m=new y(1)).e=h.length-u,m.d=H(E(m),10,o),m.e=m.d.length),c=f=(p=H(h,10,o)).length;0==p[--f];)p.pop();if(p[0]){if(u<0?c--:((e=new y(e)).d=p,e.e=c,p=(e=I(e,m,n,i,0,o)).d,c=e.e,l=r),u=p[n],d=o/2,l=l||void 0!==p[n+1],l=i<4?(void 0!==u||l)&&(0===i||i===(e.s<0?3:2)):u>d||u===d&&(4===i||l||6===i&&1&p[n-1]||i===(e.s<0?8:7)),p.length=n,l)for(;++p[--n]>o-1;)p[n]=0,n||(++c,p.unshift(1));for(f=p.length;!p[f-1];--f);for(u=0,h="";u<f;u++)h+=a.charAt(p[u]);if(b){if(f>1)if(16==t||8==t){for(u=16==t?4:3,--f;f%u;f++)h+="0";for(f=(p=H(h,o,t)).length;!p[f-1];--f);for(u=1,h="1.";u<f;u++)h+=a.charAt(p[u])}else h=h.charAt(0)+"."+h.slice(1);h=h+(c<0?"p":"p+")+c}else if(c<0){for(;++c;)h="0"+h;h="0."+h}else if(++c>f)for(c-=f;c--;)h+="0";else c<f&&(h=h.slice(0,c)+"."+h.slice(c))}else h=b?"0p+0":"0";h=(16==t?"0x":2==t?"0b":8==t?"0o":"")+h}else h=F(e);return e.s<0?"-"+h:h}function K(e,t){if(e.length>t)return e.length=t,!0}function Q(e){return new this(e).abs()}function _(e){return new this(e).acos()}function $(e){return new this(e).acosh()}function ee(e,t){return new this(e).plus(t)}function te(e){return new this(e).asin()}function re(e){return new this(e).asinh()}function ne(e){return new this(e).atan()}function ie(e){return new this(e).atanh()}function oe(e,t){e=new this(e),t=new this(t);var r,n=this.precision,i=this.rounding,o=n+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(r=t.s<0?j(this,n,i):new this(0)).s=e.s:!e.d||t.isZero()?(r=j(this,o,1).times(.5)).s=e.s:t.s<0?(this.precision=o,this.rounding=1,r=this.atan(I(e,t,o,1)),t=j(this,o,1),this.precision=n,this.rounding=i,r=e.s<0?r.minus(t):r.plus(t)):r=this.atan(I(e,t,o,1)):(r=j(this,o,1).times(t.s>0?.25:.75)).s=e.s:r=new this(NaN),r}function se(e){return new this(e).cbrt()}function ae(e){return V(e=new this(e),e.e+1,2)}function ce(e,t,r){return new this(e).clamp(t,r)}function ue(e){if(!e||"object"!=typeof e)throw Error(l+"Object expected");var t,r,n,i=!0===e.defaults,a=["precision",1,s,"rounding",0,8,"toExpNeg",-o,0,"toExpPos",0,o,"maxE",0,o,"minE",-o,0,"modulo",0,9];for(t=0;t<a.length;t+=3)if(r=a[t],i&&(this[r]=d[r]),void 0!==(n=e[r])){if(!(b(n)===n&&n>=a[t+1]&&n<=a[t+2]))throw Error(h+r+": "+n);this[r]=n}if(r="crypto",i&&(this[r]=d[r]),void 0!==(n=e[r])){if(!0!==n&&!1!==n&&0!==n&&1!==n)throw Error(h+r+": "+n);if(n){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(m);this[r]=!0}else this[r]=!1}return this}function de(e){return new this(e).cos()}function fe(e){return new this(e).cosh()}function le(e,t){return new this(e).div(t)}function he(e){return new this(e).exp()}function pe(e){return V(e=new this(e),e.e+1,3)}function me(){var e,t,r=new this(0);for(f=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)r.d&&(r=r.plus(t.times(t)));else{if(t.s)return f=!0,new this(1/0);r=t}return f=!0,r.sqrt()}function ye(e){return e instanceof t||e&&e.toStringTag===y||!1}function be(e){return new this(e).ln()}function ge(e,t){return new this(e).log(t)}function ve(e){return new this(e).log(2)}function we(e){return new this(e).log(10)}function xe(){return X(this,arguments,"lt")}function Pe(){return X(this,arguments,"gt")}function ke(e,t){return new this(e).mod(t)}function Te(e,t){return new this(e).mul(t)}function Se(e,t){return new this(e).pow(t)}function Me(e){var t,r,n,i,o=0,a=new this(1),c=[];if(void 0===e?e=this.precision:N(e,1,s),n=Math.ceil(e/7),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(n));o<n;)(i=t[o])>=429e7?t[o]=crypto.getRandomValues(new Uint32Array(1))[0]:c[o++]=i%1e7;else{if(!crypto.randomBytes)throw Error(m);for(t=crypto.randomBytes(n*=4);o<n;)(i=t[o]+(t[o+1]<<8)+(t[o+2]<<16)+((127&t[o+3])<<24))>=214e7?crypto.randomBytes(4).copy(t,o):(c.push(i%1e7),o+=4);o=n/4}else for(;o<n;)c[o++]=1e7*Math.random()|0;for(e%=7,(n=c[--o])&&e&&(i=g(10,7-e),c[o]=(n/i|0)*i);0===c[o];o--)c.pop();if(o<0)r=0,c=[0];else{for(r=-1;0===c[0];r-=7)c.shift();for(n=1,i=c[0];i>=10;i/=10)n++;n<7&&(r-=7-n)}return a.e=r,a.d=c,a}function Ae(e){return V(e=new this(e),e.e+1,this.rounding)}function Ne(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Oe(e){return new this(e).sin()}function He(e){return new this(e).sinh()}function Ie(e){return new this(e).sqrt()}function Ve(e,t){return new this(e).sub(t)}function Ee(){var e=0,t=arguments,r=new this(t[e]);for(f=!1;r.s&&++e<t.length;)r=r.plus(t[e]);return f=!0,V(r,this.precision,this.rounding)}function ze(e){return new this(e).tan()}function Ce(e){return new this(e).tanh()}function je(e){return V(e=new this(e),e.e+1,1)}t=function e(r){var n,i,o;function s(e){var r,n,i,o=this;if(!(o instanceof s))return new s(e);if(o.constructor=s,ye(e))return o.s=e.s,void(f?!e.d||e.e>s.maxE?(o.e=NaN,o.d=null):e.e<s.minE?(o.e=0,o.d=[0]):(o.e=e.e,o.d=e.d.slice()):(o.e=e.e,o.d=e.d?e.d.slice():e.d));if("number"===(i=typeof e)){if(0===e)return o.s=1/e<0?-1:1,o.e=0,void(o.d=[0]);if(e<0?(e=-e,o.s=-1):o.s=1,e===~~e&&e<1e7){for(r=0,n=e;n>=10;n/=10)r++;return void(f?r>s.maxE?(o.e=NaN,o.d=null):r<s.minE?(o.e=0,o.d=[0]):(o.e=r,o.d=[e]):(o.e=r,o.d=[e]))}return 0*e!=0?(e||(o.s=NaN),o.e=NaN,void(o.d=null)):U(o,e.toString())}if("string"!==i)throw Error(h+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),o.s=-1):(43===n&&(e=e.slice(1)),o.s=1),P.test(e)?U(o,e):function(e,r){var n,i,o,s,a,c,u,d,l;if(r.indexOf("_")>-1){if(r=r.replace(/(\d)_(?=\d)/g,"$1"),P.test(r))return U(e,r)}else if("Infinity"===r||"NaN"===r)return+r||(e.s=NaN),e.e=NaN,e.d=null,e;if(w.test(r))n=16,r=r.toLowerCase();else if(v.test(r))n=2;else{if(!x.test(r))throw Error(h+r);n=8}for((s=r.search(/p/i))>0?(u=+r.slice(s+1),r=r.substring(2,s)):r=r.slice(2),a=(s=r.indexOf("."))>=0,i=e.constructor,a&&(s=(c=(r=r.replace(".","")).length)-s,o=B(i,new i(n),s,2*s)),s=l=(d=H(r,n,k)).length-1;0===d[s];--s)d.pop();return s<0?new i(0*e.s):(e.e=z(d,l),e.d=d,f=!1,a&&(e=I(e,o,4*c)),u&&(e=e.times(Math.abs(u)<54?g(2,u):t.pow(2,u))),f=!0,e)}(o,e)}if(s.prototype=M,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=ue,s.clone=e,s.isDecimal=ye,s.abs=Q,s.acos=_,s.acosh=$,s.add=ee,s.asin=te,s.asinh=re,s.atan=ne,s.atanh=ie,s.atan2=oe,s.cbrt=se,s.ceil=ae,s.clamp=ce,s.cos=de,s.cosh=fe,s.div=le,s.exp=he,s.floor=pe,s.hypot=me,s.ln=be,s.log=ge,s.log10=we,s.log2=ve,s.max=xe,s.min=Pe,s.mod=ke,s.mul=Te,s.pow=Se,s.random=Me,s.round=Ae,s.sign=Ne,s.sin=Oe,s.sinh=He,s.sqrt=Ie,s.sub=Ve,s.sum=Ee,s.tan=ze,s.tanh=Ce,s.trunc=je,void 0===r&&(r={}),r&&!0!==r.defaults)for(o=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],n=0;n<o.length;)r.hasOwnProperty(i=o[n++])||(r[i]=this[i]);return s.config(r),s}(d),t.prototype.constructor=t,t.default=t.Decimal=t,c=new t(c),u=new t(u),"function"==typeof define&&define.amd?define((function(){return t})):BA?("function"==typeof Symbol&&"symbol"==typeof Symbol.iterator&&(M[Symbol.for("nodejs.util.inspect.custom")]=M.toString,M[Symbol.toStringTag]="Decimal"),BA=t):(e||(e="undefined"!=typeof self&&self&&self.self==self?self:window),n=e.Decimal,t.noConflict=function(){return e.Decimal=n,t},e.Decimal=t)}(BA);X=s("ctT9w");function DA(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function XA(t){for(var r=arguments,n=function(n){var i=null!=r[n]?r[n]:{};n%2?DA(Object(i),!0).forEach((function(r){e(d)(t,r,i[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):DA(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))},i=1;i<arguments.length;i++)n(i);return t}var qA={code:401,message:"Init Polkadot api is failed"},WA=FA(10).pow(12);function FA(e){return new BA.Decimal(e)}var UA=function(){function t(r){e(a)(this,t),e(d)(this,"api",null),e(d)(this,"initPromise",null),e(d)(this,"isError",!1),this.parent=r}var r,n,i,o,s,u;return e(c)(t,[{key:"isInit",get:function(){return this.initPromise&&!this.isError}},{key:"init",value:(u=e(f)(e(h).mark((function t(){var r=this;return e(h).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.isInit||(this.initPromise=new Promise(function(){var t=e(f)(e(h).mark((function t(n,i){var o,s;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,o=r.parent.config.crowdloan,s=new ta(o.wsRpc),e.next=5,RA.create({provider:s});case 5:r.api=e.sent,n(r.api),e.next=13;break;case 9:e.prev=9,e.t0=e.catch(0),r.isError=!0,i(qA);case 13:case"end":return e.stop()}}),t,null,[[0,9]])})));return function(e,r){return t.apply(this,arguments)}}())),t.abrupt("return",this.initPromise);case 2:case"end":return t.stop()}}),t,this)}))),function(){return u.apply(this,arguments)})},{key:"getCrowdloanParams",value:(s=e(f)(e(h).mark((function t(){return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",this.parent.account.getCrowdloanParams());case 1:case"end":return e.stop()}}),t,this)}))),function(){return s.apply(this,arguments)})},{key:"getAccountBalance",value:(o=e(f)(e(h).mark((function t(r){var n,i,o;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.init();case 2:return e.next=4,this.api.query.system.account(r);case 4:return n=e.sent,i=FA(n.data.free.toString()),o=i.plus(n.data.reserved.toString()),e.abrupt("return",{available:i.toString(),total:o.toString(),availablePretty:i.div(WA).toDecimalPlaces(5),totalPretty:o.div(WA).toDecimalPlaces(5)});case 8:case"end":return e.stop()}}),t,this)}))),function(e){return o.apply(this,arguments)})},{key:"contribute",value:(i=e(f)(e(h).mark((function t(r,n){var i;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._createContributeTx(r,n);case 2:return i=e.sent,e.next=5,this.parent.extension.sendTx(r,i);case 5:return e.abrupt("return",e.sent);case 6:case"end":return e.stop()}}),t,this)}))),function(e,t){return i.apply(this,arguments)})},{key:"calcContributeParams",value:function(e,t){var r=t.bonuses,n=t.balance,i=FA(this.parent.config.crowdloan.minContribute).mul(WA),o=FA(1.5).mul(WA),s=FA(e).mul(WA),a=FA(e).mul(o),c=r.map((function(e){var t=a.div(100).mul(e.bonus);return XA(XA({},e),{},{bonus:t,bonusPretty:t.div(WA).toDecimalPlaces(5)})})),u=c.reduce((function(e,t){return e.plus(t.bonus)}),FA(e).mul(o));return{ratio:o.toString(),amount:s.toString(),convertedAmount:a.toString(),totalAmount:u.toString(),prettyConvertedAmount:a.div(WA).toDecimalPlaces(5),prettyTotalAmount:u.div(WA).toDecimalPlaces(5),enoughBalance:FA(n).gte(s)&&s.gte(i),bonuses:c}}},{key:"hasContribute",value:(n=e(f)(e(h).mark((function t(r,n){var i,o,s,a,c;return e(h).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i=FA(this.parent.config.crowdloan.minContribute).mul(WA),e.next=3,this._createContributeTx(r,n);case 3:return o=e.sent,e.next=6,o.paymentInfo(r);case 6:return s=e.sent,e.next=9,this.getAccountBalance(r);case 9:return a=e.sent,c=FA(n).plus(s.partialFee.toString()),e.abrupt("return",FA(a.available).gte(c)&&c.gte(i));case 12:case"end":return e.stop()}}),t,this)}))),function(e,t){return n.apply(this,arguments)})},{key:"_createContributeTx",value:(r=e(f)(e(h).mark((function t(r,n){var i,o;return e(h).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.init();case 2:return i=this.parent.config.crowdloan.parachainId,t.next=5,this.parent.extension.getAccountByAddress(r);case 5:if(t.sent){t.next=8;break}throw jo(r);case 8:return o=new(e(X))(n),t.abrupt("return",this.api.tx.crowdloan.contribute(i,o,null));case 10:case"end":return t.stop()}}),t,this)}))),function(e,t){return r.apply(this,arguments)})}]),t}(),GA=function(){function t(r){e(a)(this,t),e(d)(this,"parent",null),this.parent=r}return e(c)(t,[{key:"base",get:function(){var e=localStorage.getItem(this.storageKey);return e=e?JSON.parse(e):{}},set:function(e){localStorage.setItem(this.storageKey,JSON.stringify(e))}},{key:"storageKey",get:function(){return this.parent.config.storageKey}},{key:"get",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=this.base;return void 0!==r[e]?r[e]:t}},{key:"set",value:function(e,t){var r=this.base;r[e]=t,this.base=r}},{key:"push",value:function(e,t){var r=this.base;r[e]||(r[e]=[]),r[e].push(t),this.base=r}},{key:"remove",value:function(e){var t=this.base;t[e]&&delete t[e],this.base=t}}]),t}(),ZA={appName:"Pontem Network",apiUrl:"https://pontem.network/api",storageKey:"pontem-storage",crowdloan:{wsRpc:"wss://demo1.pontem.network/ws_polkadot",parachainId:2001}},YA={code:101,message:'Need initialize app before use. Call "Pontem.create(config)"'},JA=function(){function t(r){e(a)(this,t),e(d)(this,"extension",null),e(d)(this,"account",null),e(d)(this,"config",null),this.config=Object.assign({},ZA,r),this.storage=new GA(this),this.extension=new Bo(this),this.account=new Ko(this),this.crowdloan=new UA(this)}return e(c)(t,null,[{key:"Extension",get:function(){if(!t.instance)throw YA;return t.instance.extension}},{key:"Account",get:function(){if(!t.instance)throw YA;return t.instance.account}},{key:"Crowdloan",get:function(){if(!t.instance)throw YA;return t.instance.crowdloan}},{key:"create",value:function(e){return t.instance=new t(e),t}}]),t}();e(d)(JA,"instance",null),window.PontemApp=JA}();